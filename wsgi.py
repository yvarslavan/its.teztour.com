#!/usr/bin/env python3
"""
WSGI —Ç–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞
–ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤–µ–±-—Å–µ—Ä–≤–µ—Ä–∞–º–∏ (Apache, Nginx + uWSGI/Gunicorn)
"""
import os
from pathlib import Path
from dotenv import load_dotenv
import logging



logging.basicConfig(
    filename='logs/flask_debug.log',
    level=logging.INFO,
    format='%(asctime)s %(levelname)s %(name)s %(message)s'
)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–≥–µ—Ä–∞ Flask
flask_logger = logging.getLogger('werkzeug')
flask_logger.setLevel(logging.INFO)
for handler in flask_logger.handlers:
    flask_logger.removeHandler(handler)
file_handler = logging.FileHandler('logs/flask_debug.log')
file_handler.setFormatter(logging.Formatter('%(asctime)s %(levelname)s %(name)s %(message)s'))
flask_logger.addHandler(file_handler)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–≥–µ—Ä–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (current_app.logger)
app_logger = logging.getLogger()
app_logger.setLevel(logging.INFO)
app_logger.addHandler(file_handler)
def setup_production_environment():
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞"""
    BASE_DIR = Path(__file__).resolve().parent

    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –æ–∫—Ä—É–∂–µ–Ω–∏–µ (–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ –û–°)
    env = 'production' if os.name != 'nt' else 'development'
    os.environ.setdefault('FLASK_ENV', env)

    # –í—ã–±–∏—Ä–∞–µ–º —Ñ–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    if env == 'production':
        env_file = BASE_DIR / '.env.production'
    else:
        env_file = BASE_DIR / '.env.development'

    # –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    if env_file.exists():
        load_dotenv(env_file)
        print(f"üì¶ –ó–∞–≥—Ä—É–∂–µ–Ω—ã –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–∑ {env_file}")
    else:
        print(f"‚ö†Ô∏è  –§–∞–π–ª {env_file} –Ω–µ –Ω–∞–π–¥–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã")
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –±–∞–∑–æ–≤—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞
        if env == 'production':
            os.environ.setdefault('FLASK_ENV', 'production')
            os.environ.setdefault('FLASK_DEBUG', 'False')
            os.environ.setdefault('WTF_CSRF_ENABLED', 'True')
            print("‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –±–∞–∑–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞")

    # –°–æ–∑–¥–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    db_dir = BASE_DIR / 'blog' / 'db'
    db_dir.mkdir(parents=True, exist_ok=True)

    print(f"üåç –û–∫—Ä—É–∂–µ–Ω–∏–µ: {env}")
    return env

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ–∫—Ä—É–∂–µ–Ω–∏–µ –ø—Ä–∏ –∏–º–ø–æ—Ä—Ç–µ –º–æ–¥—É–ª—è
environment = setup_production_environment()

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∏ —Å–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
from blog import create_app

app = create_app()

for handler in app.logger.handlers[:]:
    app.logger.removeHandler(handler)
app.logger.addHandler(file_handler)
app.logger.setLevel(logging.INFO)

# –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ç–æ–ª—å–∫–æ –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞
if environment == 'production':
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞
    app.config.update(
        SESSION_COOKIE_SECURE=True,
        SESSION_COOKIE_HTTPONLY=True,
        SESSION_COOKIE_SAMESITE='Lax',
        SESSION_COOKIE_DOMAIN='.tez-tour.com',
        REMEMBER_COOKIE_SECURE=True,
        REMEMBER_COOKIE_HTTPONLY=True,
        REMEMBER_COOKIE_SAMESITE='Lax'
    )
    print("üîí –ü—Ä–∏–º–µ–Ω–µ–Ω—ã –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞")

# –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
if app.debug or environment == 'development':
    print(f"üîß DEBUG —Ä–µ–∂–∏–º: {app.debug}")
    print(f"üîß TEMPLATES_AUTO_RELOAD: {app.config.get('TEMPLATES_AUTO_RELOAD')}")

if __name__ == "__main__":
    # –≠—Ç–æ—Ç –±–ª–æ–∫ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –ø—Ä—è–º–æ–º –∑–∞–ø—É—Å–∫–µ wsgi.py
    # –ù–µ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ app.py –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
    print("‚ö†Ô∏è  –ü—Ä—è–º–æ–π –∑–∞–ø—É—Å–∫ wsgi.py –Ω–µ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è!")
    print("   –î–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: python app.py")
    print("   –î–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ WSGI —Å–µ—Ä–≤–µ—Ä (gunicorn, uWSGI)")

    app.run(
        debug=(environment == 'development'),
        host='0.0.0.0',
        port=5000,
        use_reloader=False,
        threaded=True
    )
