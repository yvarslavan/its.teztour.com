/**
 * üö® –ú–û–î–ò–§–ò–¶–ò–†–û–í–ê–ù–ù–ê–Ø –í–ï–†–°–ò–Ø: –¢–û–õ–¨–ö–û –û–î–ù–û–†–ê–ó–û–í–´–ô –°–ë–†–û–° –§–ò–õ–¨–¢–†–û–í
 * –î–∞—Ç–∞: 25.12.2024
 * –í–µ—Ä—Å–∏—è: FILTER_FIX_FINAL
 */

console.log('üîß [FIXED] –ó–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è —Å –æ–¥–Ω–æ–∫—Ä–∞—Ç–Ω—ã–º —Å–±—Ä–æ—Å–æ–º —Ñ–∏–ª—å—Ç—Ä–æ–≤!');

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —Ä–∞–±–æ—Ç—ã –º–æ–¥—É–ª—è
let tasksDataTable;
window.tasksTable = null; // –î–ª—è –¥–æ—Å—Ç—É–ø–∞ –∏–∑ –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª–µ–π
window.detailedStatusData = {}; // –î–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ —Å—Ç–∞—Ç—É—Å–∞—Ö –∑–∞–¥–∞—á —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

// –ì–ª–æ–±–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤–∏–¥–∏–º–æ—Å—Ç—å—é –∫–Ω–æ–ø–æ–∫ –æ—á–∏—Å—Ç–∫–∏ —Ñ–∏–ª—å—Ç—Ä–æ–≤
window.updateFilterVisibility = function(selectElement) {
    if (!selectElement || selectElement.length === 0) {
        console.warn('[TasksPaginated] üîç updateFilterVisibility: selectElement –Ω–µ –Ω–∞–π–¥–µ–Ω');
        return;
    }

    const rawValue = selectElement.val();
    const value = rawValue || ''; // –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ null/undefined
    const filterId = selectElement.attr('id');
    const clearBtnId = '#clear-' + filterId.replace('-filter', '') + '-filter';
    const clearBtn = $(clearBtnId);
    const container = selectElement.closest('.filter-container');

    console.log('[TasksPaginated] üîç –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ –æ—á–∏—Å—Ç–∫–∏:', {
        filterId: filterId,
        rawValue: rawValue,
        value: value,
        valueType: typeof rawValue,
        isEmpty: !value || value === '' || value === 'null',
        clearBtnId: clearBtnId,
        clearBtnExists: clearBtn.length > 0,
        containerExists: container.length > 0
    });

    // –ë–æ–ª–µ–µ –Ω–∞–¥–µ–∂–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∑–Ω–∞—á–µ–Ω–∏—è
    const hasValue = value && value !== '' && value !== 'null' && value !== null && value !== undefined;

    if (hasValue) {
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
        clearBtn.addClass('show');
        clearBtn.css({
            'display': 'flex',
            'visibility': 'visible',
            'opacity': '1',
            'pointer-events': 'auto'
        });

        container.addClass('has-value');

        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∏–¥–∏–º–æ—Å—Ç–∏ –ø–æ—Å–ª–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∏–ª–µ–π
        setTimeout(() => {
            if (!clearBtn.is(':visible')) {
                console.warn('[TasksPaginated] ‚ö†Ô∏è –ö–Ω–æ–ø–∫–∞ –¥–æ —Å–∏—Ö –ø–æ—Ä –Ω–µ –≤–∏–¥–Ω–∞ –ø–æ—Å–ª–µ CSS, –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —á–µ—Ä–µ–∑ –∞—Ç—Ä–∏–±—É—Ç—ã');
                clearBtn.attr('style', 'display: flex !important; visibility: visible !important; opacity: 1 !important; pointer-events: auto !important;');
            }
        }, 50);

        console.log('[TasksPaginated] ‚úÖ –ö–Ω–æ–ø–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –ü–û–ö–ê–ó–ê–ù–ê –¥–ª—è', filterId, ', –∑–Ω–∞—á–µ–Ω–∏–µ:', value);
    } else {
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã —Å–∫—Ä—ã—Ç–∏—è
        clearBtn.removeClass('show');
        clearBtn.css({
            'display': 'none',
            'visibility': 'hidden',
            'opacity': '0',
            'pointer-events': 'none'
        });

        container.removeClass('has-value');
        console.log('[TasksPaginated] ‚ùå –ö–Ω–æ–ø–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –°–ö–†–´–¢–ê –¥–ª—è', filterId, ', –∑–Ω–∞—á–µ–Ω–∏–µ –ø—É—Å—Ç–æ–µ –∏–ª–∏ null');
    }
};

// –ú–æ–¥–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Å–±—Ä–æ—Å–∞ —Ñ–∏–ª—å—Ç—Ä–æ–≤
function EMERGENCY_RESET_FILTERS() {
    console.log('üîß [FIXED] –í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –û–î–ù–û–ö–†–ê–¢–ù–´–ô —Å–±—Ä–æ—Å —Ñ–∏–ª—å—Ç—Ä–æ–≤');

    const filters = ['#status-filter', '#project-filter', '#priority-filter'];

    // –§–ª–∞–≥, –ø–æ–∑–≤–æ–ª—è—é—â–∏–π –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å, –±—ã–ª –ª–∏ —É–∂–µ –≤—ã–ø–æ–ª–Ω–µ–Ω —Å–±—Ä–æ—Å
    if (window.filtersResetDone) {
        console.log('üîß [FIXED] –°–±—Ä–æ—Å —Ñ–∏–ª—å—Ç—Ä–æ–≤ —É–∂–µ –±—ã–ª –≤—ã–ø–æ–ª–Ω–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º');
        return;
    }

    filters.forEach(selector => {
        const $filter = $(selector);
        if ($filter.length > 0) {
            console.log(`üîß [FIXED] –°–±—Ä–∞—Å—ã–≤–∞–µ–º ${selector}, —Ç–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: "${$filter.val()}"`);
            $filter.val('');
            $filter.prop('selectedIndex', 0);
            $filter.closest('.filter-container').removeClass('has-value');
        }
    });

    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥, —á—Ç–æ–±—ã –±–æ–ª—å—à–µ –Ω–µ –≤—ã–ø–æ–ª–Ω—è—Ç—å —Å–±—Ä–æ—Å
    window.filtersResetDone = true;
    console.log('üîß [FIXED] –°–±—Ä–æ—Å —Ñ–∏–ª—å—Ç—Ä–æ–≤ –≤—ã–ø–æ–ª–Ω–µ–Ω –û–î–ò–ù —Ä–∞–∑ –∏ –±–æ–ª—å—à–µ –Ω–µ –±—É–¥–µ—Ç –ø–æ–≤—Ç–æ—Ä—è—Ç—å—Å—è');
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–æ–ª—å–∫–æ –û–î–ò–ù —Ä–∞–∑ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ñ–∞–π–ª–∞
$(function() {
    console.log('üîß [FIXED] Document ready - –∑–∞–ø—É—Å–∫–∞–µ–º –æ–¥–Ω–æ–∫—Ä–∞—Ç–Ω—ã–π —Å–±—Ä–æ—Å');
    // –ó–∞–ø—É—Å–∫–∞–µ–º —Å–±—Ä–æ—Å —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑ –ø–æ—Å–ª–µ –Ω–µ–±–æ–ª—å—à–æ–π –∑–∞–¥–µ—Ä–∂–∫–∏
    setTimeout(EMERGENCY_RESET_FILTERS, 100);

    // –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Ñ–∏–ª—å—Ç—Ä–æ–≤ —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏
    setTimeout(function() {
        console.log('üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –§–ò–õ–¨–¢–†–û–í:');
        $('#status-filter, #project-filter, #priority-filter').each(function() {
            const $filter = $(this);
            console.log(`üîç ${$filter.attr('id')}: –∑–Ω–∞—á–µ–Ω–∏–µ = "${$filter.val()}", disabled = ${$filter.prop('disabled')}, readonly = ${$filter.prop('readonly')}`);
        });

        // –£—Å–∏–ª–µ–Ω–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
        console.log('üîß [FIXED] –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –ø–µ—Ä–µ–Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π...');
        attachFilterChangeHandlers();
    }, 2000);
});

// –ù–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π
function attachFilterChangeHandlers() {
    // –£–¥–∞–ª—è–µ–º –≤—Å–µ —Å—Ç–∞—Ä—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    $('#status-filter, #project-filter, #priority-filter').off('change');

    // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å —É—Å–∏–ª–µ–Ω–Ω–æ–π –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–æ–π
    $('#status-filter').on('change', function() {
        const value = $(this).val();
        const text = $(this).find('option:selected').text();
        console.log('üîß [FIXED] –°–û–ë–´–¢–ò–ï CHANGE: status-filter –∏–∑–º–µ–Ω–µ–Ω –Ω–∞', value, '(—Ç–µ–∫—Å—Ç: ' + text + ')');

        // –û–±–Ω–æ–≤–ª—è–µ–º –≤–∏–¥–∏–º–æ—Å—Ç—å –∫–Ω–æ–ø–∫–∏ –æ—á–∏—Å—Ç–∫–∏ —á–µ—Ä–µ–∑ –≥–ª–æ–±–∞–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
        if (typeof window.updateFilterVisibility === 'function') {
            window.updateFilterVisibility($(this));
        } else {
            console.warn('üîß [FIXED] –§—É–Ω–∫—Ü–∏—è updateFilterVisibility –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ —Å—Ä–µ–¥—Å—Ç–≤–∞');
            const filterId = $(this).attr('id');
            const clearBtnId = '#clear-' + filterId.replace('-filter', '') + '-filter';
            const clearBtn = $(clearBtnId);
            const container = $(this).closest('.filter-container');

            // –ü—Ä–æ—Å—Ç–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –∑–Ω–∞—á–µ–Ω–∏—è
            if (value && value !== '' && value !== 'null') {
                clearBtn.addClass('show').css('display', 'flex');
                container.addClass('has-value');
            } else {
                clearBtn.removeClass('show').css('display', 'none');
                container.removeClass('has-value');
            }
        }

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
        if (typeof window.tasksDataTable !== 'undefined' && typeof window.tasksDataTable.processing === 'function') {
            window.tasksDataTable.processing(true);
            console.log('üîß [FIXED] –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏ —á–µ—Ä–µ–∑ DataTables API');
        } else {
            console.log('üîß [FIXED] –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏ —á–µ—Ä–µ–∑ DOM');
            $('.dt-processing').show();
        }

        if (window.TasksCounterManager && typeof window.TasksCounterManager.showLoading === 'function') {
            window.TasksCounterManager.showLoading('–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–∞ —Å—Ç–∞—Ç—É—Å–∞...');
        }

        if (window.tasksDataTable) {
            console.log('üîß [FIXED] –í—ã–∑—ã–≤–∞–µ–º draw() –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã');
            window.tasksDataTable.draw();
        } else {
            console.error('üîß [FIXED] ‚ùå tasksDataTable –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞!');
        }
    });

    $('#project-filter').on('change', function() {
        const value = $(this).val();
        const text = $(this).find('option:selected').text();
        console.log('üîß [FIXED] –°–û–ë–´–¢–ò–ï CHANGE: project-filter –∏–∑–º–µ–Ω–µ–Ω –Ω–∞', value, '(—Ç–µ–∫—Å—Ç: ' + text + ')');

        // –û–±–Ω–æ–≤–ª—è–µ–º –≤–∏–¥–∏–º–æ—Å—Ç—å –∫–Ω–æ–ø–∫–∏ –æ—á–∏—Å—Ç–∫–∏ —á–µ—Ä–µ–∑ –≥–ª–æ–±–∞–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
        if (typeof window.updateFilterVisibility === 'function') {
            window.updateFilterVisibility($(this));
        } else {
            console.warn('üîß [FIXED] –§—É–Ω–∫—Ü–∏—è updateFilterVisibility –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ —Å—Ä–µ–¥—Å—Ç–≤–∞');
            const filterId = $(this).attr('id');
            const clearBtnId = '#clear-' + filterId.replace('-filter', '') + '-filter';
            const clearBtn = $(clearBtnId);
            const container = $(this).closest('.filter-container');

            // –ü—Ä–æ—Å—Ç–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –∑–Ω–∞—á–µ–Ω–∏—è
            if (value && value !== '' && value !== 'null') {
                clearBtn.addClass('show').css('display', 'flex');
                container.addClass('has-value');
            } else {
                clearBtn.removeClass('show').css('display', 'none');
                container.removeClass('has-value');
            }
        }

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
        if (typeof window.tasksDataTable !== 'undefined' && typeof window.tasksDataTable.processing === 'function') {
            window.tasksDataTable.processing(true);
            console.log('üîß [FIXED] –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏ —á–µ—Ä–µ–∑ DataTables API');
        } else {
            console.log('üîß [FIXED] –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏ —á–µ—Ä–µ–∑ DOM');
            $('.dt-processing').show();
        }

        if (window.TasksCounterManager && typeof window.TasksCounterManager.showLoading === 'function') {
            window.TasksCounterManager.showLoading('–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞...');
        }

        if (window.tasksDataTable) {
            console.log('üîß [FIXED] –í—ã–∑—ã–≤–∞–µ–º draw() –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã');
            window.tasksDataTable.draw();
        } else {
            console.error('üîß [FIXED] ‚ùå tasksDataTable –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞!');
        }
    });

    $('#priority-filter').on('change', function() {
        const value = $(this).val();
        const text = $(this).find('option:selected').text();
        console.log('üîß [FIXED] –°–û–ë–´–¢–ò–ï CHANGE: priority-filter –∏–∑–º–µ–Ω–µ–Ω –Ω–∞', value, '(—Ç–µ–∫—Å—Ç: ' + text + ')');

        // –û–±–Ω–æ–≤–ª—è–µ–º –≤–∏–¥–∏–º–æ—Å—Ç—å –∫–Ω–æ–ø–∫–∏ –æ—á–∏—Å—Ç–∫–∏ —á–µ—Ä–µ–∑ –≥–ª–æ–±–∞–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
        if (typeof window.updateFilterVisibility === 'function') {
            window.updateFilterVisibility($(this));
        } else {
            console.warn('üîß [FIXED] –§—É–Ω–∫—Ü–∏—è updateFilterVisibility –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ —Å—Ä–µ–¥—Å—Ç–≤–∞');
            const filterId = $(this).attr('id');
            const clearBtnId = '#clear-' + filterId.replace('-filter', '') + '-filter';
            const clearBtn = $(clearBtnId);
            const container = $(this).closest('.filter-container');

            // –ü—Ä–æ—Å—Ç–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –∑–Ω–∞—á–µ–Ω–∏—è
            if (value && value !== '' && value !== 'null') {
                clearBtn.addClass('show').css('display', 'flex');
                container.addClass('has-value');
            } else {
                clearBtn.removeClass('show').css('display', 'none');
                container.removeClass('has-value');
            }
        }

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
        if (typeof window.tasksDataTable !== 'undefined' && typeof window.tasksDataTable.processing === 'function') {
            window.tasksDataTable.processing(true);
            console.log('üîß [FIXED] –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏ —á–µ—Ä–µ–∑ DataTables API');
        } else {
            console.log('üîß [FIXED] –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏ —á–µ—Ä–µ–∑ DOM');
            $('.dt-processing').show();
        }

        if (window.TasksCounterManager && typeof window.TasksCounterManager.showLoading === 'function') {
            window.TasksCounterManager.showLoading('–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–∞ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞...');
        }

        if (window.tasksDataTable) {
            console.log('üîß [FIXED] –í—ã–∑—ã–≤–∞–µ–º draw() –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã');
            window.tasksDataTable.draw();
        } else {
            console.error('üîß [FIXED] ‚ùå tasksDataTable –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞!');
        }
    });

    console.log('üîß [FIXED] –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –ø–µ—Ä–µ–Ω–∞–∑–Ω–∞—á–µ–Ω—ã');
}

/**
 * –ú–æ–¥—É–ª—å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø–∞–≥–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –∑–∞–¥–∞—á–∞–º–∏ Redmine
 */

/*
 * –ó–∞–¥–∞—á–∏ —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π - –ì–ª–∞–≤–Ω—ã–π JavaScript –º–æ–¥—É–ª—å
 * –ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: 2024-12-27 08:30 UTC (–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–∏–Ω—Ç–∞–∫—Å–∏—á–µ—Å–∫–æ–π –æ—à–∏–±–∫–∏)
 * –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è:
 * - –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è loadMoreData() –ø–æ—Å–ª–µ –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–∏—è –ø—Ä–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
 * - –î–æ–±–∞–≤–ª–µ–Ω–∞ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ —Å–∫—Ä–æ–ª–ª–∏–Ω–≥–∞
 * - –ò—Å–ø—Ä–∞–≤–ª–µ–Ω—ã URL-–∞–¥—Ä–µ—Å–∞ API –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å Blueprint
 */

// –ì–ª–æ–±–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤–∏–¥–∏–º–æ—Å—Ç—å—é –∫–Ω–æ–ø–æ–∫ –æ—á–∏—Å—Ç–∫–∏ —Ñ–∏–ª—å—Ç—Ä–æ–≤
window.updateFilterVisibility = function(selectElement) {
    if (!selectElement || selectElement.length === 0) {
        console.warn('[TasksPaginated] üîç updateFilterVisibility: selectElement –Ω–µ –Ω–∞–π–¥–µ–Ω');
        return;
    }

    const rawValue = selectElement.val();
    const value = rawValue || ''; // –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ null/undefined
    const filterId = selectElement.attr('id');
    const clearBtnId = '#clear-' + filterId.replace('-filter', '') + '-filter';
    const clearBtn = $(clearBtnId);
    const container = selectElement.closest('.filter-container');

    console.log('[TasksPaginated] üîç –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ –æ—á–∏—Å—Ç–∫–∏:', {
        filterId: filterId,
        rawValue: rawValue,
        value: value,
        valueType: typeof rawValue,
        isEmpty: !value || value === '' || value === 'null',
        clearBtnId: clearBtnId,
        clearBtnExists: clearBtn.length > 0,
        containerExists: container.length > 0
    });

    // –ë–æ–ª–µ–µ –Ω–∞–¥–µ–∂–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∑–Ω–∞—á–µ–Ω–∏—è
    const hasValue = value && value !== '' && value !== 'null' && value !== null && value !== undefined;

    if (hasValue) {
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
        clearBtn.addClass('show');
        clearBtn.css({
            'display': 'flex',
            'visibility': 'visible',
            'opacity': '1',
            'pointer-events': 'auto'
        });

        container.addClass('has-value');

        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∏–¥–∏–º–æ—Å—Ç–∏ –ø–æ—Å–ª–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∏–ª–µ–π
        setTimeout(() => {
            if (!clearBtn.is(':visible')) {
                console.warn('[TasksPaginated] ‚ö†Ô∏è –ö–Ω–æ–ø–∫–∞ –¥–æ —Å–∏—Ö –ø–æ—Ä –Ω–µ –≤–∏–¥–Ω–∞ –ø–æ—Å–ª–µ CSS, –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —á–µ—Ä–µ–∑ –∞—Ç—Ä–∏–±—É—Ç—ã');
                clearBtn.attr('style', 'display: flex !important; visibility: visible !important; opacity: 1 !important; pointer-events: auto !important;');
            }
        }, 50);

        console.log('[TasksPaginated] ‚úÖ –ö–Ω–æ–ø–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –ü–û–ö–ê–ó–ê–ù–ê –¥–ª—è', filterId, ', –∑–Ω–∞—á–µ–Ω–∏–µ:', value);
    } else {
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã —Å–∫—Ä—ã—Ç–∏—è
        clearBtn.removeClass('show');
        clearBtn.css({
            'display': 'none',
            'visibility': 'hidden',
            'opacity': '0',
            'pointer-events': 'none'
        });

        container.removeClass('has-value');
        console.log('[TasksPaginated] ‚ùå –ö–Ω–æ–ø–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –°–ö–†–´–¢–ê –¥–ª—è', filterId, ', –∑–Ω–∞—á–µ–Ω–∏–µ –ø—É—Å—Ç–æ–µ –∏–ª–∏ null');
    }
};

$(function() {
    console.log('[TasksPaginated] –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–¥—É–ª—è –ø–∞–≥–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∑–∞–¥–∞—á (v3)');

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
    initializePaginatedTasks();
});

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
function initializePaginatedTasks() {
    console.log('[TasksPaginated] –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–¥—É–ª—è –ø–∞–≥–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∑–∞–¥–∞—á (v3)');

    // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–π —Å–±—Ä–æ—Å —Ñ–∏–ª—å—Ç—Ä–æ–≤ –ø—Ä–∏ –ø–µ—Ä–≤–æ–π –∑–∞–≥—Ä—É–∑–∫–µ
    // (—Ç–æ–ª—å–∫–æ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ - —ç—Ç–æ –≤–ª–∏—è–µ—Ç –Ω–∞ UX)
    console.log('[TasksPaginated] üîß –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–π —Å–±—Ä–æ—Å —Ñ–∏–ª—å—Ç—Ä–æ–≤ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏');
    console.log('[TasksPaginated] –°–±—Ä–æ—Å —Ñ–∏–ª—å—Ç—Ä–∞: status-filter —Ç–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ:', $('#status-filter').val());
    console.log('[TasksPaginated] –°–±—Ä–æ—Å —Ñ–∏–ª—å—Ç—Ä–∞: project-filter —Ç–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ:', $('#project-filter').val());
    console.log('[TasksPaginated] –°–±—Ä–æ—Å —Ñ–∏–ª—å—Ç—Ä–∞: priority-filter —Ç–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ:', $('#priority-filter').val());

    console.log('[TasksPaginated] –ù–∞—á–∞–ª–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏...');

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏ —É–ª—É—á—à–µ–Ω–∏–µ UI
    initializeModernUI();

        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è DataTable - –í–ê–ñ–ù–û: –≤—ã–∑—ã–≤–∞–µ–º –ø–µ—Ä–µ–¥ –∑–∞–≥—Ä—É–∑–∫–æ–π —Ñ–∏–ª—å—Ç—Ä–æ–≤
    initializeDataTable();

    // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –ø–æ—Å–ª–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö
    if (window.tasksDataTable) {
        console.log('[TasksPaginated] üîÑ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –Ω–∞—á–∞–ª—å–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö');
        showTableLoading();
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –ø–µ—Ä–≤–æ–π –∑–∞–≥—Ä—É–∑–∫–∏
        window.forceInitialDataLoad();
    }

    // –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∏–ª—å—Ç—Ä–æ–≤
    loadAllFiltersAsync();

    // –ó–∞–≥—Ä—É–∑–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    loadFullStatisticsAsync();

    // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π
    setupEventHandlers();

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—á–µ—Ç—á–∏–∫–∞ —Ñ–∏–ª—å—Ç—Ä–æ–≤
    initializeFilterCounter();

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª–µ–π –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
    initializePaginationSwitchers();

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–Ω–æ–ø–æ–∫ –¥–ª—è –∫–∞—Ä—Ç–æ—á–µ–∫
    initializeCardToggleButtons();

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≥–ª–æ–±–∞–ª—å–Ω–æ–π –∫–Ω–æ–ø–∫–∏ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è
    initializeGlobalToggleButton();

    console.log('[TasksPaginated] ‚úÖ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ UI
function initializeModernUI() {
    // –î–æ–±–∞–≤–ª—è–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã UI –¥–ª—è —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
    appendModernUIElements();

    // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Ç–µ–º–Ω—É—é —Ç–µ–º—É
    setupDarkThemeToggle();

    // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –ø—Ä–æ–∫—Ä—É—Ç–∫–∏ –≤–≤–µ—Ä—Ö
    setupScrollTopButton();

    // –î–æ–±–∞–≤–ª—è–µ–º –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å —Ä–µ–∂–∏–º–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è (—Ç–∞–±–ª–∏—Ü–∞/–∫–∞—Ä—Ç–æ—á–∫–∏)
    setupViewToggle();

    // –£–ª—É—á—à–∞–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—Ç—Ä–æ–∫ —Å –≤—ã—Å–æ–∫–∏–º –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–º –∏ –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã–º–∏ –¥–µ–¥–ª–∞–π–Ω–∞–º–∏
    setupRowEnhancements();
}

// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ UI
function appendModernUIElements() {
    // –î–æ–±–∞–≤–ª—è–µ–º –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å —Ä–µ–∂–∏–º–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–µ—Ä–µ–¥ —Ç–∞–±–ª–∏—Ü–µ–π
    $('#tasksTable_wrapper').before(`
        <div class="view-toggle-wrapper">
            <button class="view-toggle-btn active" data-view="table">
                <i class="fas fa-table"></i> –¢–∞–±–ª–∏—Ü–∞
            </button>
            <button class="view-toggle-btn" data-view="cards">
                <i class="fas fa-th-large"></i> –ö–∞—Ä—Ç–æ—á–∫–∏
            </button>
        </div>
    `);

    // –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –∫–∞—Ä—Ç–æ—á–µ–∫ (–∏–∑–Ω–∞—á–∞–ª—å–Ω–æ —Å–∫—Ä—ã—Ç—ã–π)
    $('#tasksTable_wrapper').after(`<div class="task-cards-view" style="display:none;"></div>`);
}

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—è —Ç–µ–º–Ω–æ–π —Ç–µ–º—ã (–æ—Ç–∫–ª—é—á–µ–Ω–æ)
function setupDarkThemeToggle() {
    // –§—É–Ω–∫—Ü–∏—è –æ—Ç–∫–ª—é—á–µ–Ω–∞
    console.log('[TasksPaginated] üîß –ü–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å —Ç–µ–º—ã –æ—Ç–∫–ª—é—á–µ–Ω');
}

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–Ω–æ–ø–∫–∏ –ø—Ä–æ–∫—Ä—É—Ç–∫–∏ –≤–≤–µ—Ä—Ö (–æ—Ç–∫–ª—é—á–µ–Ω–æ)
function setupScrollTopButton() {
    // –§—É–Ω–∫—Ü–∏—è –æ—Ç–∫–ª—é—á–µ–Ω–∞
    console.log('[TasksPaginated] üîß –ö–Ω–æ–ø–∫–∞ –ø—Ä–æ–∫—Ä—É—Ç–∫–∏ –≤–≤–µ—Ä—Ö –æ—Ç–∫–ª—é—á–µ–Ω–∞');
}

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—è —Ä–µ–∂–∏–º–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
function setupViewToggle() {
    $('.view-toggle-btn').on('click', function() {
        const viewMode = $(this).data('view');

        // –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –Ω–∞–∂–∞—Ç—É—é –∫–Ω–æ–ø–∫—É
        $('.view-toggle-btn').removeClass('active');
        $(this).addClass('active');

        if (viewMode === 'table') {
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–∞–±–ª–∏—Ü—É, —Å–∫—Ä—ã–≤–∞–µ–º –∫–∞—Ä—Ç–æ—á–∫–∏
            $('#tasksTable_wrapper').show();
            $('.task-cards-view').hide();
        } else {
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–∞—Ä—Ç–æ—á–∫–∏, —Å–∫—Ä—ã–≤–∞–µ–º —Ç–∞–±–ª–∏—Ü—É
            $('#tasksTable_wrapper').hide();
            $('.task-cards-view').show();

            // –ï—Å–ª–∏ –∫–∞—Ä—Ç–æ—á–∫–∏ –µ—â–µ –Ω–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω—ã, —Å–æ–∑–¥–∞–µ–º –∏—Ö
            if ($('.task-cards-view').children().length === 0) {
                generateTaskCards();
            }
        }

        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–µ –≤ localStorage
        localStorage.setItem('tasks_view_mode', viewMode);
    });

    // –ü—Ä–∏–º–µ–Ω—è–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π —Ä–µ–∂–∏–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
    const savedViewMode = localStorage.getItem('tasks_view_mode');
    if (savedViewMode === 'cards') {
        $('.view-toggle-btn[data-view="cards"]').trigger('click');
    }
}

// –°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–µ–∫ –¥–ª—è –∑–∞–¥–∞—á
function generateTaskCards() {
    const $cardsContainer = $('.task-cards-view');
    $cardsContainer.empty();

    // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ DataTable
    const tableData = window.tasksDataTable.data();

    // –î–ª—è –∫–∞–∂–¥–æ–π —Å—Ç—Ä–æ–∫–∏ —Å–æ–∑–¥–∞–µ–º –∫–∞—Ä—Ç–æ—á–∫—É
    tableData.each(function(rowData) {
        const statusInfo = getStatusInfo(rowData.status_name);
        const priorityInfo = getPriorityInfo(rowData.priority_name);

        const cardHtml = `
            <div class="task-card ${(typeof rowData.priority_position === 'number' && rowData.priority_position >= 7) ? 'high-priority-task' : ''}">
                <div class="task-card-header">
                    <a href="/tasks/my-tasks/${rowData.id}" class="task-card-id" target="_blank" rel="noopener noreferrer" title="–û—Ç–∫—Ä—ã—Ç—å –∑–∞–¥–∞—á—É #${rowData.id} –≤ –Ω–æ–≤–æ–π –≤–∫–ª–∞–¥–∫–µ">#${rowData.id}</a>
                    <div class="status-badge ${statusInfo.class}" data-status="${escapeHtml(rowData.status_name || 'N/A')}">
                        <i class="${statusInfo.icon}"></i>
                        <span>${escapeHtml(rowData.status_name || 'N/A')}</span>
                    </div>
                </div>
                <div class="task-card-body">
                    <div class="task-card-title">${escapeHtml(rowData.subject)}</div>
                    <div class="task-card-project">${escapeHtml(rowData.project_name || '–ë–µ–∑ –ø—Ä–æ–µ–∫—Ç–∞')}</div>
                    <div class="priority-badge ${priorityInfo.class}" data-priority="${escapeHtml(rowData.priority_name || 'N/A')}">
                        <i class="${priorityInfo.icon}"></i>
                        <span>${escapeHtml(rowData.priority_name || 'N/A')}</span>
                    </div>
                    <div class="task-email mt-2">
                        ${rowData.easy_email_to && rowData.easy_email_to !== '-' && /^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(rowData.easy_email_to)
                          ? `<a href="mailto:${escapeHtml(rowData.easy_email_to)}" class="email-link" title="–ù–∞–ø–∏—Å–∞—Ç—å –ø–∏—Å—å–º–æ: ${escapeHtml(rowData.easy_email_to)}">${escapeHtml(rowData.easy_email_to)}</a>`
                          : escapeHtml(rowData.easy_email_to || '-')
                        }
                    </div>
                </div>
                <div class="task-card-footer">
                    <div>–°–æ–∑–¥–∞–Ω–∞: ${formatDate(rowData.created_on)}</div>
                    <div>–û–±–Ω–æ–≤–ª–µ–Ω–∞: ${formatDate(rowData.updated_on)}</div>
                </div>
            </div>
        `;

        $cardsContainer.append(cardHtml);
    });
}

// –£–ª—É—á—à–µ–Ω–∏–µ —Å—Ç—Ä–æ–∫ —Å –≤—ã–¥–µ–ª–µ–Ω–∏–µ–º –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–≤ –∏ –¥–µ–¥–ª–∞–π–Ω–æ–≤
function setupRowEnhancements() {
    // –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è tasksDataTable
    if (window.tasksDataTable && typeof window.tasksDataTable.on === 'function') {
        // –ó–∞–ø—É—Å–∫–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –ø–æ—Å–ª–µ –∫–∞–∂–¥–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã
        window.tasksDataTable.on('draw.dt', function() {
            enhanceTableRows();
        });
        console.log('[TasksPaginated] –£–ª—É—á—à–µ–Ω–∏–µ —Å—Ç—Ä–æ–∫ —Ç–∞–±–ª–∏—Ü—ã –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ');
    } else {
        console.warn('[TasksPaginated] tasksDataTable –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞ –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è —Å—Ç—Ä–æ–∫');
    }
}

// –£–ª—É—á—à–µ–Ω–∏–µ —Å—Ç—Ä–æ–∫ —Ç–∞–±–ª–∏—Ü—ã
function enhanceTableRows() {
    console.log('[TasksPaginated] –£–ª—É—á—à–µ–Ω–∏–µ —Å—Ç—Ä–æ–∫ —Ç–∞–±–ª–∏—Ü—ã');

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ tasksDataTable —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞
    if (!window.tasksDataTable || typeof window.tasksDataTable.rows !== 'function') {
        console.warn('[TasksPaginated] ‚ö†Ô∏è tasksDataTable –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞ –¥–ª—è enhanceTableRows');
        return;
    }

    try {
        window.tasksDataTable.rows().every(function(rowIdx) {
            const data = this.data();
            if (!data) return; // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º, –µ—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç

            const $row = $(this.node());
            if (!$row.length) return; // –ü—Ä–æ–ø—É—Å–∫–∞–µ–º, –µ—Å–ª–∏ —ç–ª–µ–º–µ–Ω—Ç DOM –Ω–µ –Ω–∞–π–¥–µ–Ω

            // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å –¥–ª—è –∑–∞–¥–∞—á —Å –≤—ã—Å–æ–∫–∏–º –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–º –ø–æ position
            if (typeof data.priority_position === 'number' && data.priority_position >= 7) {
                $row.addClass('high-priority-task');
            }

            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏
            if (data.due_date) {
                const dueDate = new Date(data.due_date);
                const today = new Date();

                // –£–±–∏—Ä–∞–µ–º –≤—Ä–µ–º—è –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è –¥–∞—Ç
                today.setHours(0, 0, 0, 0);

                if (dueDate < today) {
                    $row.addClass('overdue-task');
                }
            }
        });
        console.log('[TasksPaginated] ‚úÖ –°—Ç—Ä–æ–∫–∏ —Ç–∞–±–ª–∏—Ü—ã —É–ª—É—á—à–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ');
    } catch (error) {
        console.error('[TasksPaginated] ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–ª—É—á—à–µ–Ω–∏–∏ —Å—Ç—Ä–æ–∫ —Ç–∞–±–ª–∏—Ü—ã:', error);
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª–µ–π –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
function initializePaginationSwitchers() {
    console.log('[TasksPaginated] –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª–µ–π –ø–∞–≥–∏–Ω–∞—Ü–∏–∏');
    // –ü—É—Å—Ç–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –æ—à–∏–±–∫–∏
    // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —Ä–µ–∞–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –ø–æ–∑–∂–µ
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è DataTable
function initializeDataTable() {
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏ –ø–µ—Ä–µ–¥ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–µ–π
    showTableLoading();

    // –ü—Ä–æ–≤–µ—Ä–∫–∞, –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞ –ª–∏ —É–∂–µ —Ç–∞–±–ª–∏—Ü–∞
    if ($.fn.DataTable.isDataTable('#tasksTable')) {
        console.log('[TasksPaginated] ‚ö†Ô∏è –¢–∞–±–ª–∏—Ü–∞ —É–∂–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –ø–æ–≤—Ç–æ—Ä–Ω—É—é –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é');

        // –ï—Å–ª–∏ —Ç–∞–±–ª–∏—Ü–∞ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –ø–æ–ª—É—á–∞–µ–º –µ—ë —ç–∫–∑–µ–º–ø–ª—è—Ä
        window.tasksDataTable = $('#tasksTable').DataTable();

        // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ
        console.log('[TasksPaginated] üîÑ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π —Ç–∞–±–ª–∏—Ü—ã');
        window.tasksDataTable.ajax.reload();

        // –°–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å –æ—à–∏–±–∫–æ–π, –µ—Å–ª–∏ –æ–Ω–æ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        setTimeout(function() {
            const errorModal = $('div:contains("DataTables warning: table id=tasksTable")').closest('.modal, [role="dialog"]');
            if (errorModal.length) {
                console.log('[TasksPaginated] üõ†Ô∏è –°–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å –æ—à–∏–±–∫–æ–π DataTables');
                errorModal.hide();

                // –ï—Å–ª–∏ –µ—Å—Ç—å –∫–Ω–æ–ø–∫–∞ OK, —Å–∏–º—É–ª–∏—Ä—É–µ–º –µ—ë –Ω–∞–∂–∞—Ç–∏–µ
                const okButton = errorModal.find('button:contains("OK")');
                if (okButton.length) {
                    okButton.click();
                }
            }
        }, 100);

        return;
    }

    const columnMapping = {
        0: 'id',
        1: 'subject',
        2: 'status_name',
        3: 'priority_name',
        4: 'easy_email_to',
        5: 'updated_on',
        6: 'created_on',
        7: 'start_date'
    };

        try {
        console.log('[TasksPaginated] üöÄ –ù–∞—á–∏–Ω–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é DataTable...');

        // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è draw.dt –ø–µ—Ä–µ–¥ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–µ–π
        $('#tasksTable').on('draw.dt', function() {
            console.log('[TasksPaginated] DataTable drawCallback.');
            updateInfo();

            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã
            checkForActiveFilters();

            // –û–±–Ω–æ–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –æ—á–∏—Å—Ç–∫–∏
            console.log('[TasksPaginated] DataTable draw event - –æ–±–Ω–æ–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –æ—á–∏—Å—Ç–∫–∏');
            updateAllClearButtons();

            // –£–ª—É—á—à–∞–µ–º —Å—Ç—Ä–æ–∫–∏ —Ç–∞–±–ª–∏—Ü—ã
            enhanceTableRows();
        });

        // –§–ª–∞–≥ –ø–µ—Ä–≤–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ –¥–ª—è —Ä–µ—à–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º—ã —Å –ø—É—Å—Ç–æ–π —Ç–∞–±–ª–∏—Ü–µ–π
        window.isFirstDataLoad = true;

        // –î–µ–ª–∞–µ–º tasksDataTable –≥–ª–æ–±–∞–ª—å–Ω–æ –¥–æ—Å—Ç—É–ø–Ω–æ–π –¥–ª—è –¥—Ä—É–≥–∏—Ö —Å–∫—Ä–∏–ø—Ç–æ–≤
        window.tasksDataTable = $('#tasksTable').DataTable({
            processing: true,
            serverSide: true,
            searching: true,
            searchDelay: 1000,
            // –î–æ–±–∞–≤–ª—è–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫—É—é –∑–∞–≥—Ä—É–∑–∫—É –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
            deferLoading: 1,
            // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
            initComplete: function(settings, json) {
                console.log('[TasksPaginated] DataTable initComplete.');

                // –ü–µ—Ä–µ–º–µ—â–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã UI –¥–ª—è –ª—É—á—à–µ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
                $('#tasksTable_filter').appendTo('#searchBoxContainer');
                $('#tasksTable_length').appendTo('#lengthContainer');
                $('#tasksTable_info').appendTo('#tasksInfoContainer');
                $('#tasksTable_paginate').appendTo('#tasksPaginationContainer');

                // –û–±–Ω–æ–≤–ª—è–µ–º –≤–∏–¥–∏–º–æ—Å—Ç—å –∫–Ω–æ–ø–æ–∫ –æ—á–∏—Å—Ç–∫–∏
                updateAllClearButtons();

                // –°–æ–æ–±—â–∞–µ–º –¥—Ä—É–≥–∏–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º, —á—Ç–æ DataTable –ø–æ–ª–Ω–æ—Å—Ç—å—é –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞
                console.log('[TasksPaginated] üì¢ DataTable –ø–æ–ª–Ω–æ—Å—Ç—å—é –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞, —Å–æ–æ–±—â–∞–µ–º –¥—Ä—É–≥–∏–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º');
                $(document).trigger('datatables-initialized');
            },
            ajax: {
                url: "/tasks/get-my-tasks-paginated",
                type: "GET",
                data: function(d) {
                    console.log('[TasksPaginated] üîÑ –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ AJAX –∑–∞–ø—Ä–æ—Å–∞ —Å –£–õ–£–ß–®–ï–ù–ù–´–ú –ø–æ–¥—Ö–æ–¥–æ–º');

                    // –î–æ–±–∞–≤–ª—è–µ–º —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫—É
                    const orderColumnIndex = d.order[0].column;
                    const orderColumnName = d.columns[orderColumnIndex].data;
                    const orderDir = d.order[0].dir;

                    console.log('[TasksPaginated] üîÑ –î–æ–±–∞–≤–ª–µ–Ω–∞ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞:', {
                        column: orderColumnName,
                        direction: orderDir
                    });

                    // –§–∏–ª—å—Ç—Ä—ã
                    const statusFilter = $('#status-filter').val();
                    const projectFilter = $('#project-filter').val();
                    const priorityFilter = $('#priority-filter').val();

                    // –§–ª–∞–≥ –ø–µ—Ä–≤–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ –¥–ª—è —Ä–µ—à–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º—ã —Å –ø—É—Å—Ç–æ–π —Ç–∞–±–ª–∏—Ü–µ–π
                    const isFirstLoad = window.isFirstDataLoad;

                    console.log('[TasksPaginated] üîç –ó–Ω–∞—á–µ–Ω–∏—è —Ñ–∏–ª—å—Ç—Ä–æ–≤:', {
                        status: statusFilter,
                        project: projectFilter,
                        priority: priorityFilter
                    });

                    const params = {
                        // –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã DataTables
                        draw: d.draw,
                        start: d.start,
                        length: d.length,
                        ['search[value]']: d.search.value,

                        // –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞
                        ['order[0][column]']: orderColumnIndex,
                        ['order[0][dir]']: orderDir,
                        ['columns[' + orderColumnIndex + '][data]']: orderColumnName,

                        // –§–∏–ª—å—Ç—Ä—ã
                        status_id: statusFilter || '',
                        project_id: projectFilter || '',
                        priority_id: priorityFilter || '',

                        // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã –ø–æ –∏–º–µ–Ω–∏ (–∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ)
                        status_name: $('#status-filter option:selected').text() || '',
                        project_name: $('#project-filter option:selected').text() || '',
                        priority_name: $('#priority-filter option:selected').text() || '',

                        // –ü–∞—Ä–∞–º–µ—Ç—Ä –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—Ä–æ—Å–µ
                        force_load: isFirstLoad ? '1' : '0'
                    };

                    console.log('[TasksPaginated] üìä –§–∏–Ω–∞–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—Ä–æ—Å–∞:', params);
                    return params;
                },
                dataSrc: function(json) {
                    console.log('[TasksPaginated] –î–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã');
                    hideTableLoading();

                    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫ –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∑–∞–¥–∞—á
                    if (typeof updateFilterCounter === 'function') {
                        updateFilterCounter(json.recordsFiltered);
                    }

                    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥ –ø–µ—Ä–≤–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
                    if (window.isFirstDataLoad) {
                        console.log('[TasksPaginated] ‚úÖ –ü–µ—Ä–≤–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ');
                        window.isFirstDataLoad = false;
                    }

                    return json.data;
                },
                error: function(xhr, error, thrown) {
                    console.error('[TasksPaginated] –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ API:', error, thrown, xhr.responseText);
                    hideTableLoading();
                    showError('–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ —Å–≤—è–∑–∏ —Å —Å–µ—Ä–≤–µ—Ä–æ–º. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É.');
                }
            },
            columns: [
                {
                    data: 'id',
                    render: function(data, type, row) {
                        return type === 'display' ? '<a href="/tasks/my-tasks/' + data + '" class="task-id-link" target="_blank" rel="noopener noreferrer" title="–û—Ç–∫—Ä—ã—Ç—å –∑–∞–¥–∞—á—É #' + data + ' –≤ –Ω–æ–≤–æ–π –≤–∫–ª–∞–¥–∫–µ">#' + data + '</a>' : data;
                    },
                    orderable: true,
                    searchable: true
                },
                {
                    data: 'subject',
                    render: function(data, type, row) {
                        if (type === 'display') {
                            // –î–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∏–π –ª–æ–≥: –≤—ã–≤–æ–¥–∏–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏ –≤ –∫–æ–Ω—Å–æ–ª—å
                            console.log('[–ó–ê–î–ê–ß–ê] –î–∞–Ω–Ω—ã–µ –¥–ª—è —Å—Ç—Ä–æ–∫–∏:', row);

                            // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π, —Å–∞–º—ã–π –ø—Ä–æ—Å—Ç–æ–π –∏ –Ω–∞–¥–µ–∂–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞
                            // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π, —Å–∞–º—ã–π –ø—Ä–æ—Å—Ç–æ–π –∏ –Ω–∞–¥–µ–∂–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞
                            return '<div class="task-title">' + escapeHtml(data) + '</div>' +
                                   '<div class="project-name">' +
                                   '<i class="fas fa-folder-open"></i>' + // –ò–∫–æ–Ω–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞ –¥–ª—è –∫–æ–Ω—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ—Å—Ç–∏
                                   escapeHtml(row.project_name || '–ë–µ–∑ –ø—Ä–æ–µ–∫—Ç–∞') +
                                   '</div>';
                        }
                        return data;
                    },
                    orderable: true,
                    searchable: true
                },
                {
                    data: 'status_name',
                    render: function(data, type, row) {
                        if (type === 'display') {
                            const statusInfo = getStatusInfo(data);
                            return '<div class="status-badge ' + statusInfo.class + '" data-status="' + escapeHtml(data || 'N/A') + '"><i class="' + statusInfo.icon + '"></i><span>' + escapeHtml(data || 'N/A') + '</span></div>';
                        }
                        return data;
                    },
                    orderable: true
                },
                {
                    data: 'priority_name',
                    render: function(data, type, row) {
                        if (type === 'display') {
                            const priorityInfo = getPriorityInfo(data);
                            return '<div class="priority-badge ' + priorityInfo.class + '" data-priority="' + escapeHtml(data || 'N/A') + '"><i class="' + priorityInfo.icon + '"></i><span>' + escapeHtml(data || 'N/A') + '</span></div>';
                        }
                        return data;
                    },
                    orderable: true
                },
                {
                    data: 'easy_email_to',
                    render: function(data, type, row) {
                        if (type === 'display') {
                            if (!data || data === '-') {
                                return '<div class="task-email">-</div>';
                            }

                            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å email
                            const isValidEmail = /^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(data);

                            if (isValidEmail) {
                                return '<div class="task-email">' +
                                       '<a href="mailto:' + escapeHtml(data) + '" class="email-link" title="–ù–∞–ø–∏—Å–∞—Ç—å –ø–∏—Å—å–º–æ: ' + escapeHtml(data) + '">' +
                                       escapeHtml(data) +
                                       '</a>' +
                                       '</div>';
                            } else {
                                return '<div class="task-email">' + escapeHtml(data) + '</div>';
                            }
                        }
                        return data;
                    },
                    orderable: true
                },
                {
                    data: 'updated_on',
                    render: function(data, type, row) {
                        return type === 'display' ? '<div class="task-date">' + formatDate(data) + '</div>' : data;
                    },
                    orderable: true
                },
                {
                    data: 'created_on',
                    render: function(data, type, row) {
                        return type === 'display' ? '<div class="task-date">' + formatDate(data) + '</div>' : data;
                    },
                    orderable: true
                },
                {
                    data: 'start_date',
                    render: function(data, type, row) {
                        return type === 'display' ? '<div class="task-date">' + formatDate(data, true) + '</div>' : data;
                    },
                    orderable: true
                }
            ],
            order: [[5, 'desc']],
            pageLength: 25,
            lengthChange: true,
            lengthMenu: [[10, 25, 50, 100], [10, 25, 50, 100]],
            searching: true,
            info: false,
            paging: true,
            pagingType: "full_numbers",
            language: {
                url: "/static/js/datatables/Russian.json",
                processing: '<div class="dt-processing"><div class="spinner-border text-primary" role="status"></div><span class="ml-2">–ó–∞–≥—Ä—É–∑–∫–∞...</span></div>',
                lengthMenu: "–ü–æ–∫–∞–∑–∞—Ç—å: _MENU_",
                info: "–ü–æ–∫–∞–∑–∞–Ω–æ —Å _START_ –ø–æ _END_ –∏–∑ _TOTAL_ –∑–∞–ø–∏—Å–µ–π",
                infoEmpty: "–ù–µ—Ç –∑–∞–ø–∏—Å–µ–π –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è",
                infoFiltered: "(–æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–æ –∏–∑ _MAX_ –∑–∞–ø–∏—Å–µ–π)",
                search: "–ü–æ–∏—Å–∫:",
                paginate: {
                    first: "–ü–µ—Ä–≤–∞—è",
                    last: "–ü–æ—Å–ª–µ–¥–Ω—è—è",
                    next: "–°–ª–µ–¥—É—é—â–∞—è",
                    previous: "–ü—Ä–µ–¥—ã–¥—É—â–∞—è"
                },
                emptyTable: "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –≤ —Ç–∞–±–ª–∏—Ü–µ",
                zeroRecords: "–ó–∞–ø–∏—Å–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
            },
            dom: '<"top"<"left-col"l><"right-col"f>>rt<"bottom"<"left-col"i><"right-col"p>>',
            initComplete: function(settings, json) {
                console.log('[TasksPaginated] DataTable initComplete.');

                $('.dataTables_length').detach().appendTo('#lengthContainer');
                $('.dataTables_length label').contents().filter(function(){
                    return this.nodeType === 3;
                }).remove();

                $('.dataTables_filter').detach().appendTo('#searchBoxContainer');
                $('.dataTables_filter label').contents().filter(function(){
                    return this.nodeType === 3;
                }).remove();

                $('#searchBoxContainer input[type="search"]').attr("placeholder", "–ü–æ–∏—Å–∫ –ø–æ ID (#123), —Ç–µ–º–µ, –æ–ø–∏—Å–∞–Ω–∏—é...");

                $('.dataTables_info').detach().appendTo('#tasksInfoContainer');
                $('.dataTables_paginate').detach().appendTo('#tasksPaginationContainer');

                // –ö–†–ò–¢–ò–ß–ù–û: –û–±–Ω–æ–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –æ—á–∏—Å—Ç–∫–∏ –ø–æ—Å–ª–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ DataTable
                setTimeout(() => {
                    updateAllClearButtons();
                    console.log('[TasksPaginated] –û–±–Ω–æ–≤–ª–µ–Ω—ã –∫–Ω–æ–ø–∫–∏ –æ—á–∏—Å—Ç–∫–∏ –≤ initComplete');

                    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –¥–∞–Ω–Ω—ã–µ –≤ —Ç–∞–±–ª–∏—Ü–µ
                    if (window.tasksDataTable && window.tasksDataTable.rows().count() === 0) {
                        console.log('[TasksPaginated] ‚ö†Ô∏è –î–∞–Ω–Ω—ã–µ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã, –≤—ã–ø–æ–ª–Ω—è–µ–º –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—É—é –∑–∞–≥—Ä—É–∑–∫—É');
                        window.forceInitialDataLoad();
                    }
                }, 100);

                console.log('[TasksPaginated] –≠–ª–µ–º–µ–Ω—Ç—ã UI –ø–µ—Ä–µ–º–µ—â–µ–Ω—ã');

                // 6. –ü–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤ –∫–∞—Å—Ç–æ–º–Ω—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
                const searchBox = document.querySelector('#tasksTable_filter input');
                const lengthSelect = document.querySelector('#tasksTable_length');
                const searchBoxContainer = document.querySelector('#searchBoxContainer');
                const lengthContainer = document.querySelector('#lengthContainer');

                if (searchBox && searchBoxContainer) {
                    // –ò–∑–º–µ–Ω—è–µ–º placeholder
                    searchBox.placeholder = '–ü–æ–∏—Å–∫ –ø–æ ID (#123), —Ç–µ–º–µ, –æ–ø–∏—Å–∞–Ω–∏—é...';

                    // –î–æ–±–∞–≤–ª—è–µ–º —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –∫–ª–∞—Å—Å—ã –¥–ª—è —Å—Ç–∏–ª–∏–∑–∞—Ü–∏–∏
                    searchBox.classList.add('tasks-search-input');

                    const searchBoxParent = searchBox.parentElement;
                    searchBoxContainer.appendChild(searchBoxParent);
                }

                if (lengthSelect && lengthContainer) {
                    // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å –¥–ª—è —Å–µ–ª–µ–∫—Ç–æ—Ä–∞ –¥–ª–∏–Ω—ã
                    const lengthSelectElement = lengthSelect.querySelector('select');
                    if (lengthSelectElement) {
                        lengthSelectElement.classList.add('tasks-length-select');
                    }

                    lengthContainer.appendChild(lengthSelect);
                }

                // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å –∫ body –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç–∏–ª–µ–π
                document.body.classList.add('tasks-page-loaded');

                // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∏–ª–∏ —á–µ—Ä–µ–∑ –Ω–µ–±–æ–ª—å—à—É—é –∑–∞–¥–µ—Ä–∂–∫—É
                setTimeout(() => {
                    document.querySelectorAll('.filter-container select, .search-container input, .length-container select').forEach(el => {
                        el.style.fontSize = '16px';
                        el.style.height = '48px';
                        el.style.padding = '12px';
                    });
                }, 100);

                // –£–¥–∞–ª—è–µ–º –¥—É–±–ª–∏—Ä—É—é—â–∏–µ—Å—è —ç–ª–µ–º–µ–Ω—Ç—ã –ø–æ—Å–ª–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
                setTimeout(() => {
                    removeDuplicateSearchElements();
                }, 200);

                // –°–æ–æ–±—â–∞–µ–º –¥—Ä—É–≥–∏–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º, —á—Ç–æ —Ç–∞–±–ª–∏—Ü–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞
                console.log('[TasksPaginated] üì¢ DataTable –ø–æ–ª–Ω–æ—Å—Ç—å—é –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞, —Å–æ–æ–±—â–∞–µ–º –¥—Ä—É–≥–∏–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º');
                document.dispatchEvent(new CustomEvent('datatables-initialized'));
            },
            drawCallback: function(settings) {
                console.log('[TasksPaginated] DataTable drawCallback.');
                $('#tasksTable tbody tr').addClass('fade-in');

                // –û—á–∏—Å—Ç–∫–∞ –¥—É–±–ª–∏–∫–∞—Ç–æ–≤ –ø—Ä–∏ –∫–∞–∂–¥–æ–π –ø–µ—Ä–µ—Ä–∏—Å–æ–≤–∫–µ (—Å –∑–∞–¥–µ—Ä–∂–∫–æ–π –¥–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤)
                setTimeout(() => {
                    removeDuplicateSearchElements();
                }, 100);
            }
        });
        console.log('[TasksPaginated] ‚úÖ DataTable —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞.');

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ tasksDataTable –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Å–æ–∑–¥–∞–Ω–∞
        if (!window.tasksDataTable) {
            console.error('[TasksPaginated] ‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: tasksDataTable –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞ –ø–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è!');
        } else {
            console.log('[TasksPaginated] ‚úÖ tasksDataTable —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞ –∏ –¥–æ—Å—Ç—É–ø–Ω–∞ –≥–ª–æ–±–∞–ª—å–Ω–æ');
        }
    } catch (error) {
        console.error('[TasksPaginated] ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ DataTable:', error);
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        showError('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Ç–∞–±–ª–∏—Ü—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É.');
    }
}

// –ù–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –±–æ–ª—å—à–µ –Ω–µ –Ω—É–∂–Ω–∞ - –¥–∞–Ω–Ω—ã–µ –ø—Ä–∏—Ö–æ–¥—è—Ç –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
function setupEventHandlers() {
    console.log('[TasksPaginated] –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π...');

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ tasksDataTable –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞ –ø–µ—Ä–µ–¥ –ø—Ä–∏–≤—è–∑–∫–æ–π —Å–æ–±—ã—Ç–∏–π
    if (window.tasksDataTable) {
        window.tasksDataTable.on('search.dt', function() {
            const newSearchTerm = window.tasksDataTable.search();
            console.log('[TasksPaginated] DataTable search event:', newSearchTerm);
        });

        window.tasksDataTable.on('preXhr.dt', function() {
            console.log('[TasksPaginated] –ù–∞—á–∞–ª–æ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö...');
            showTableLoading();
        });

        window.tasksDataTable.on('xhr.dt', function() {
            console.log('[TasksPaginated] –î–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã');
            hideTableLoading();
        });

        // –î–û–ë–ê–í–õ–ï–ù–û: –û–±—Ä–∞–±–æ—Ç—á–∏–∫ draw event –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–Ω–æ–ø–æ–∫ –æ—á–∏—Å—Ç–∫–∏
        window.tasksDataTable.on('draw.dt', function() {
            console.log('[TasksPaginated] DataTable draw event - –æ–±–Ω–æ–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –æ—á–∏—Å—Ç–∫–∏');
            updateAllClearButtons();
        });
    } else {
        console.warn('[TasksPaginated] tasksDataTable –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–≤—è–∑–∫—É —Å–æ–±—ã—Ç–∏–π DataTable');
    }

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Ñ–∏–ª—å—Ç—Ä–æ–≤
    $(document).on('change', '#status-filter, #project-filter, #priority-filter', function() {
        console.log('[TasksPaginated] –§–∏–ª—å—Ç—Ä –∏–∑–º–µ–Ω–µ–Ω:', $(this).attr('id'), $(this).val());
        updateClearButtonVisibility($(this)); // –î–æ–±–∞–≤–ª—è—é –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤–∏–¥–∏–º–æ—Å—Ç–∏ –∫–Ω–æ–ø–∫–∏ —Å–±—Ä–æ—Å–∞

        // –ö–†–ò–¢–ò–ß–ù–û: –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —Å–ø–∏–Ω–Ω–µ—Ä DataTables
        showTableLoading();

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É –≤ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–µ
        if (window.TasksCounterManager && typeof window.TasksCounterManager.showLoading === 'function') {
            console.log('[TasksPaginated] üîÑ –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É –≤ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–µ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ñ–∏–ª—å—Ç—Ä–∞');
            window.TasksCounterManager.showLoading('–ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–æ–≤...');
        }

        // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –º–µ—Ç–æ–¥ –¥–ª—è –æ–±—ã—á–Ω–æ–π –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
        if (window.tasksDataTable) {
            console.log('[TasksPaginated] üîÑ –ü–µ—Ä–µ—Ä–∏—Å–æ–≤—ã–≤–∞–µ–º —Ç–∞–±–ª–∏—Ü—É —Å –Ω–æ–≤—ã–º–∏ —Ñ–∏–ª—å—Ç—Ä–∞–º–∏...');
            window.tasksDataTable.draw();
        } else {
            console.error('[TasksPaginated] ‚ùå DataTable –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞!');
        }
    });

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–Ω–æ–ø–æ–∫ –æ—á–∏—Å—Ç–∫–∏ —Ñ–∏–ª—å—Ç—Ä–æ–≤
    $(document).on('click', '#clear-status-filter', function(e) {
        e.preventDefault();
        e.stopPropagation();
        console.log('[TasksPaginated] üîÑ –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ –æ—á–∏—Å—Ç–∫–∏ —Å—Ç–∞—Ç—É—Å–∞');

        const filter = $('#status-filter');

        // –ò–°–ü–†–ê–í–õ–ï–ù–û: –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —Å–±—Ä–∞—Å—ã–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –∏ –¥–µ–ª–∞–µ–º —ç—Ç–æ —è–≤–Ω–æ
        filter.val('').prop('selectedIndex', 0);
        console.log('[TasksPaginated] üîÑ –°—Ç–∞—Ç—É—Å —Å–±—Ä–æ—à–µ–Ω, –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ:', filter.val());

        // –ò–°–ü–†–ê–í–õ–ï–ù–û: –Ø–≤–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º –≤–∏–¥–∏–º–æ—Å—Ç—å –∫–Ω–æ–ø–∫–∏
        updateClearButtonVisibility(filter);

        // –ò–°–ü–†–ê–í–õ–ï–ù–û: –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –≤—ã–∑—ã–≤–∞–µ–º —Å–æ–±—ã—Ç–∏–µ change –¥–ª—è –ø–µ—Ä–µ—Ä–∏—Å–æ–≤–∫–∏ —Ç–∞–±–ª–∏—Ü—ã
        filter.trigger('change');

        console.log('[TasksPaginated] ‚úÖ –°—Ç–∞—Ç—É—Å —Ñ–∏–ª—å—Ç—Ä –æ—á–∏—â–µ–Ω');
    });

    $(document).on('click', '#clear-project-filter', function(e) {
        e.preventDefault();
        e.stopPropagation();
        console.log('[TasksPaginated] üîÑ –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ –æ—á–∏—Å—Ç–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞');

        const filter = $('#project-filter');

        // –ò–°–ü–†–ê–í–õ–ï–ù–û: –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —Å–±—Ä–∞—Å—ã–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –∏ –¥–µ–ª–∞–µ–º —ç—Ç–æ —è–≤–Ω–æ
        filter.val('').prop('selectedIndex', 0);
        console.log('[TasksPaginated] üîÑ –ü—Ä–æ–µ–∫—Ç —Å–±—Ä–æ—à–µ–Ω, –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ:', filter.val());

        // –ò–°–ü–†–ê–í–õ–ï–ù–û: –Ø–≤–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º –≤–∏–¥–∏–º–æ—Å—Ç—å –∫–Ω–æ–ø–∫–∏
        updateClearButtonVisibility(filter);

        // –ò–°–ü–†–ê–í–õ–ï–ù–û: –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –≤—ã–∑—ã–≤–∞–µ–º —Å–æ–±—ã—Ç–∏–µ change –¥–ª—è –ø–µ—Ä–µ—Ä–∏—Å–æ–≤–∫–∏ —Ç–∞–±–ª–∏—Ü—ã
        filter.trigger('change');

        // –û—á–∏—â–∞–µ–º TreeView –µ—Å–ª–∏ –æ–Ω –∞–∫—Ç–∏–≤–µ–Ω
        if (window.projectTreeView) {
            try {
                window.projectTreeView.clearAllSelections();
                console.log('[TasksPaginated] TreeView –æ—á–∏—â–µ–Ω');
            } catch (error) {
                console.warn('[TasksPaginated] –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ TreeView:', error);
            }
        }

        console.log('[TasksPaginated] ‚úÖ –ü—Ä–æ–µ–∫—Ç —Ñ–∏–ª—å—Ç—Ä –æ—á–∏—â–µ–Ω');
    });

    $(document).on('click', '#clear-priority-filter', function(e) {
        e.preventDefault();
        e.stopPropagation();
        console.log('[TasksPaginated] üîÑ –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ –æ—á–∏—Å—Ç–∫–∏ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞');

        const filter = $('#priority-filter');

        // –ò–°–ü–†–ê–í–õ–ï–ù–û: –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —Å–±—Ä–∞—Å—ã–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –∏ –¥–µ–ª–∞–µ–º —ç—Ç–æ —è–≤–Ω–æ
        filter.val('').prop('selectedIndex', 0);
        console.log('[TasksPaginated] üîÑ –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç —Å–±—Ä–æ—à–µ–Ω, –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ:', filter.val());

        // –ò–°–ü–†–ê–í–õ–ï–ù–û: –Ø–≤–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º –≤–∏–¥–∏–º–æ—Å—Ç—å –∫–Ω–æ–ø–∫–∏
        updateClearButtonVisibility(filter);

        // –ò–°–ü–†–ê–í–õ–ï–ù–û: –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –≤—ã–∑—ã–≤–∞–µ–º —Å–æ–±—ã—Ç–∏–µ change –¥–ª—è –ø–µ—Ä–µ—Ä–∏—Å–æ–≤–∫–∏ —Ç–∞–±–ª–∏—Ü—ã
        filter.trigger('change');

        console.log('[TasksPaginated] ‚úÖ –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç —Ñ–∏–ª—å—Ç—Ä –æ—á–∏—â–µ–Ω');
    });

    // –ü–†–ò–ú–ï–ß–ê–ù–ò–ï: –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –ø–æ–∏—Å–∫ –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç—Å—è –≤ initComplete callback DataTable

    console.log('[TasksPaginated] –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã.');

    // –î–û–ë–ê–í–õ–ï–ù–û: –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ñ–∏–ª—å—Ç—Ä–æ–≤ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤–∏–¥–∏–º–æ—Å—Ç–∏ –∫–Ω–æ–ø–æ–∫ –æ—á–∏—Å—Ç–∫–∏
    $('#status-filter').on('change', function() {
        updateClearButtonVisibility($(this));
    });

    $('#project-filter').on('change', function() {
        updateClearButtonVisibility($(this));
    });

    $('#priority-filter').on('change', function() {
        updateClearButtonVisibility($(this));
    });

    console.log('[TasksPaginated] –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ñ–∏–ª—å—Ç—Ä–æ–≤ –¥–æ–±–∞–≤–ª–µ–Ω—ã');
}

// –î–û–ë–ê–í–õ–ï–ù–û: –§—É–Ω–∫—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞
function setupAdvancedSearchFilter() {
    if (!window.tasksDataTable) {
        console.log('[TasksPaginated] DataTable –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞ –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–∏—Å–∫–∞');
        return;
    }

    console.log('[TasksPaginated] –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞...');

    // –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª–µ –ø–æ–∏—Å–∫–∞
    const searchInput = $('#tasksTable_filter input[type="search"]');

    if (searchInput.length === 0) {
        console.log('[TasksPaginated] –ü–æ–ª–µ –ø–æ–∏—Å–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ');
        return;
    }

    // –ò–°–ü–†–ê–í–õ–ï–ù–û: –ê–∫–∫—É—Ä–∞—Ç–Ω–æ –æ—Ç–∫–ª—é—á–∞–µ–º —Ç–æ–ª—å–∫–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ DataTables
    searchInput.off('keyup.DT search.DT input.DT paste.DT cut.DT');
    // –ù–æ –æ—Å—Ç–∞–≤–ª—è–µ–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –¥–ª—è –¥—Ä—É–≥–∏—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤

    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞
    let searchTimeout;
    searchInput.on('input keyup', function() {
        const searchTerm = $(this).val();
        console.log('[TasksPaginated] –ü–æ–∏—Å–∫ –ø–æ —Ç–µ—Ä–º–∏–Ω—É:', searchTerm);

        // –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π —Ç–∞–π–º–∞—É—Ç
        clearTimeout(searchTimeout);

        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–≤—ã–π —Ç–∞–π–º–∞—É—Ç –¥–ª—è –∑–∞–¥–µ—Ä–∂–∫–∏ –ø–æ–∏—Å–∫–∞
        searchTimeout = setTimeout(function() {
            performAdvancedSearch(searchTerm);
        }, 300);
    });

    console.log('[TasksPaginated] –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –ø–æ–∏—Å–∫ –Ω–∞—Å—Ç—Ä–æ–µ–Ω');
}

// –î–û–ë–ê–í–õ–ï–ù–û: –§—É–Ω–∫—Ü–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞
function performAdvancedSearch(searchTerm) {
    if (!window.tasksDataTable) {
        return;
    }

    console.log('[TasksPaginated] –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞:', searchTerm);

    // –ï—Å–ª–∏ –ø–æ–∏—Å–∫ –ø—É—Å—Ç–æ–π, —É–¥–∞–ª—è–µ–º –≤—Å–µ –∫–∞—Å—Ç–æ–º–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã
    if (!searchTerm || searchTerm.trim() === '') {
        console.log('[TasksPaginated] –û—á–∏—Å—Ç–∫–∞ –ø–æ–∏—Å–∫–∞');

        // –£–¥–∞–ª—è–µ–º –≤—Å–µ –∫–∞—Å—Ç–æ–º–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã –ø–æ–∏—Å–∫–∞
        while ($.fn.dataTable.ext.search.length > 0) {
            $.fn.dataTable.ext.search.pop();
        }

        // –ü–µ—Ä–µ—Ä–∏—Å–æ–≤—ã–≤–∞–µ–º —Ç–∞–±–ª–∏—Ü—É
        window.tasksDataTable.draw();
        return;
    }

    const searchTermLower = searchTerm.toLowerCase().trim();

    // –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π –∫–∞—Å—Ç–æ–º–Ω—ã–π —Ñ–∏–ª—å—Ç—Ä –ø–æ–∏—Å–∫–∞
    while ($.fn.dataTable.ext.search.length > 0) {
        $.fn.dataTable.ext.search.pop();
    }

    // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π –∫–∞—Å—Ç–æ–º–Ω—ã–π —Ñ–∏–ª—å—Ç—Ä –¥–ª—è —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞
    $.fn.dataTable.ext.search.push(function(settings, data, dataIndex) {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ –Ω–∞—à–∞ —Ç–∞–±–ª–∏—Ü–∞
        if (settings.nTable.id !== 'tasksTable') {
            return true;
        }

        // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–æ–∫–∏
        const rowData = window.tasksDataTable.row(dataIndex).data();

        if (!rowData) {
            return false;
        }

        // –°–æ–∑–¥–∞–µ–º –ø–æ–∏—Å–∫–æ–≤—É—é —Å—Ç—Ä–æ–∫—É –∏–∑ –≤—Å–µ—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø–æ–ª–µ–π
        const searchableFields = [
            // ID –∑–∞–¥–∞—á–∏ (—Å # –∏ –±–µ–∑)
            rowData.id ? String(rowData.id) : '',
            rowData.id ? `#${rowData.id}` : '',

            // –¢–µ–º–∞ –∑–∞–¥–∞—á–∏
            rowData.subject || '',

            // –ò–°–ü–†–ê–í–õ–ï–ù–û: –û–ø–∏—Å–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏
            rowData.description || '',

            // –ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞
            rowData.project_name || '',

            // –°—Ç–∞—Ç—É—Å
            rowData.status_name || '',

            // –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç
            rowData.priority_name || '',

            // –ê–≤—Ç–æ—Ä
            rowData.author_name || '',

            // Email –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è
            rowData.email_to || '',

            // –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å
            rowData.assigned_to_name || '',

            // –¢—Ä–µ–∫–µ—Ä
            rowData.tracker_name || ''
        ];

        // –û–±—ä–µ–¥–∏–Ω—è–µ–º –≤—Å–µ –ø–æ–ª—è –≤ –æ–¥–Ω—É —Å—Ç—Ä–æ–∫—É –¥–ª—è –ø–æ–∏—Å–∫–∞
        const combinedSearchText = searchableFields
            .filter(field => field && field.trim() !== '')
            .join(' ')
            .toLowerCase();

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ–¥–µ—Ä–∂–∏—Ç—Å—è –ª–∏ –ø–æ–∏—Å–∫–æ–≤—ã–π —Ç–µ—Ä–º–∏–Ω –≤ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–Ω–æ–π —Å—Ç—Ä–æ–∫–µ
        let isMatch = combinedSearchText.includes(searchTermLower);

        // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–∏—Å–∫–∞ –ø–æ –Ω–æ–º–µ—Ä—É –∑–∞–¥–∞—á–∏ —Å #
        if (!isMatch && searchTermLower.startsWith('#')) {
            const numericSearch = searchTermLower.substring(1);
            const taskIdString = String(rowData.id || '');
            isMatch = taskIdString.includes(numericSearch);
        }

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–∏—Å–∫ —Ç–æ–ª—å–∫–æ –ø–æ —á–∏—Å–ª—É (–±–µ–∑ #)
        if (!isMatch && /^\d+$/.test(searchTermLower)) {
            const taskIdString = String(rowData.id || '');
            isMatch = taskIdString.includes(searchTermLower);
        }

        return isMatch;
    });

    // –ü—Ä–∏–º–µ–Ω—è–µ–º —Ñ–∏–ª—å—Ç—Ä
    window.tasksDataTable.draw();
    console.log('[TasksPaginated] –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –ø–æ–∏—Å–∫ –ø—Ä–∏–º–µ–Ω–µ–Ω');
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –¥—É–±–ª–∏—Ä—É—é—â–∏—Ö—Å—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –ø–æ–∏—Å–∫–∞ DataTables
function removeDuplicateSearchElements() {
    try {
        // –£–¥–∞–ª—è–µ–º –¥—É–±–ª–∏—Ä—É—é—â–∏–µ—Å—è –ø–æ–∏—Å–∫–æ–≤—ã–µ –ø–æ–ª—è DataTables
        const searchContainers = $('.dataTables_filter');
        if (searchContainers.length > 1) {
            searchContainers.slice(1).remove();
            console.log('[TasksPaginated] –£–¥–∞–ª–µ–Ω—ã –¥—É–±–ª–∏—Ä—É—é—â–∏–µ—Å—è —ç–ª–µ–º–µ–Ω—Ç—ã –ø–æ–∏—Å–∫–∞');
        }

        // –£–¥–∞–ª—è–µ–º –¥—É–±–ª–∏—Ä—É—é—â–∏–µ—Å—è –∫–∞—Å—Ç–æ–º–Ω—ã–µ –ø–æ–∏—Å–∫–æ–≤—ã–µ –ø–æ–ª—è
        const customSearchInputs = $('input[data-custom-search="true"]');
        if (customSearchInputs.length > 1) {
            customSearchInputs.slice(1).remove();
            console.log('[TasksPaginated] –£–¥–∞–ª–µ–Ω—ã –¥—É–±–ª–∏—Ä—É—é—â–∏–µ—Å—è –∫–∞—Å—Ç–æ–º–Ω—ã–µ –ø–æ–∏—Å–∫–æ–≤—ã–µ –ø–æ–ª—è');
        }

        // –£–¥–∞–ª—è–µ–º –¥—É–±–ª–∏—Ä—É—é—â–∏–µ—Å—è —Å–µ–ª–µ–∫—Ç–æ—Ä—ã –¥–ª–∏–Ω—ã
        const lengthContainers = $('.dataTables_length');
        if (lengthContainers.length > 1) {
            lengthContainers.slice(1).remove();
            console.log('[TasksPaginated] –£–¥–∞–ª–µ–Ω—ã –¥—É–±–ª–∏—Ä—É—é—â–∏–µ—Å—è —Å–µ–ª–µ–∫—Ç–æ—Ä—ã –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∑–∞–ø–∏—Å–µ–π');
        }

        // –£–¥–∞–ª—è–µ–º –¥—É–±–ª–∏—Ä—É—é—â–∏–µ—Å—è info –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
        const infoContainers = $('.dataTables_info');
        if (infoContainers.length > 1) {
            infoContainers.slice(1).remove();
            console.log('[TasksPaginated] –£–¥–∞–ª–µ–Ω—ã –¥—É–±–ª–∏—Ä—É—é—â–∏–µ—Å—è info –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã');
        }

        // –£–¥–∞–ª—è–µ–º –¥—É–±–ª–∏—Ä—É—é—â–∏–µ—Å—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
        const paginateContainers = $('.dataTables_paginate');
        if (paginateContainers.length > 1) {
            paginateContainers.slice(1).remove();
            console.log('[TasksPaginated] –£–¥–∞–ª–µ–Ω—ã –¥—É–±–ª–∏—Ä—É—é—â–∏–µ—Å—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –ø–∞–≥–∏–Ω–∞—Ü–∏–∏');
        }

        // –£–¥–∞–ª—è–µ–º –ø—É—Å—Ç—ã–µ –æ–±–µ—Ä—Ç–∫–∏
        $('.dataTables_wrapper').each(function() {
            const $wrapper = $(this);
            if ($wrapper.children().length === 0) {
                $wrapper.remove();
                console.log('[TasksPaginated] –£–¥–∞–ª–µ–Ω–∞ –ø—É—Å—Ç–∞—è –æ–±–µ—Ä—Ç–∫–∞ DataTables');
            }
        });

    } catch (error) {
        console.warn('[TasksPaginated] –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –¥—É–±–ª–∏—Ä—É—é—â–∏—Ö—Å—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤:', error);
    }
}

// –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è —Ñ—É–Ω–∫—Ü–∏–∏ —Å–∫—Ä–æ–ª–ª–∏–Ω–≥–∞ - –±–æ–ª—å—à–µ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è
function loadScrollDataWithFilters() {
    console.log('[TasksPaginated] loadScrollDataWithFilters –±–æ–ª—å—à–µ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è - –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ tasksDataTable.draw()');
    if (window.tasksDataTable) {
        window.tasksDataTable.draw();
    }
}

// –§—É–Ω–∫—Ü–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø–æ–∏—Å–∫–∞ –≤ —Å–∫—Ä–æ–ª–ª–∏–Ω–≥-—Ä–µ–∂–∏–º–µ - –±–æ–ª—å—à–µ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è
function performScrollingSearch(searchTerm) {
    console.log('[TasksPaginated] –°–∫—Ä–æ–ª–ª–∏–Ω–≥ –ø–æ–∏—Å–∫ –±–æ–ª—å—à–µ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è');
    return;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤–∏–¥–∏–º–æ—Å—Ç—å—é –∫–Ω–æ–ø–æ–∫ —Å–±—Ä–æ—Å–∞
function updateClearButtonVisibility(selectElement) {
    if (!selectElement || selectElement.length === 0) {
        console.warn('[TasksPaginated] updateClearButtonVisibility: selectElement –Ω–µ –Ω–∞–π–¥–µ–Ω');
        return;
    }

    const rawValue = selectElement.val();
    const value = rawValue || ''; // –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ null/undefined
    const filterId = selectElement.attr('id');
    const clearBtnId = '#clear-' + filterId.replace('-filter', '') + '-filter';
    const clearBtn = $(clearBtnId);
    const container = selectElement.closest('.filter-container');

    console.log('[TasksPaginated] üîç –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ –æ—á–∏—Å—Ç–∫–∏:', {
        filterId: filterId,
        rawValue: rawValue,
        value: value,
        valueType: typeof rawValue,
        isEmpty: !value || value === '' || value === 'null',
        clearBtnId: clearBtnId,
        clearBtnExists: clearBtn.length > 0,
        containerExists: container.length > 0
    });

    // –£–õ–£–ß–®–ï–ù–û: –ë–æ–ª–µ–µ –Ω–∞–¥–µ–∂–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∑–Ω–∞—á–µ–Ω–∏—è
    const hasValue = value && value !== '' && value !== 'null' && value !== null && value !== undefined;

    if (hasValue) {
        // –£–õ–£–ß–®–ï–ù–û: –ò—Å–ø–æ–ª—å–∑—É–µ–º –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
        clearBtn.addClass('show');
        clearBtn.css({
            'display': 'flex',
            'visibility': 'visible',
            'opacity': '1',
            'pointer-events': 'auto'
        });

        container.addClass('has-value');

        // –£–õ–£–ß–®–ï–ù–û: –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∏–¥–∏–º–æ—Å—Ç–∏ –ø–æ—Å–ª–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∏–ª–µ–π
        setTimeout(() => {
            if (!clearBtn.is(':visible')) {
                console.warn('[TasksPaginated] ‚ö†Ô∏è –ö–Ω–æ–ø–∫–∞ –¥–æ —Å–∏—Ö –ø–æ—Ä –Ω–µ –≤–∏–¥–Ω–∞ –ø–æ—Å–ª–µ CSS, –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —á–µ—Ä–µ–∑ –∞—Ç—Ä–∏–±—É—Ç—ã');
                clearBtn.attr('style', 'display: flex !important; visibility: visible !important; opacity: 1 !important; pointer-events: auto !important;');
            }
        }, 50);

        console.log('[TasksPaginated] ‚úÖ –ö–Ω–æ–ø–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –ü–û–ö–ê–ó–ê–ù–ê –¥–ª—è', filterId, ', –∑–Ω–∞—á–µ–Ω–∏–µ:', value);
    } else {
        // –£–õ–£–ß–®–ï–ù–û: –ò—Å–ø–æ–ª—å–∑—É–µ–º –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã —Å–∫—Ä—ã—Ç–∏—è
        clearBtn.removeClass('show');
        clearBtn.css({
            'display': 'none',
            'visibility': 'hidden',
            'opacity': '0',
            'pointer-events': 'none'
        });

        container.removeClass('has-value');
        console.log('[TasksPaginated] ‚ùå –ö–Ω–æ–ø–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –°–ö–†–´–¢–ê –¥–ª—è', filterId, ', –∑–Ω–∞—á–µ–Ω–∏–µ –ø—É—Å—Ç–æ–µ –∏–ª–∏ null');
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤—Å–µ—Ö –∫–Ω–æ–ø–æ–∫ —Å–±—Ä–æ—Å–∞
function updateAllClearButtons() {
    console.log('[TasksPaginated] üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –í–°–ï–• –∫–Ω–æ–ø–æ–∫ –æ—á–∏—Å—Ç–∫–∏...');

    // –ñ–¥–µ–º —á—Ç–æ DOM –≥–æ—Ç–æ–≤
    if (document.readyState !== 'complete') {
        console.log('[TasksPaginated] DOM –Ω–µ –≥–æ—Ç–æ–≤, –æ—Ç–∫–ª–∞–¥—ã–≤–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫');
        setTimeout(updateAllClearButtons, 100);
        return;
    }

    updateClearButtonVisibility($('#status-filter'));
    updateClearButtonVisibility($('#project-filter'));
    updateClearButtonVisibility($('#priority-filter'));

    console.log('[TasksPaginated] ‚úÖ –í—Å–µ –∫–Ω–æ–ø–∫–∏ –æ—á–∏—Å—Ç–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã');
}

// –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
function updateInfo(pagination) {
    if (!pagination) return;

    const start = ((pagination.page - 1) * pagination.per_page) + 1;
    const end = Math.min(pagination.page * pagination.per_page, pagination.total);
    const infoText = '–ü–æ–∫–∞–∑–∞–Ω—ã –∑–∞–ø–∏—Å–∏ —Å ' + start + ' –ø–æ ' + end + ' –∏–∑ ' + pagination.total;

    $('#tasksInfoContainer .dataTables_info').text(infoText);
}

// –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å—Ç–∞—Ç—É—Å–∞—Ö
function getStatusInfo(status) {
    const statusStr = String(status || '');
    const statusLower = statusStr.toLowerCase();
    if (statusLower.includes('–Ω–æ–≤—ã–π') || statusLower.includes('new')) {
        return { class: 'status-new', icon: 'fas fa-plus-circle' };
    } else if (statusLower.includes('—Ä–∞–±–æ—Ç–µ') || statusLower.includes('progress')) {
        return { class: 'status-progress', icon: 'fas fa-play-circle' };
    } else if (statusLower.includes('–∑–∞–∫—Ä—ã—Ç') || statusLower.includes('closed')) {
        return { class: 'status-closed', icon: 'fas fa-check-circle' };
    }
    return { class: 'status-default', icon: 'fas fa-circle' };
}

// –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞—Ö
function getPriorityInfo(priority) {
    const priorityStr = String(priority || '');
    const priorityLower = priorityStr.toLowerCase();
    if (priorityLower.includes('–≤—ã—Å–æ–∫') || priorityLower.includes('urgent') || priorityLower.includes('high')) {
        return { class: 'priority-high', icon: 'fas fa-arrow-up' };
    } else if (priorityLower.includes('–Ω–æ—Ä–º') || priorityLower.includes('normal') || priorityLower.includes('–Ω–æ—Ä–º–∞–ª—å–Ω')) {
        return { class: 'priority-normal', icon: 'fas fa-circle' };
    } else if (priorityLower.includes('–Ω–∏–∑–∫') || priorityLower.includes('low')) {
        return { class: 'priority-low', icon: 'fas fa-arrow-down' };
    } else if (priorityLower.includes('–∫—Ä–∏—Ç–∏—á') || priorityLower.includes('critical') || priorityLower.includes('—Å—Ä–æ—á–Ω')) {
        return { class: 'priority-critical', icon: 'fas fa-exclamation-triangle' };
    }
    return { class: 'priority-default', icon: 'fas fa-question' };
}

// –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞—Ç
function formatDate(dateString, isStartDate) {
    if (!dateString) return isStartDate ? '-' : '–ù–µ —É–∫–∞–∑–∞–Ω–æ';
    try {
        const date = new Date(dateString);
        return date.toLocaleDateString('ru-RU', {
            day: '2-digit',
            month: '2-digit',
            year: 'numeric'
        });
    } catch (e) {
        return '–ù–µ–≤–µ—Ä–Ω–∞—è –¥–∞—Ç–∞';
    }
}

// –≠–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ HTML
function escapeHtml(text) {
    const map = {
        '&': '&amp;',
        '<': '&lt;',
        '>': '&gt;',
        '"': '&quot;',
        "'": '&#039;'
    };
    return text
        ? String(text).replace(/[&<>"']/g, function(m) { return map[m]; })
        : '';
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ –∑–∞–≥—Ä—É–∑–∫–∏
function showTableLoading() {
    console.log('[TasksPaginated] –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏...');

    // –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–æ–≤—ã–π —Å–ø–∏–Ω–Ω–µ—Ä –≤ —Å—Ç–∏–ª–µ Issues
    if (window.loadingManager && typeof window.loadingManager.show === 'function') {
        window.loadingManager.show();
        console.log('[TasksPaginated] –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ–∫–∞–∑–∞–Ω —á–µ—Ä–µ–∑ LoadingManager');
        return;
    }

    // Fallback: –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ø–∏–Ω–Ω–µ—Ä –Ω–∞–ø—Ä—è–º—É—é
    const spinner = document.getElementById('loading-spinner');
    if (spinner) {
        spinner.style.display = 'flex';
        spinner.classList.add('show');
        console.log('[TasksPaginated] –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ–∫–∞–∑–∞–Ω —á–µ—Ä–µ–∑ DOM');
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–∫—Ä—ã—Ç–∏—è –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ –∑–∞–≥—Ä—É–∑–∫–∏
function hideTableLoading() {
    console.log('[TasksPaginated] –°–∫—Ä—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏...');

    // –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–æ–≤—ã–π —Å–ø–∏–Ω–Ω–µ—Ä –≤ —Å—Ç–∏–ª–µ Issues
    if (window.loadingManager && typeof window.loadingManager.hide === 'function') {
        window.loadingManager.hide();
        console.log('[TasksPaginated] –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏ —Å–∫—Ä—ã—Ç —á–µ—Ä–µ–∑ LoadingManager');
        return;
    }

    // Fallback: —Å–∫—Ä—ã–≤–∞–µ–º —Å–ø–∏–Ω–Ω–µ—Ä –Ω–∞–ø—Ä—è–º—É—é
    const spinner = document.getElementById('loading-spinner');
    if (spinner) {
        spinner.classList.remove('show');
        setTimeout(() => {
            spinner.style.display = 'none';
        }, 300);
        console.log('[TasksPaginated] –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏ —Å–∫—Ä—ã—Ç —á–µ—Ä–µ–∑ DOM');
    }
}

// –î–µ–ª–∞–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –¥–æ—Å—Ç—É–ø–Ω—ã–º–∏ –≥–ª–æ–±–∞–ª—å–Ω–æ
window.showTableLoading = showTableLoading;
window.hideTableLoading = hideTableLoading;

function showError(message) {
    console.error('[TasksPaginated] –û—à–∏–±–∫–∞:', message);

    const errorHtml = '<div class="alert alert-danger mt-3" role="alert">' +
        '<i class="fas fa-exclamation-triangle"></i>' +
        '<strong>–û—à–∏–±–∫–∞:</strong> ' + message +
        '<button type="button" class="close" onclick="$(this).parent().fadeOut()">' +
        '<span>&times;</span>' +
        '</button>' +
        '</div>';
    $('#tasks-container').prepend(errorHtml);
}

// –û—á–∏—Å—Ç–∫–∞ —Ñ–∏–ª—å—Ç—Ä–æ–≤
function clearAndDisableFilters() {
    console.log('[TasksPaginated] clearAndDisableFilters –≤—ã–∑–≤–∞–Ω–∞ - –æ—á–∏—â–∞–µ–º –∏ –±–ª–æ–∫–∏—Ä—É–µ–º —Ñ–∏–ª—å—Ç—Ä—ã');
    $('#status-filter, #project-filter, #priority-filter').each(function() {
        $(this).empty().append('<option value="">–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏</option>').prop('disabled', true);
    });
}

// –ö—ç—à –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–æ–≤
let filtersCache = {
    data: null,
    timestamp: null,
    duration: 300000, // 5 –º–∏–Ω—É—Ç –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö
    isLoading: false
};

// –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∏–ª—å—Ç—Ä–æ–≤ - –£–õ–£–ß–®–ï–ù–ù–ê–Ø –í–ï–†–°–ò–Ø —Å –∏–µ—Ä–∞—Ä—Ö–∏—á–µ—Å–∫–∏–º –¥–µ—Ä–µ–≤–æ–º
function loadAllFiltersAsync() {
    if (filtersCache.isLoading) {
        console.log('[TasksPaginated] –§–∏–ª—å—Ç—Ä—ã —É–∂–µ –∑–∞–≥—Ä—É–∂–∞—é—Ç—Å—è, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º...');
        return;
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—ç—à (5 –º–∏–Ω—É—Ç)
    const now = Date.now();
    const cacheValidTime = 5 * 60 * 1000; // 5 –º–∏–Ω—É—Ç
    if (filtersCache.data &&
        filtersCache.timestamp &&
        (now - filtersCache.timestamp) < cacheValidTime) {
        console.log('[TasksPaginated] –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã');
        updateFilterOptions(filtersCache.data);
        return;
    }

    console.log('[TasksPaginated] üöÄ –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∏–ª—å—Ç—Ä–æ–≤ —Å –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–æ–π —Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏...');
    filtersCache.isLoading = true;
    showFiltersLoadingIndicator(true);

    // –ò—Å–ø–æ–ª—å–∑—É–µ–º –±—ã—Å—Ç—Ä—ã–π API —Å –ø—Ä—è–º—ã–º–∏ SQL –∑–∞–ø—Ä–æ—Å–∞–º–∏
    $.get('/tasks/get-my-tasks-filters-optimized')
        .done(function(response) {
            if (response.success) {
                console.log('[TasksPaginated] üèóÔ∏è –§–∏–ª—å—Ç—Ä—ã –ø–æ–ª—É—á–µ–Ω—ã —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–æ–π');
                console.log('[TasksPaginated] –°—Ç–∞—Ç—É—Å—ã (–ª–æ–∫–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–µ –∏–∑ u_statuses):', response.statuses?.length || 0);
                console.log('[TasksPaginated] –ü—Ä–æ–µ–∫—Ç—ã (–∏–µ—Ä–∞—Ä—Ö–∏—á–µ—Å–∫–∏–µ):', response.projects?.length || 0);
                console.log('[TasksPaginated] –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç—ã (–æ—Ç–¥–µ–ª—å–Ω—ã–π API):', response.priorities?.length || 0);

                // –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê: –í—ã–≤–æ–¥–∏–º –ø—Ä–∏–º–µ—Ä—ã –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ç–∏–ø–∞ —Ñ–∏–ª—å—Ç—Ä–∞
                if (response.statuses && response.statuses.length > 0) {
                    console.log('[TasksPaginated] üîç –ü–†–ò–ú–ï–† –°–¢–ê–¢–£–°–ê:', response.statuses[0]);
                }
                if (response.projects && response.projects.length > 0) {
                    console.log('[TasksPaginated] üîç –ü–†–ò–ú–ï–† –ü–†–û–ï–ö–¢–ê:', response.projects[0]);
                }
                if (response.priorities && response.priorities.length > 0) {
                    console.log('[TasksPaginated] üîç –ü–†–ò–ú–ï–† –ü–†–ò–û–†–ò–¢–ï–¢–ê:', response.priorities[0]);
                }

                if (response.performance) {
                    console.log('[TasksPaginated] –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å:', response.performance);
                    if (response.performance.architecture) {
                        console.log('[TasksPaginated] –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞:', response.performance.architecture);
                    }
                }

                const filters = {
                    statuses: response.statuses || [],
                    projects: response.projects || [],
                    priorities: response.priorities || [],
                    hierarchical: response.hierarchical || false
                };

                // –ö—ç—à–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ
                filtersCache.data = filters;
                filtersCache.timestamp = now;

                updateFilterOptionsHierarchical(filters);
            } else {
                console.error('[TasksPaginated] –ò–µ—Ä–∞—Ä—Ö–∏—á–µ—Å–∫–∏–π API –≤–µ—Ä–Ω—É–ª success: false');
                fallbackToOldAPI();
            }
        })
        .fail(function(jqXHR, textStatus, errorThrown) {
            console.warn('[TasksPaginated] –ò–µ—Ä–∞—Ä—Ö–∏—á–µ—Å–∫–∏–π API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –ø–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —Å—Ç–∞—Ä—ã–π API');
            console.warn('[TasksPaginated] –û—à–∏–±–∫–∞:', textStatus, errorThrown);
            fallbackToOldAPI();
        })
        .always(function() {
            filtersCache.isLoading = false;
            showFiltersLoadingIndicator(false);
        });

    // Fallback –Ω–∞ —Å—Ç–∞—Ä—ã–π API
    function fallbackToOldAPI() {
        console.log('[TasksPaginated] –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞—Ä—ã–π API —Ñ–∏–ª—å—Ç—Ä–æ–≤...');
        $.get('/tasks/get-my-tasks-filters-direct-api')
            .done(function(response) {
                if (response.success) {
                    console.log('[TasksPaginated] –°—Ç–∞—Ä—ã–π API —Å—Ä–∞–±–æ—Ç–∞–ª —É—Å–ø–µ—à–Ω–æ');
                    const filters = {
                        statuses: response.statuses || [],
                        projects: response.projects || [],
                        priorities: response.priorities || [],
                        hierarchical: false
                    };

                    // –ö—ç—à–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ
                    filtersCache.data = filters;
                    filtersCache.timestamp = now;

                    updateFilterOptions(filters);
                } else {
                    console.error('[TasksPaginated] –°—Ç–∞—Ä—ã–π API —Ç–æ–∂–µ –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª');
                    clearAndDisableFilters();
                }
            })
            .fail(function(jqXHR, textStatus, errorThrown) {
                console.error('[TasksPaginated] –í—Å–µ API –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã:', textStatus, errorThrown);
                clearAndDisableFilters();
            });
    }
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ–ø—Ü–∏–π —Ñ–∏–ª—å—Ç—Ä–æ–≤ - –ù–û–í–ê–Ø –í–ï–†–°–ò–Ø —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –∏–µ—Ä–∞—Ä—Ö–∏–∏
function updateFilterOptionsHierarchical(filters) {
    // –û–±–Ω–æ–≤–ª—è–µ–º –æ–±—ã—á–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã
    populateStandardSelect('#status-filter', filters.statuses, '–í—Å–µ —Å—Ç–∞—Ç—É—Å—ã');
    populateStandardSelect('#priority-filter', filters.priorities, '–í—Å–µ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç—ã');

    // –û–¢–ö–õ–Æ–ß–ï–ù–û: TreeView –¥–ª—è —É–ø—Ä–æ—â–µ–Ω–∏—è –∏ –∏–∑–±–µ–∂–∞–Ω–∏—è –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤
    // –í—Å–µ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–æ—Å—Ç—É—é —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—é –ø—Ä–æ–µ–∫—Ç–æ–≤
    console.log('[TasksPaginated] üìã –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–æ—Å—Ç—É—é —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—é –¥–ª—è –ø—Ä–æ–µ–∫—Ç–æ–≤ (TreeView –æ—Ç–∫–ª—é—á–µ–Ω –¥–ª—è —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏)');
    populateProjectSelect('#project-filter', filters.projects, '–í—Å–µ –ø—Ä–æ–µ–∫—Ç—ã');

    // –ö–†–ò–¢–ò–ß–ù–û: –û–±–Ω–æ–≤–ª—è–µ–º –≤–∏–¥–∏–º–æ—Å—Ç—å –∫–Ω–æ–ø–æ–∫ –æ—á–∏—Å—Ç–∫–∏ –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ –≤—Å–µ—Ö —Ñ–∏–ª—å—Ç—Ä–æ–≤
    setTimeout(() => {
        updateAllClearButtons();
        console.log('[TasksPaginated] –í–∏–¥–∏–º–æ—Å—Ç—å –∫–Ω–æ–ø–æ–∫ –æ—á–∏—Å—Ç–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∞ –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∏–ª—å—Ç—Ä–æ–≤');
    }, 100);

    console.log('[TasksPaginated] –§–∏–ª—å—Ç—Ä—ã –æ–±–Ω–æ–≤–ª–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ');
}

// –û–¢–ö–õ–Æ–ß–ï–ù–û: –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è TreeView –¥–ª—è –ø—Ä–æ–µ–∫—Ç–æ–≤
// –ü–†–ò–ß–ò–ù–ê: –£–ø—Ä–æ—â–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –∏ –∏–∑–±–µ–∂–∞–Ω–∏–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–æ–≤ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
function initializeProjectTreeView(projects) {
    console.warn('[TasksPaginated] TreeView –æ—Ç–∫–ª—é—á–µ–Ω - –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø—Ä–æ—Å—Ç–∞—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø—Ä–æ–µ–∫—Ç–æ–≤');

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–±—ã—á–Ω—ã–π —Å–µ–ª–µ–∫—Ç –≤–º–µ—Å—Ç–æ TreeView
    const oldSelect = $('#project-filter');
    oldSelect.show();

    // –ó–∞–ø–æ–ª–Ω—è–µ–º –æ–±—ã—á–Ω—ã–π —Å–µ–ª–µ–∫—Ç
    populateProjectSelect('#project-filter', projects, '–í—Å–µ –ø—Ä–æ–µ–∫—Ç—ã');

    return; // –î–æ—Å—Ä–æ—á–Ω—ã–π –≤—ã—Ö–æ–¥ - –æ—Å—Ç–∞–ª—å–Ω–æ–π –∫–æ–¥ TreeView –Ω–µ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ–ø—Ü–∏–π —Ñ–∏–ª—å—Ç—Ä–æ–≤ - –°–¢–ê–†–ê–Ø –í–ï–†–°–ò–Ø –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
function updateFilterOptions(filters) {
    console.log('[TasksPaginated] –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–æ–≤ (—Å—Ç–∞—Ä—ã–π —Ä–µ–∂–∏–º) - —Å—Ç–∞—Ç—É—Å—ã:', filters.statuses?.length, ', –ø—Ä–æ–µ–∫—Ç—ã:', filters.projects?.length, ', –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç—ã:', filters.priorities?.length);

    populateStandardSelect('#status-filter', filters.statuses, '–í—Å–µ —Å—Ç–∞—Ç—É—Å—ã');
    populateProjectSelect('#project-filter', filters.projects, '–í—Å–µ –ø—Ä–æ–µ–∫—Ç—ã');
    populateStandardSelect('#priority-filter', filters.priorities, '–í—Å–µ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç—ã');

    // –û–±–Ω–æ–≤–ª—è–µ–º –≤–∏–¥–∏–º–æ—Å—Ç—å –∫–Ω–æ–ø–æ–∫ —Å–±—Ä–æ—Å–∞ –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∏–ª—å—Ç—Ä–æ–≤
    updateAllClearButtons();

    console.log('[TasksPaginated] –§–∏–ª—å—Ç—Ä—ã –æ–±–Ω–æ–≤–ª–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ (—Å—Ç–∞—Ä—ã–π —Ä–µ–∂–∏–º)');
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –æ–±—ã—á–Ω—ã—Ö —Å–µ–ª–µ–∫—Ç–æ–≤
function populateStandardSelect(selector, options, defaultOptionText) {
    const select = $(selector);
    console.log('[TasksPaginated] populateStandardSelect –¥–ª—è', selector, '- –Ω–∞–π–¥–µ–Ω —Å–µ–ª–µ–∫—Ç:', select.length > 0, ', –æ–ø—Ü–∏–π:', (options || []).length);

    if (select.length) {
        // –ò–°–ü–†–ê–í–õ–ï–ù–û: –ù–ï —Å–æ—Ö—Ä–∞–Ω—è–µ–º currentValue - –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —Å–±—Ä–∞—Å—ã–≤–∞–µ–º –∫ –¥–µ—Ñ–æ–ª—Ç—É
        select.empty().append('<option value="">' + defaultOptionText + '</option>');

        // –ò–°–ü–†–ê–í–õ–ï–ù–û v2: –ì–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ–º, —á—Ç–æ ID –≤—Å–µ–≥–¥–∞ —á–∏—Å–ª–æ–≤–æ–π
        (options || []).forEach(function(opt) {
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º ID –≤ —á–∏—Å–ª–æ –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
            let id = opt.id;
            if (typeof id === 'string') {
                // –ü—Ä–æ–±—É–µ–º –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å —Å—Ç—Ä–æ–∫—É –≤ —á–∏—Å–ª–æ
                const numId = parseInt(id, 10);
                if (!isNaN(numId)) {
                    id = numId; // –ò—Å–ø–æ–ª—å–∑—É–µ–º —á–∏—Å–ª–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –µ—Å–ª–∏ –≤–æ–∑–º–æ–∂–Ω–æ
                }
            }

            // –î–æ–±–∞–≤–ª—è–µ–º –æ–ø—Ü–∏—é —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º ID
            select.append('<option value="' + id + '">' + escapeHtml(opt.name) + '</option>');

            // –õ–æ–≥–∏—Ä—É–µ–º –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
            console.log('[TasksPaginated] –î–æ–±–∞–≤–ª–µ–Ω–∞ –æ–ø—Ü–∏—è:', {
                name: opt.name,
                original_id: opt.id,
                id_type: typeof opt.id,
                used_id: id,
                used_id_type: typeof id
            });
        });

        // –ö–†–ò–¢–ò–ß–ù–û: –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—É—Å—Ç–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ (–¥–µ—Ñ–æ–ª—Ç)
        select.val('');

        const container = select.closest('.filter-container');
        // –ü–æ—Å–ª–µ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ —Å–±—Ä–æ—Å–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –ù–ï –¥–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å has-value
        container.removeClass('has-value');

        console.log('[TasksPaginated] –°–µ–ª–µ–∫—Ç', selector, '–∑–∞–ø–æ–ª–Ω–µ–Ω –∏ —Å–±—Ä–æ—à–µ–Ω –∫ –¥–µ—Ñ–æ–ª—Ç—É, –∏—Ç–æ–≥–æ –æ–ø—Ü–∏–π:', select.find('option').length, ', —Ç–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ:', select.val());
    } else {
        console.error('[TasksPaginated] –°–µ–ª–µ–∫—Ç', selector, '–Ω–µ –Ω–∞–π–¥–µ–Ω –≤ DOM!');
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è —Å–µ–ª–µ–∫—Ç–∞ –ø—Ä–æ–µ–∫—Ç–æ–≤ –ü–†–û–°–¢–´–ú –°–ü–ò–°–ö–û–ú
function populateProjectSelect(selector, options, defaultOptionText) {
    const select = $(selector);
    if (!select.length) return;

    // –ò–°–ü–†–ê–í–õ–ï–ù–û: –ù–ï —Å–æ—Ö—Ä–∞–Ω—è–µ–º currentValue - –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —Å–±—Ä–∞—Å—ã–≤–∞–µ–º –∫ –¥–µ—Ñ–æ–ª—Ç—É
    select.empty().append('<option value="">' + defaultOptionText + '</option>');

    console.log('[Projects] –ü–æ–ª—É—á–µ–Ω–æ –ø—Ä–æ–µ–∫—Ç–æ–≤ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è (–ø—Ä–æ—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫):', options.length);

    // –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø—Ä–æ–µ–∫—Ç—ã –ø–æ –∞–ª—Ñ–∞–≤–∏—Ç—É –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞
    const sortedProjects = (options || []).sort(function(a, b) {
        const nameA = (a.original_name || a.name || '').toLowerCase();
        const nameB = (b.original_name || b.name || '').toLowerCase();
        return nameA.localeCompare(nameB);
    });

    // –î–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ –ø—Ä–æ–µ–∫—Ç—ã –∫–∞–∫ –ø—Ä–æ—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫
    sortedProjects.forEach(function(opt) {
        const option = document.createElement('option');

        // –ò–°–ü–†–ê–í–õ–ï–ù–û v2: –ì–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ–º, —á—Ç–æ ID –≤—Å–µ–≥–¥–∞ —á–∏—Å–ª–æ–≤–æ–π
        let id = opt.id;
        if (typeof id === 'string') {
            // –ü—Ä–æ–±—É–µ–º –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å —Å—Ç—Ä–æ–∫—É –≤ —á–∏—Å–ª–æ
            const numId = parseInt(id, 10);
            if (!isNaN(numId)) {
                id = numId; // –ò—Å–ø–æ–ª—å–∑—É–µ–º —á–∏—Å–ª–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –µ—Å–ª–∏ –≤–æ–∑–º–æ–∂–Ω–æ
            }
        }

        option.value = id;

        // –ü—Ä–æ—Å—Ç–æ–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–æ–ª—å–∫–æ –Ω–∞–∑–≤–∞–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞
        const displayName = opt.original_name || opt.name;
        option.textContent = displayName;

        // –î–æ–±–∞–≤–ª—è–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ –∞—Ç—Ä–∏–±—É—Ç—ã –¥–ª—è –ø–æ–∏—Å–∫–∞
        option.setAttribute('data-name', displayName.toLowerCase());

        // –õ–æ–≥–∏—Ä—É–µ–º –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
        console.log('[Projects] –î–æ–±–∞–≤–ª–µ–Ω –ø—Ä–æ–µ–∫—Ç:', {
            name: displayName,
            original_id: opt.id,
            id_type: typeof opt.id,
            used_id: id,
            used_id_type: typeof id
        });

        select.append(option);
    });

    // –ö–†–ò–¢–ò–ß–ù–û: –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—É—Å—Ç–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ (–¥–µ—Ñ–æ–ª—Ç)
    select.val('');

    // –û–±–Ω–æ–≤–ª—è–µ–º –≤–∏–∑—É–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ - —É–±–∏—Ä–∞–µ–º has-value
    const container = select.closest('.filter-container');
    container.removeClass('has-value');

    // –î–æ–±–∞–≤–ª—è–µ–º —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –ø–æ–∏—Å–∫–∞ –¥–ª—è —Å–µ–ª–µ–∫—Ç–∞ –ø—Ä–æ–µ–∫—Ç–æ–≤
    addSearchFunctionality(select);

    console.log('[Projects] –ü—Ä–æ—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫ –ø—Ä–æ–µ–∫—Ç–æ–≤ –∑–∞–≥—Ä—É–∂–µ–Ω –∏ —Å–±—Ä–æ—à–µ–Ω –∫ –¥–µ—Ñ–æ–ª—Ç—É, –∑–Ω–∞—á–µ–Ω–∏–µ:', select.val());
}

// –ü–†–û–°–¢–ê–Ø —Ñ—É–Ω–∫—Ü–∏—è –ø–æ–∏—Å–∫–∞ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–æ–≤
function addSearchFunctionality(select) {
    const selectElement = select[0];
    if (!selectElement || selectElement.dataset.searchEnabled) return;

    selectElement.dataset.searchEnabled = 'true';
    console.log('[Projects] –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–æ—Å—Ç–æ–π –ø–æ–∏—Å–∫ –¥–ª—è —Å–µ–ª–µ–∫—Ç–∞ –ø—Ä–æ–µ–∫—Ç–æ–≤');

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ –æ–ø—Ü–∏–∏ –æ–¥–∏–Ω —Ä–∞–∑
    const originalHTML = selectElement.innerHTML;
    const allOptions = Array.from(selectElement.options);

    // –ö–†–ò–¢–ò–ß–ù–û: –û—Ç–∫–ª—é—á–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ select
    selectElement.style.pointerEvents = 'none';
    selectElement.setAttribute('readonly', true);

    // –°–æ–∑–¥–∞–µ–º –Ω–µ–≤–∏–¥–∏–º—ã–π overlay –¥–ª—è –ø–µ—Ä–µ—Ö–≤–∞—Ç–∞ –∫–ª–∏–∫–æ–≤ –ù–û –∏—Å–∫–ª—é—á–∞–µ–º –∫–Ω–æ–ø–∫—É –æ—á–∏—Å—Ç–∫–∏
    const overlay = document.createElement('div');
    overlay.className = 'project-select-overlay';
    overlay.style.cssText = `
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        z-index: 5;
        cursor: pointer;
        background: transparent;
    `;

    // –î–æ–±–∞–≤–ª—è–µ–º overlay –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
    const container = selectElement.closest('.filter-container');
    if (container.style.position === 'static' || !container.style.position) {
        container.style.position = 'relative';
    }
    container.appendChild(overlay);

    // –ò–°–ü–†–ê–í–õ–ï–ù–û: –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç —á—Ç–æ –∫–ª–∏–∫ –ù–ï –ø–æ –∫–Ω–æ–ø–∫–µ –æ—á–∏—Å—Ç–∫–∏
    overlay.addEventListener('click', function(e) {
        e.preventDefault();
        e.stopPropagation();

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –∫–ª–∏–∫ –ù–ï –ø–æ–ø–∞–ª –≤ –æ–±–ª–∞—Å—Ç—å –∫–Ω–æ–ø–∫–∏ –æ—á–∏—Å—Ç–∫–∏
        const clearBtn = container.querySelector('.filter-clear-btn');
        if (clearBtn) {
            const clearBtnRect = clearBtn.getBoundingClientRect();
            const clickX = e.clientX;
            const clickY = e.clientY;

            // –ï—Å–ª–∏ –∫–ª–∏–∫ –ø–æ–ø–∞–ª –≤ –æ–±–ª–∞—Å—Ç—å –∫–Ω–æ–ø–∫–∏ –æ—á–∏—Å—Ç–∫–∏, –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º
            if (clickX >= clearBtnRect.left && clickX <= clearBtnRect.right &&
                clickY >= clearBtnRect.top && clickY <= clearBtnRect.bottom) {
                console.log('[Projects] –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ –æ—á–∏—Å—Ç–∫–∏, –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º overlay');
                return;
            }
        }

        console.log('[Projects] –ö–ª–∏–∫ –ø–æ overlay - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–∞—Å—Ç–æ–º–Ω—ã–π –¥—Ä–æ–ø–¥–∞—É–Ω');
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–æ—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫ —Å –ø–æ–∏—Å–∫–æ–º
        showProjectSearchDropdown(selectElement, allOptions, originalHTML);
    });

    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –±–ª–æ–∫–∏—Ä—É–µ–º –ª—é–±—ã–µ —Å–æ–±—ã—Ç–∏—è –Ω–∞ select
    selectElement.addEventListener('mousedown', function(e) {
        e.preventDefault();
        e.stopPropagation();
    });

    selectElement.addEventListener('focus', function(e) {
        e.preventDefault();
        this.blur();
    });
}

// –ü—Ä–æ—Å—Ç–æ–π dropdown –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø—Ä–æ–µ–∫—Ç–æ–≤
function showProjectSearchDropdown(selectElement, allOptions, originalHTML) {
    // –£–¥–∞–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π dropdown –µ—Å–ª–∏ –µ—Å—Ç—å
    const existingDropdown = document.querySelector('.project-search-dropdown');
    if (existingDropdown) {
        existingDropdown.remove();
    }

    const container = selectElement.closest('.filter-container');
    const rect = selectElement.getBoundingClientRect();

    // –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –ø–æ–¥—Ö–æ–¥: —Å–æ–∑–¥–∞–µ–º –¥—Ä–æ–ø–¥–∞—É–Ω –≤ body —Å —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–º –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ–º
    const useBodyDropdown = true;

    // –£–±–µ–∂–¥–∞–µ–º—Å—è —á—Ç–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –∏–º–µ–µ—Ç position: relative
    const containerStyle = window.getComputedStyle(container);
    if (containerStyle.position === 'static') {
        container.style.position = 'relative';
    }

    // –î–æ–±–∞–≤–ª—è–µ–º overflow: visible –¥–ª—è —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
    let parent = container.parentElement;
    while (parent && parent !== document.body) {
        const parentStyle = window.getComputedStyle(parent);
        if (parentStyle.overflow === 'hidden') {
            parent.style.overflow = 'visible';
            console.log('[Projects] –ò—Å–ø—Ä–∞–≤–ª–µ–Ω overflow –¥–ª—è:', parent.className);
        }
        parent = parent.parentElement;
    }

    // –°–æ–∑–¥–∞–µ–º dropdown - –ª–∏–±–æ –≤ body (—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π), –ª–∏–±–æ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ
    const dropdown = document.createElement('div');
    dropdown.className = 'project-search-dropdown';

    if (useBodyDropdown) {
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º fixed –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º–∏
        console.log('[Projects] –°–æ–∑–¥–∞–Ω–∏–µ body dropdown, –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã:', {
            top: rect.bottom + 2,
            left: rect.left,
            width: rect.width,
            selectRect: rect
        });
        dropdown.style.cssText = `
            position: fixed !important;
            top: ${rect.bottom + 2}px !important;
            left: ${rect.left}px !important;
            width: ${rect.width}px !important;
            background: white !important;
            border: 2px solid #ddd !important;
            border-radius: 8px !important;
            box-shadow: 0 8px 32px rgba(0,0,0,0.3) !important;
            z-index: 999999 !important;
            max-height: 300px !important;
            overflow: hidden !important;
            transform: translateZ(0) !important;
        `;
    } else {
        // –û–±—ã—á–Ω–æ–µ –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ
        dropdown.style.cssText = `
            position: absolute !important;
            top: 100% !important;
            left: 0 !important;
            right: 0 !important;
            background: white !important;
            border: 2px solid #ddd !important;
            border-radius: 8px !important;
            box-shadow: 0 8px 32px rgba(0,0,0,0.3) !important;
            z-index: 999999 !important;
            max-height: 300px !important;
            overflow: hidden !important;
            transform: translateZ(0) !important;
        `;
    }

    // –ü–æ–ª–µ –ø–æ–∏—Å–∫–∞
    const searchInput = document.createElement('input');
    searchInput.type = 'text';
    searchInput.placeholder = '–ü–æ–∏—Å–∫ –ø—Ä–æ–µ–∫—Ç–æ–≤...';
    searchInput.style.cssText = `
        width: 100%;
        padding: 12px;
        border: none;
        border-bottom: 1px solid #eee;
        font-size: 14px;
        outline: none;
    `;

    // –°–ø–∏—Å–æ–∫ –æ–ø—Ü–∏–π
    const optionsList = document.createElement('div');
    optionsList.style.cssText = `
        max-height: 250px;
        overflow-y: auto;
    `;

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –æ–ø—Ü–∏–π
    function renderOptions(searchTerm = '') {
        optionsList.innerHTML = '';

        allOptions.forEach(option => {
            const optionText = option.textContent.toLowerCase();
            if (optionText.includes(searchTerm.toLowerCase())) {
                const optionDiv = document.createElement('div');
                optionDiv.textContent = option.textContent;
                optionDiv.style.cssText = `
                    padding: 10px 12px;
                    cursor: pointer;
                    border-bottom: 1px solid #f5f5f5;
                    transition: background-color 0.2s;
                `;

                // –í—ã–¥–µ–ª—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—É—é –æ–ø—Ü–∏—é
                if (option.value === selectElement.value) {
                    optionDiv.style.backgroundColor = '#e3f2fd';
                    optionDiv.style.fontWeight = 'bold';
                }

                optionDiv.addEventListener('mouseenter', function() {
                    this.style.backgroundColor = '#f5f5f5';
                });

                optionDiv.addEventListener('mouseleave', function() {
                    if (option.value !== selectElement.value) {
                        this.style.backgroundColor = 'white';
                    }
                });

                optionDiv.addEventListener('click', function() {
                    selectElement.value = option.value;
                    selectElement.dispatchEvent(new Event('change'));
                    dropdown.remove();

                    // –û–±–Ω–æ–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –æ—á–∏—Å—Ç–∫–∏
                    if (typeof updateClearButtonVisibility === 'function') {
                        updateClearButtonVisibility($(selectElement));
                    }

                    // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Ç–∞–±–ª–∏—Ü—É –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
                    if (typeof loadScrollDataWithFilters === 'function') {
                        loadScrollDataWithFilters();
                    }
                });

                optionsList.appendChild(optionDiv);
            }
        });
    }

    // –ü–æ–∏—Å–∫ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
    searchInput.addEventListener('input', function() {
        renderOptions(this.value);
    });

    // –°–æ–±–∏—Ä–∞–µ–º dropdown
    dropdown.appendChild(searchInput);
    dropdown.appendChild(optionsList);

    // –î–æ–±–∞–≤–ª—è–µ–º –≤ DOM
    if (useBodyDropdown) {
        document.body.appendChild(dropdown);
    } else {
        container.appendChild(dropdown);
    }

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ –æ–ø—Ü–∏–∏ –∏–∑–Ω–∞—á–∞–ª—å–Ω–æ
    renderOptions();

    // –§–æ–∫—É—Å –Ω–∞ –ø–æ–∏—Å–∫
    setTimeout(() => searchInput.focus(), 10);

    // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ
    function closeDropdown(e) {
        if (!dropdown.contains(e.target) && !selectElement.contains(e.target)) {
            dropdown.remove();
            document.removeEventListener('click', closeDropdown);
            if (useBodyDropdown) {
                window.removeEventListener('scroll', updateDropdownPosition);
                window.removeEventListener('resize', closeDropdownHandler);
            }
        }
    }

    // –î–ª—è body dropdown - –æ–±–Ω–æ–≤–ª—è–µ–º –ø–æ–∑–∏—Ü–∏—é –ø—Ä–∏ —Å–∫—Ä–æ–ª–ª–µ
    function updateDropdownPosition() {
        if (useBodyDropdown && dropdown.parentElement) {
            const newRect = selectElement.getBoundingClientRect();
            dropdown.style.top = `${newRect.bottom + 2}px`;
            dropdown.style.left = `${newRect.left}px`;
            dropdown.style.width = `${newRect.width}px`;
        }
    }

    function closeDropdownHandler() {
        dropdown.remove();
        document.removeEventListener('click', closeDropdown);
        if (useBodyDropdown) {
            window.removeEventListener('scroll', updateDropdownPosition);
            window.removeEventListener('resize', closeDropdownHandler);
        }
    }

    setTimeout(() => {
        document.addEventListener('click', closeDropdown);
        if (useBodyDropdown) {
            window.addEventListener('scroll', updateDropdownPosition);
            window.addEventListener('resize', closeDropdownHandler);
        }
    }, 10);

    // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ Escape
    searchInput.addEventListener('keydown', function(e) {
        if (e.key === 'Escape') {
            closeDropdownHandler();
        }
    });

    console.log('[Projects] –ü—Ä–æ—Å—Ç–æ–π –ø–æ–∏—Å–∫ –æ—Ç–∫—Ä—ã—Ç, –æ–ø—Ü–∏–π –¥–æ—Å—Ç—É–ø–Ω–æ:', allOptions.length);
}

// –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∏–ª—å—Ç—Ä–æ–≤ (–±—ã—Å—Ç—Ä—ã–π)
function showFiltersLoadingIndicator(isLoading) {
    if(isLoading) {
        // –¢–æ–ª—å–∫–æ –º–µ–Ω—è–µ–º —Ç–µ–∫—Å—Ç –ø–µ—Ä–≤–æ–π –æ–ø—Ü–∏–∏, –Ω–µ –±–ª–æ–∫–∏—Ä—É–µ–º —Å–µ–ª–µ–∫—Ç—ã
        $('#status-filter').find('option:first').text('‚è≥ –ó–∞–≥—Ä—É–∑–∫–∞...');
        $('#project-filter').find('option:first').text('‚è≥ –ó–∞–≥—Ä—É–∑–∫–∞...');
        $('#priority-filter').find('option:first').text('‚è≥ –ó–∞–≥—Ä—É–∑–∫–∞...');

        // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å –¥–ª—è –≤–∏–∑—É–∞–ª—å–Ω–æ–≥–æ —ç—Ñ—Ñ–µ–∫—Ç–∞
        $('.filters-section').addClass('loading-filters');
    } else {
        $('#status-filter').find('option:first').text('–í—Å–µ —Å—Ç–∞—Ç—É—Å—ã');
        $('#project-filter').find('option:first').text('–í—Å–µ –ø—Ä–æ–µ–∫—Ç—ã');
        $('#priority-filter').find('option:first').text('–í—Å–µ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç—ã');

        $('.filters-section').removeClass('loading-filters');
    }
}

// –ó–∞–≥—Ä—É–∑–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –¥–ª—è –±–ª–æ–∫–∞ "–†–∞–∑–±–∏–≤–∫–∞ –ø–æ —Å—Ç–∞—Ç—É—Å–∞–º"
function loadFullStatisticsAsync() {
    console.log('[TasksPaginated] –ó–∞–≥—Ä—É–∑–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Ä–∞–∑–±–∏–≤–∫–∏ –ø–æ —Å—Ç–∞—Ç—É—Å–∞–º...');

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏
    showLoadingState();

    $.get('/tasks/get-my-tasks-statistics-optimized')
        .done(function(response) {
            if (response.success || response.total_tasks !== undefined) {
                console.log('[TasksPaginated] –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—É—á–µ–Ω–∞:', response);
                updateStatusBreakdownCards(response);
                updateDetailedStatusBreakdown(response);

                // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∞–∫–∫–æ—Ä–¥–µ–æ–Ω —Å—Ç–∞—Ç—É—Å–æ–≤
                initializeStatusAccordion(response);
            } else {
                console.error('[TasksPaginated] –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:', response.error);
                showErrorState();
                showAccordionError();
            }
        })
        .fail(function() {
            console.error('[TasksPaginated] –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ API —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏.');
            showErrorState();
            showAccordionError();
        });
}

function showLoadingState() {
    $('.status-breakdown-card').addClass('loading');
    $('#total-tasks-summary').addClass('loading').text('...');
    $('#total-tasks, #open-tasks, #closed-db-tasks, #paused-tasks').text('...');
}

function showErrorState() {
    $('.status-breakdown-card').removeClass('loading');
    $('#total-tasks-summary').removeClass('loading').text('–û—à–∏–±–∫–∞');
    $('#total-tasks, #open-tasks, #closed-db-tasks, #paused-tasks').text('–û—à–∏–±–∫–∞');
}

function updateStatusBreakdownCards(stats) {
    console.log('[TasksPaginated] –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–µ–∫ —Ä–∞–∑–±–∏–≤–∫–∏ –ø–æ —Å—Ç–∞—Ç—É—Å–∞–º...');

    // –£–±–∏—Ä–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏
    $('.status-breakdown-card').removeClass('loading');
    $('#total-tasks-summary').removeClass('loading');

    // –û—Å–Ω–æ–≤–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è
    const totalTasks = stats.total_tasks || stats.total || 0;
    const newTasks = stats.new_tasks || stats.new || 0;
    const inProgressTasks = stats.in_progress_tasks || stats.in_progress || 0;
    const closedTasks = stats.closed_tasks || stats.closed || 0;

    // –ò–°–ü–†–ê–í–õ–ï–ù–ù–ê–Ø –ª–æ–≥–∏–∫–∞ –≤—ã—á–∏—Å–ª–µ–Ω–∏—è –º–µ—Ç—Ä–∏–∫
    const actuallyClosedTasks = stats.statistics?.additional_stats?.actually_closed_tasks || 0; // –†–µ–∞–ª—å–Ω–æ –∑–∞–∫—Ä—ã—Ç—ã–µ –≤ –ë–î

    // –ò–°–ü–†–ê–í–õ–ï–ù–û: –ò—Å–ø–æ–ª—å–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ –ø—Ä—è–º–æ –∏–∑ API (NEW_TASKS = –û–¢–ö–†–´–¢–´–ï)
    const openTasks = newTasks; // API —É–∂–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –∫–ª–∞—Å—Å–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–ª NEW –∑–∞–¥–∞—á–∏

    console.log('[TasksPaginated] –û—Ç–∫—Ä—ã—Ç—ã–µ –∑–∞–¥–∞—á–∏ –∏–∑ API:', {
        newTasks: newTasks,
        openTasks: openTasks
    });

    // –ò–°–ü–†–ê–í–õ–ï–ù–û: –ò—Å–ø–æ–ª—å–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ –ø—Ä—è–º–æ –∏–∑ API (IN_PROGRESS_TASKS = –ü–†–ò–û–°–¢–ê–ù–û–í–õ–ï–ù–ù–´–ï)
    const pausedTasks = inProgressTasks; // API —É–∂–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –∫–ª–∞—Å—Å–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–ª IN_PROGRESS –∑–∞–¥–∞—á–∏

    console.log('[TasksPaginated] –ü—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏ –∏–∑ API:', {
        inProgressTasks: inProgressTasks,
        pausedTasks: pausedTasks
    });

    // –û–±–Ω–æ–≤–ª—è–µ–º –∑–Ω–∞—á–µ–Ω–∏—è —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π
    animateAndUpdateValue('#total-tasks-summary', totalTasks);
    animateAndUpdateValue('#total-tasks', totalTasks);
    animateAndUpdateValue('#open-tasks', openTasks);
    animateAndUpdateValue('#closed-db-tasks', actuallyClosedTasks);
    animateAndUpdateValue('#paused-tasks', pausedTasks);

    // –û–±–Ω–æ–≤–ª—è–µ–º –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—é –≤ –∫–∞—Ä—Ç–æ—á–∫–∞—Ö
    updateCardBreakdowns(stats.statistics?.debug_status_counts || {}, {
        totalTasks,
        openTasks,
        actuallyClosedTasks,
        pausedTasks
    });

    console.log('[TasksPaginated] –†–∞–∑–±–∏–≤–∫–∞ –ø–æ —Å—Ç–∞—Ç—É—Å–∞–º –æ–±–Ω–æ–≤–ª–µ–Ω–∞:', {
        total: totalTasks,
        open: openTasks,
        closed_db: actuallyClosedTasks,
        paused: pausedTasks,
        in_progress: inProgressTasks
    });
}

function animateAndUpdateValue(selector, value) {
    const element = $(selector);
    element.addClass('animate-count').text(value);
    setTimeout(() => element.removeClass('animate-count'), 600);
}

    function updateCardBreakdowns(statusCounts, cardValues) {
    console.log('[TasksPaginated] –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏–∏ –≤ –∫–∞—Ä—Ç–æ—á–∫–∞—Ö...');

    // –û–±–Ω–æ–≤–ª—è–µ–º –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—é –¥–ª—è "–û—Ç–∫—Ä—ã—Ç—ã–µ –∑–∞–¥–∞—á–∏" - –¥–æ–±–∞–≤–ª–µ–Ω—ã —Ä—É—Å—Å–∫–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è
    updateCardBreakdown('#open-breakdown', statusCounts, [
        'New', 'Open', '–ù–æ–≤–∞—è', '–ù–æ–≤—ã–π', '–û—Ç–∫—Ä—ã—Ç–∞', '–û—Ç–∫—Ä—ã—Ç', '–û—Ç–∫—Ä—ã—Ç–∞—è'
    ]);

    // –û–±–Ω–æ–≤–ª—è–µ–º –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—é –¥–ª—è "–ó–∞–∫—Ä—ã—Ç—ã–µ –≤ –ë–î" - –¥–æ–±–∞–≤–ª–µ–Ω—ã —Ä—É—Å—Å–∫–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è
    updateCardBreakdown('#closed-breakdown', statusCounts, [
        'Closed', 'Rejected', 'Redirected', '–ó–∞–∫—Ä—ã—Ç–∞', '–ó–∞–∫—Ä—ã—Ç', '–ó–∞–∫—Ä—ã—Ç–∞—è',
        '–û—Ç–∫–ª–æ–Ω–µ–Ω–∞', '–û—Ç–∫–ª–æ–Ω–µ–Ω', '–û—Ç–∫–ª–æ–Ω—ë–Ω–Ω–∞—è', '–ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∞', '–ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω'
    ]);

    // –û–±–Ω–æ–≤–ª—è–µ–º –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—é –¥–ª—è "–ü—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ" - –¥–æ–±–∞–≤–ª–µ–Ω—ã —Ä—É—Å—Å–∫–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è
    updateCardBreakdown('#paused-breakdown', statusCounts, [
        'Paused', 'Frozen', 'In Progress', 'Executed', 'On testing',
        'The request specification', 'On the coordination', 'Tested',
        '–ü—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞', '–ü—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω', '–ó–∞–º–æ—Ä–æ–∂–µ–Ω–∞', '–ó–∞–º–æ—Ä–æ–∂–µ–Ω',
        '–í —Ä–∞–±–æ—Ç–µ', '–í –ø—Ä–æ—Ü–µ—Å—Å–µ', '–í—ã–ø–æ–ª–Ω–µ–Ω–∞', '–í—ã–ø–æ–ª–Ω–µ–Ω', '–ù–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏',
        '–ù–∞ —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏–∏', '–°–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏–µ', '–ó–∞–ø—Ä–æ—à–µ–Ω–æ —É—Ç–æ—á–Ω–µ–Ω–∏–µ', '–£—Ç–æ—á–Ω–µ–Ω–∏–µ',
        '–ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∞', '–ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω'
    ]);

    // –û–±–Ω–æ–≤–ª—è–µ–º –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—é –¥–ª—è "–í—Å–µ–≥–æ –∑–∞–¥–∞—á" - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –í–°–ï —Å—Ç–∞—Ç—É—Å—ã
    updateCardBreakdownAll('#total-breakdown', statusCounts);

    // –í–ê–ñ–ù–û: –ü–µ—Ä–µ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –ø–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ
    setTimeout(() => {
        $('.card-breakdown').addClass('collapsed').removeClass('expanded');
        $('.card-toggle-btn').removeClass('expanded');
        console.log('[TasksPaginated] –°–æ—Å—Ç–æ—è–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –ø–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –ø–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–∞—Ä—Ç–æ—á–µ–∫');
    }, 100);
}

function updateCardBreakdown(containerId, statusCounts, relevantStatuses) {
    const container = $(containerId);
    if (container.length === 0) {
        console.warn(`[TasksPaginated] –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä ${containerId} –Ω–µ –Ω–∞–π–¥–µ–Ω`);
        return;
    }

    container.empty();

    // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤—Å–µ —Å—Ç–∞—Ç—É—Å—ã –≤ –º–∞—Å—Å–∏–≤ –¥–ª—è –±–æ–ª–µ–µ –≥–∏–±–∫–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏
    const allStatusEntries = Object.entries(statusCounts)
        .map(([name, count]) => ({ name, count }))
        .filter(item => item.count > 0);

    // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã–º —Å—Ç–∞—Ç—É—Å–∞–º —Å —É—á–µ—Ç–æ–º –∏ —Ä—É—Å—Å–∫–∏—Ö, –∏ –∞–Ω–≥–ª–∏–π—Å–∫–∏—Ö –Ω–∞–∑–≤–∞–Ω–∏–π
    const filteredStatuses = allStatusEntries.filter(item => {
        const statusName = item.name.toLowerCase();
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ª–∏ —Å—Ç–∞—Ç—É—Å –ª—é–±–æ–º—É –∏–∑ —Å–ø–∏—Å–∫–∞ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã—Ö
        return relevantStatuses.some(relevantStatus => {
            const relevantLower = relevantStatus.toLowerCase();
            // –ü—Ä—è–º–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ –∏–ª–∏ —á–∞—Å—Ç–∏—á–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —è–∑—ã–∫–æ–≤—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤
            return statusName === relevantLower ||
                   statusName.includes(relevantLower) ||
                   relevantLower.includes(statusName);
        });
    });

    if (filteredStatuses.length === 0) {
        container.html('<div class="breakdown-item"><span class="breakdown-status-name">–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö</span></div>');
        return;
    }

    // –°–æ—Ä—Ç–∏—Ä—É–µ–º —Å—Ç–∞—Ç—É—Å—ã –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –∑–∞–¥–∞—á (–ø–æ —É–±—ã–≤–∞–Ω–∏—é)
    filteredStatuses.sort((a, b) => b.count - a.count);

    // –°–æ–∑–¥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏–∏
    filteredStatuses.forEach(item => {
        const breakdownItem = $(`
            <div class="breakdown-item">
                <span class="breakdown-status-name">${item.name}</span>
                <span class="breakdown-status-count">${item.count}</span>
            </div>
        `);
        container.append(breakdownItem);
    });

    console.log(`[TasksPaginated] –î–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∞ –¥–ª—è ${containerId}:`, filteredStatuses);
}

function updateCardBreakdownAll(containerId, statusCounts) {
    const container = $(containerId);
    if (container.length === 0) {
        console.warn(`[TasksPaginated] –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä ${containerId} –Ω–µ –Ω–∞–π–¥–µ–Ω`);
        return;
    }

    container.empty();

    if (!statusCounts || Object.keys(statusCounts).length === 0) {
        container.html('<div class="breakdown-item"><span class="breakdown-status-name">–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö</span></div>');
        return;
    }

    // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤—Å–µ —Å—Ç–∞—Ç—É—Å—ã –≤ –º–∞—Å—Å–∏–≤ –∏ —Å–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ —É–±—ã–≤–∞–Ω–∏—é –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞
    const allStatuses = Object.entries(statusCounts)
        .map(([name, count]) => ({ name, count }))
        .filter(item => item.count > 0)
        .sort((a, b) => b.count - a.count);

    if (allStatuses.length === 0) {
        container.html('<div class="breakdown-item"><span class="breakdown-status-name">–ù–µ—Ç –∑–∞–¥–∞—á</span></div>');
        return;
    }

    // –°–æ–∑–¥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏–∏ –¥–ª—è –≤—Å–µ—Ö —Å—Ç–∞—Ç—É—Å–æ–≤
    allStatuses.forEach(item => {
        const breakdownItem = $(`
            <div class="breakdown-item">
                <span class="breakdown-status-name">${item.name}</span>
                <span class="breakdown-status-count">${item.count}</span>
            </div>
        `);
        container.append(breakdownItem);
    });

    console.log(`[TasksPaginated] –ü–æ–ª–Ω–∞—è –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—è –¥–ª—è ${containerId}:`, allStatuses);
}

function updateDetailedStatusBreakdown(stats) {
    if (!stats.statistics?.debug_status_counts) {
        console.log('[TasksPaginated] –î–µ—Ç–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Å—Ç–∞—Ç—É—Å–æ–≤ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã');
        window.detailedStatusData = {};
        return;
    }

    const statusCounts = stats.statistics.debug_status_counts;
    console.log('[TasksPaginated] –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–µ—Ç–∞–ª—å–Ω–æ–π —Ä–∞–∑–±–∏–≤–∫–∏:', statusCounts);

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ statusCounts —è–≤–ª—è–µ—Ç—Å—è –æ–±—ä–µ–∫—Ç–æ–º –∏ —Å–æ–¥–µ—Ä–∂–∏—Ç –¥–∞–Ω–Ω—ã–µ
    if (typeof statusCounts !== 'object' || Object.keys(statusCounts).length === 0) {
        console.log('[TasksPaginated] –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–π —Ä–∞–∑–±–∏–≤–∫–∏');
        window.detailedStatusData = {};
        return;
    }

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–π —Ä–∞–∑–±–∏–≤–∫–∏, —á—Ç–æ–±—ã CardBreakdown –º–æ–≥ –∏—Ö –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å
    window.detailedStatusData = statusCounts;
    console.log('[TasksPaginated] –°–æ—Ö—Ä–∞–Ω–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–π —Ä–∞–∑–±–∏–≤–∫–∏:', window.detailedStatusData);

    // –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É –¥–µ—Ç–∞–ª—å–Ω–æ–π —Ä–∞–∑–±–∏–≤–∫–∏
    const expandBreakdownBtn = $('#expandBreakdownBtn');
    if (expandBreakdownBtn.length > 0) {
        expandBreakdownBtn.removeClass('disabled').prop('disabled', false);
        console.log('[TasksPaginated] –ö–Ω–æ–ø–∫–∞ –¥–µ—Ç–∞–ª—å–Ω–æ–π —Ä–∞–∑–±–∏–≤–∫–∏ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞');
    }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–Ω–æ–ø–∫–∏ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è –¥–µ—Ç–∞–ª—å–Ω–æ–π —Ä–∞–∑–±–∏–≤–∫–∏
function initializeDetailedBreakdown() {
    console.log('[TasksPaginated] –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–Ω–æ–ø–∫–∏ –¥–µ—Ç–∞–ª—å–Ω–æ–π —Ä–∞–∑–±–∏–≤–∫–∏...');

    // –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è
    $(document).off('click', '#expandBreakdownBtn');

    $(document).on('click', '#expandBreakdownBtn', function() {
        console.log('[TasksPaginated] –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ –¥–µ—Ç–∞–ª—å–Ω–æ–π —Ä–∞–∑–±–∏–≤–∫–∏');

        const button = $(this);
        const content = $('#detailedBreakdownContent');
        const isExpanded = content.hasClass('expanded');

        console.log('[TasksPaginated] –¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ expanded:', isExpanded);

        if (isExpanded) {
            // –°–≤–æ—Ä–∞—á–∏–≤–∞–µ–º
            console.log('[TasksPaginated] –°–≤–æ—Ä–∞—á–∏–≤–∞–µ–º –¥–µ—Ç–∞–ª—å–Ω—É—é —Ä–∞–∑–±–∏–≤–∫—É');
            content.removeClass('expanded');
            button.removeClass('expanded');
            button.find('span').text('–ü–æ–∫–∞–∑–∞—Ç—å –¥–µ—Ç–∞–ª–∏');
        } else {
            // –†–∞–∑–≤–æ—Ä–∞—á–∏–≤–∞–µ–º
            console.log('[TasksPaginated] –†–∞–∑–≤–æ—Ä–∞—á–∏–≤–∞–µ–º –¥–µ—Ç–∞–ª—å–Ω—É—é —Ä–∞–∑–±–∏–≤–∫—É');

            // –í—Å–µ–≥–¥–∞ —Ä–µ–Ω–¥–µ—Ä–∏–º –¥–∞–Ω–Ω—ã–µ –∑–∞–Ω–æ–≤–æ
            if (window.detailedStatusData) {
                console.log('[TasksPaginated] –†–µ–Ω–¥–µ—Ä–∏–º –¥–µ—Ç–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:', window.detailedStatusData);
                renderDetailedStatusBreakdown(window.detailedStatusData);
            } else {
                console.warn('[TasksPaginated] –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–π —Ä–∞–∑–±–∏–≤–∫–∏!');
                $('#statusItemsGrid').html('<div class="no-data">–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è</div>');
            }

            content.addClass('expanded');
            button.addClass('expanded');
            button.find('span').text('–°–∫—Ä—ã—Ç—å –¥–µ—Ç–∞–ª–∏');
        }
    });

    // –¢–∞–∫–∂–µ –Ω—É–∂–Ω–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å, –µ—Å—Ç—å –ª–∏ —É –Ω–∞—Å –¥–∞–Ω–Ω—ã–µ, –∏ –µ—Å–ª–∏ –¥–∞, –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –∫–Ω–æ–ø–∫—É
    if (window.detailedStatusData) {
        const expandBtn = $('#expandBreakdownBtn');
        if (expandBtn.length > 0) {
            expandBtn.prop('disabled', false).removeClass('disabled');
            console.log('[TasksPaginated] –ö–Ω–æ–ø–∫–∞ –¥–µ—Ç–∞–ª—å–Ω–æ–π —Ä–∞–∑–±–∏–≤–∫–∏ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏');
        }
    }

    console.log('[TasksPaginated] –ö–Ω–æ–ø–∫–∞ –¥–µ—Ç–∞–ª—å–Ω–æ–π —Ä–∞–∑–±–∏–≤–∫–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞');
}

function renderDetailedStatusBreakdown(statusCounts) {
    console.log('[TasksPaginated] –ù–∞—á–∏–Ω–∞–µ–º —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥ –¥–µ—Ç–∞–ª—å–Ω–æ–π —Ä–∞–∑–±–∏–≤–∫–∏ —Å –¥–∞–Ω–Ω—ã–º–∏:', statusCounts);

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –º–æ–¥—É–ª—è CardBreakdown
    window.detailedStatusData = statusCounts;

    // –î–µ–ª–µ–≥–∏—Ä—É–µ–º –æ—Ç—Ä–∏—Å–æ–≤–∫—É –º–æ–¥—É–ª—é CardBreakdown –µ—Å–ª–∏ –æ–Ω –¥–æ—Å—Ç—É–ø–µ–Ω
    if (window.CardBreakdown && typeof window.CardBreakdown.renderDetailedBreakdown === 'function') {
        console.log('[TasksPaginated] –î–µ–ª–µ–≥–∏—Ä—É–µ–º –æ—Ç—Ä–∏—Å–æ–≤–∫—É –º–æ–¥—É–ª—é CardBreakdown');
        window.CardBreakdown.renderDetailedBreakdown(statusCounts);
        return;
    }

    // –ó–∞–ø–∞—Å–Ω–æ–π –≤–∞—Ä–∏–∞–Ω—Ç, –µ—Å–ª–∏ –º–æ–¥—É–ª—å CardBreakdown –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω
    const grid = $('#statusItemsGrid');
    if (grid.length === 0) {
        console.error('[TasksPaginated] –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä #statusItemsGrid –Ω–µ –Ω–∞–π–¥–µ–Ω!');
        return;
    }

    console.log('[TasksPaginated] –û—á–∏—â–∞–µ–º grid –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä');
    grid.empty();

    if (!statusCounts || Object.keys(statusCounts).length === 0) {
        console.warn('[TasksPaginated] –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞');
        grid.html('<div class="no-data">–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è</div>');
        return;
    }

    let itemsAdded = 0;
    // –°–æ—Ä—Ç–∏—Ä—É–µ–º —Å—Ç–∞—Ç—É—Å—ã –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –∑–∞–¥–∞—á (–ø–æ —É–±—ã–≤–∞–Ω–∏—é)
    Object.entries(statusCounts)
        .sort(([, countA], [, countB]) => countB - countA)
        .forEach(([statusName, count]) => {
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ —Ç–µ —Å—Ç–∞—Ç—É—Å—ã, —É –∫–æ—Ç–æ—Ä—ã—Ö –µ—Å—Ç—å —Ö–æ—Ç—è –±—ã –æ–¥–Ω–∞ –∑–∞–¥–∞—á–∞
            if (count > 0) {
                const statusType = getStatusType(statusName);
                const statusItem = $(`
                    <div class="status-item ${statusType}">
                        <span class="status-name">${statusName}</span>
                        <span class="status-count animate-count">${count}</span>
                    </div>
                `);
                grid.append(statusItem);
                itemsAdded++;
                console.log(`[TasksPaginated] –î–æ–±–∞–≤–ª–µ–Ω —ç–ª–µ–º–µ–Ω—Ç: ${statusName} = ${count} (—Ç–∏–ø: ${statusType})`);
            }
        });

    if (itemsAdded === 0) {
        grid.html('<div class="no-data">–£ –≤–∞—Å –Ω–µ—Ç –∑–∞–¥–∞—á —Å–æ —Å—Ç–∞—Ç—É—Å–∞–º–∏</div>');
    } else {
        console.log(`[TasksPaginated] –î–µ—Ç–∞–ª—å–Ω–∞—è —Ä–∞–∑–±–∏–≤–∫–∞ –æ—Ç—Ä–µ–Ω–¥–µ—Ä–µ–Ω–∞: ${itemsAdded} —ç–ª–µ–º–µ–Ω—Ç–æ–≤`);
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ç–∏–ø–∞ —Å—Ç–∞—Ç—É—Å–∞ (–∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ renderDetailedStatusBreakdown)
function getStatusType(statusName) {
    const status = statusName.toLowerCase();

    // –†–ï–ê–õ–¨–ù–û –ó–ê–ö–†–´–¢–´–ï —Å—Ç–∞—Ç—É—Å—ã (is_closed=1 –≤ –ë–î)
    if (status.includes('–∑–∞–∫—Ä—ã—Ç–∞') || status.includes('–∑–∞–∫—Ä—ã—Ç') || status.includes('closed') ||
        status.includes('–æ—Ç–∫–ª–æ–Ω–µ–Ω–∞') || status.includes('–æ—Ç–∫–ª–æ–Ω–µ–Ω') || status.includes('rejected') ||
        status.includes('–ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∞') || status.includes('redirected')) {
        return 'status-closed';
    }
    // –ù–û–í–´–ï –∏ –û–¢–ö–†–´–¢–´–ï —Å—Ç–∞—Ç—É—Å—ã
    if (status.includes('–Ω–æ–≤–∞—è') || status.includes('–Ω–æ–≤—ã–π') || status.includes('new') ||
             status.includes('–æ—Ç–∫—Ä—ã—Ç–∞') || status.includes('–æ—Ç–∫—Ä—ã—Ç') || status.includes('open')) {
        return 'status-new';
    }
    // –í –†–ê–ë–û–¢–ï –∏ –ü–†–û–¶–ï–°–°–ï (–≤–∫–ª—é—á–∞—è —Ç–µ —á—Ç–æ –∫–∞–∂—É—Ç—Å—è "–∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–º–∏", –Ω–æ is_closed=0)
    else if (status.includes('–≤ —Ä–∞–±–æ—Ç–µ') || status.includes('in progress') ||
             status.includes('—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω') || status.includes('tested') ||
             status.includes('testing') || status.includes('on testing') ||
             status.includes('—Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω') || status.includes('coordination') ||
             status.includes('on the coordination') ||
             status.includes('—É—Ç–æ—á–Ω–µ–Ω–∏–µ') || status.includes('specification') ||
             status.includes('request specification') ||
             status.includes('–≤—ã–ø–æ–ª–Ω–µ–Ω–∞') || status.includes('–≤—ã–ø–æ–ª–Ω–µ–Ω') || status.includes('executed') ||
             status.includes('–ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∞') || status.includes('–ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω')) {
        return 'status-in-progress';
    }
    // –ü–†–ò–û–°–¢–ê–ù–û–í–õ–ï–ù–ù–´–ï –ò –ó–ê–ú–û–†–û–ñ–ï–ù–ù–´–ï
    else if (status.includes('–ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞') || status.includes('–ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω') || status.includes('paused') ||
             status.includes('–∑–∞–º–æ—Ä–æ–∂–µ–Ω') || status.includes('–∑–∞–º–æ—Ä–æ–∂–µ–Ω–∞') || status.includes('frozen')) {
        return 'status-paused';
    }

    return 'status-default'; // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–∞–±–ª–∏—Ü–µ
$('#tasksTable').on('draw.dt', function() {
    console.log('[TasksPaginated] üìä DataTable draw event triggered');
    updateInfo();

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã
    checkForActiveFilters();

    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫ –∑–∞–¥–∞—á
    console.log('[TasksPaginated] üîÑ –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä —á–µ—Ä–µ–∑ DataTable draw:', window.tasksDataTable);

    try {
        // –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ –∫ TasksCounterManager
        if (window.TasksCounterManager && typeof window.TasksCounterManager.updateCount === 'function') {
            window.TasksCounterManager.updateCount(window.tasksDataTable.rows({search:'applied'}).count());
        } else {
            console.log('[TasksPaginated] ‚ö†Ô∏è TasksCounterManager –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –º–µ—Ç–æ–¥ updateCount –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω');
        }
    } catch (e) {
        console.error('[TasksPaginated] ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å—á–µ—Ç—á–∏–∫–∞:', e);
    }
});

// –§—É–Ω–∫—Ü–∏—è –ø–æ–ª–Ω–æ–≥–æ —Å–±—Ä–æ—Å–∞ –≤—Å–µ—Ö —Ñ–∏–ª—å—Ç—Ä–æ–≤ –∫ –¥–µ—Ñ–æ–ª—Ç–Ω–æ–º—É —Å–æ—Å—Ç–æ—è–Ω–∏—é
function resetAllFilters() {
    console.log('[TasksPaginated] üîÑ –ü–æ–ª–Ω—ã–π —Å–±—Ä–æ—Å –≤—Å–µ—Ö —Ñ–∏–ª—å—Ç—Ä–æ–≤ –∫ –¥–µ—Ñ–æ–ª—Ç–Ω–æ–º—É —Å–æ—Å—Ç–æ—è–Ω–∏—é');

    // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—Å–µ —Å–µ–ª–µ–∫—Ç—ã —Ñ–∏–ª—å—Ç—Ä–æ–≤
    $('#status-filter').val('').trigger('change');
    $('#project-filter').val('').trigger('change');
    $('#priority-filter').val('').trigger('change');

    // –û—á–∏—â–∞–µ–º TreeView –µ—Å–ª–∏ –æ–Ω –∞–∫—Ç–∏–≤–µ–Ω
    if (window.projectTreeView) {
        try {
            window.projectTreeView.clearAllSelections();
            console.log('[TasksPaginated] TreeView –æ—á–∏—â–µ–Ω');
        } catch (error) {
            console.warn('[TasksPaginated] –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ TreeView:', error);
        }
    }

    // –û—á–∏—â–∞–µ–º –ø–æ–ª–µ –ø–æ–∏—Å–∫–∞ DataTables
    const searchInput = $('#tasksTable_filter input[type="search"]');
    if (searchInput.length > 0) {
        searchInput.val('').trigger('input');
        console.log('[TasksPaginated] –ü–æ–ª–µ –ø–æ–∏—Å–∫–∞ –æ—á–∏—â–µ–Ω–æ');
    }

    // –£–¥–∞–ª—è–µ–º –≤—Å–µ –∫–∞—Å—Ç–æ–º–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã –ø–æ–∏—Å–∫–∞
    while ($.fn.dataTable.ext.search.length > 0) {
        $.fn.dataTable.ext.search.pop();
    }

    // –û–±–Ω–æ–≤–ª—è–µ–º –≤–∏–¥–∏–º–æ—Å—Ç—å –∫–Ω–æ–ø–æ–∫ –æ—á–∏—Å—Ç–∫–∏
    updateAllClearButtons();

    // –°–∫—Ä—ã–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫ —Ñ–∏–ª—å—Ç—Ä–æ–≤ –µ—Å–ª–∏ –æ–Ω –±—ã–ª –ø–æ–∫–∞–∑–∞–Ω
    if (window.TasksCounterManager && typeof window.TasksCounterManager.hide === 'function') {
        window.TasksCounterManager.hide();
    }

    // –ü–µ—Ä–µ—Ä–∏—Å–æ–≤—ã–≤–∞–µ–º —Ç–∞–±–ª–∏—Ü—É –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π
    if (window.tasksDataTable) {
        window.tasksDataTable.draw();
    }

    console.log('[TasksPaginated] ‚úÖ –í—Å–µ —Ñ–∏–ª—å—Ç—Ä—ã —Å–±—Ä–æ—à–µ–Ω—ã –∫ –¥–µ—Ñ–æ–ª—Ç–Ω–æ–º—É —Å–æ—Å—Ç–æ—è–Ω–∏—é');
}

// –î–µ–ª–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –≥–ª–æ–±–∞–ª—å–Ω–æ –¥–æ—Å—Ç—É–ø–Ω–æ–π
window.resetAllFilters = resetAllFilters;

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ DOM
$(function() {
    if (window.tasksDataTable) {
        console.log('[TasksPaginated] DataTable —É–∂–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞');
        return;
    }
    initializePaginatedTasks();

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –¥–µ—Ç–∞–ª—å–Ω—É—é —Ä–∞–∑–±–∏–≤–∫—É
    initializeDetailedBreakdown();

    // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –ø—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–±–æ—Ç—É –∫–Ω–æ–ø–æ–∫ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –∫–∞—Ä—Ç–æ—á–µ–∫
    setTimeout(() => {
        console.log('[TasksPaginated] üõ†Ô∏è –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –ø–æ–≤—Ç–æ—Ä–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–Ω–æ–ø–æ–∫ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –∫–∞—Ä—Ç–æ—á–µ–∫...');

        // –ü–æ–≤—Ç–æ—Ä–Ω–æ –ø—Ä–∏–≤—è–∑—ã–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è
        $('.card-toggle-btn').off('click').on('click', function(e) {
            e.preventDefault();
            e.stopPropagation();

            const $button = $(this);
            const targetId = $button.data('target');
            const $breakdown = $('#' + targetId);

            console.log('[TasksPaginated] üîÑ –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è. Target:', targetId, 'Found element:', $breakdown.length);

            if (!$breakdown.length) {
                console.warn('[TasksPaginated] ‚ö†Ô∏è –≠–ª–µ–º–µ–Ω—Ç –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω:', targetId);
                return;
            }

            // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
            if ($breakdown.hasClass('collapsed')) {
                // –†–∞–∑–≤–æ—Ä–∞—á–∏–≤–∞–µ–º
                $breakdown.removeClass('collapsed').addClass('expanded');
                $button.addClass('expanded');
                console.log('[TasksPaginated] üìä –î–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—è —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç–∞:', targetId);
            } else {
                // –°–≤–æ—Ä–∞—á–∏–≤–∞–µ–º
                $breakdown.removeClass('expanded').addClass('collapsed');
                $button.removeClass('expanded');
                console.log('[TasksPaginated] üìä –î–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—è —Å–≤–µ—Ä–Ω—É—Ç–∞:', targetId);
            }

            // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≥–ª–æ–±–∞–ª—å–Ω–æ–π –∫–Ω–æ–ø–∫–∏
            updateGlobalToggleButtonState();
        });

        console.log('[TasksPaginated] ‚úÖ –ö–Ω–æ–ø–∫–∏ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –∫–∞—Ä—Ç–æ—á–µ–∫ –ø–µ—Ä–µ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã');
    }, 1000);
});

// –î–û–ë–ê–í–õ–ï–ù–û: –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–Ω–æ–ø–æ–∫ –æ—á–∏—Å—Ç–∫–∏ –ø—Ä–∏ –ø–æ–ª–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
$(window).on('load', function() {
    setTimeout(() => {
        console.log('[TasksPaginated] üîß –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–Ω–æ–ø–æ–∫ –æ—á–∏—Å—Ç–∫–∏ –ø—Ä–∏ –ø–æ–ª–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã');
        updateAllClearButtons();

        // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞
        $('#status-filter, #project-filter, #priority-filter').each(function() {
            const filterId = $(this).attr('id');
            const value = $(this).val();
            const clearBtnId = '#clear-' + filterId.replace('-filter', '') + '-filter';
            const clearBtn = $(clearBtnId);

            console.log(`[TasksPaginated] üîç –§–∏–Ω–∞–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ ${filterId}:`, {
                value: value,
                hasShow: clearBtn.hasClass('show'),
                isVisible: clearBtn.is(':visible'),
                display: clearBtn.css('display')
            });
        });
    }, 500);
});

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
$(function() {
    console.log('[TasksCounter] üìã –°—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞, –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä');

    setTimeout(() => {
        if (window.TasksCounterManager && window.TasksCounterManager.initialize) {
            window.TasksCounterManager.initialize();
        } else {
            console.warn('[TasksCounter] ‚ö†Ô∏è TasksCounterManager –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –º–µ—Ç–æ–¥ initialize –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω');
        }
    }, 200);
});

// –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–Ω–æ–ø–æ–∫ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –∫–∞—Ä—Ç–æ—á–µ–∫ –ø—Ä–∏ –ø–æ–ª–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
$(function() {
    console.log('[TasksPaginated] üõ†Ô∏è –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–Ω–æ–ø–æ–∫ –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏–∏ –ø—Ä–∏ –ø–æ–ª–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–µ');

    // –ü—Ä—è–º–∞—è –ø—Ä–∏–≤—è–∑–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∫ –∫–Ω–æ–ø–∫–∞–º –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –∫–∞—Ä—Ç–æ—á–µ–∫
    $('.card-toggle-btn').each(function() {
        const $btn = $(this);
        $btn.off('click').on('click', function(e) {
            e.preventDefault();
            e.stopPropagation();

            const targetId = $(this).data('target');
            const $breakdown = $('#' + targetId);

            console.log('[TasksPaginated] üñ±Ô∏è –ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ –∫–∞—Ä—Ç–æ—á–∫–∏:', targetId);

            if ($breakdown.hasClass('collapsed')) {
                // –†–∞–∑–≤–æ—Ä–∞—á–∏–≤–∞–µ–º
                $breakdown.removeClass('collapsed').addClass('expanded');
                $(this).addClass('expanded');
                console.log('[TasksPaginated] üìä –î–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—è —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç–∞:', targetId);
            } else {
                // –°–≤–æ—Ä–∞—á–∏–≤–∞–µ–º
                $breakdown.removeClass('expanded').addClass('collapsed');
                $(this).removeClass('expanded');
                console.log('[TasksPaginated] üìä –î–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—è —Å–≤–µ—Ä–Ω—É—Ç–∞:', targetId);
            }
        });
    });
});

console.log('[TasksPaginated] üéâ –§–∞–π–ª tasks_paginated.js –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–≥—Ä—É–∂–µ–Ω —Å –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–æ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∑–∞–¥–∞—á (v2024-CLEAR-BUTTONS-FIXED-v6)');

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö —Ç–∞–±–ª–∏—Ü—ã (–¥–æ—Å—Ç—É–ø–Ω–∞ –≥–ª–æ–±–∞–ª—å–Ω–æ)
window.forceReloadTasksTable = function() {
    console.log('[TasksPaginated] üîÑ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —Ç–∞–±–ª–∏—Ü—ã');
    if (window.tasksDataTable) {
        showTableLoading();
        window.tasksDataTable.ajax.reload();
        return "‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –∑–∞–ø—É—â–µ–Ω–æ";
    } else {
        console.error('[TasksPaginated] ‚ùå tasksDataTable –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞');
        return "‚ùå –û—à–∏–±–∫–∞: —Ç–∞–±–ª–∏—Ü–∞ –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞";
    }
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏ –ø–µ—Ä–≤–æ–π –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
window.forceInitialDataLoad = function() {
    console.log('[TasksPaginated] üîÑ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –Ω–∞—á–∞–ª—å–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö');
    if (window.tasksDataTable) {
        window.isFirstDataLoad = true; // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥ –ø–µ—Ä–≤–æ–π –∑–∞–≥—Ä—É–∑–∫–∏
        showTableLoading();
        window.tasksDataTable.ajax.reload();
        return "‚úÖ –ù–∞—á–∞–ª—å–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∑–∞–ø—É—â–µ–Ω–∞";
    } else {
        console.error('[TasksPaginated] ‚ùå tasksDataTable –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞');
        return "‚ùå –û—à–∏–±–∫–∞: —Ç–∞–±–ª–∏—Ü–∞ –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞";
    }
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —ç–∫—Å—Ç—Ä–µ–Ω–Ω–æ–≥–æ —Å–±—Ä–æ—Å–∞ —Ñ–∏–ª—å—Ç—Ä–æ–≤ –∏ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏ —Ç–∞–±–ª–∏—Ü—ã (–¥–æ—Å—Ç—É–ø–Ω–∞ –≥–ª–æ–±–∞–ª—å–Ω–æ)
window.emergencyResetAndReload = function() {
    console.log('[TasksPaginated] üö® –≠–ö–°–¢–†–ï–ù–ù–´–ô –°–ë–†–û–° –§–ò–õ–¨–¢–†–û–í –ò –ü–ï–†–ï–ó–ê–ì–†–£–ó–ö–ê');

    try {
        // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—Å–µ —Ñ–∏–ª—å—Ç—Ä—ã
        $('#status-filter, #project-filter, #priority-filter').val('').trigger('change');

        // –û—á–∏—â–∞–µ–º –ø–æ–ª–µ –ø–æ–∏—Å–∫–∞
        $('.dataTables_filter input').val('').trigger('input');

        // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Ç–∞–±–ª–∏—Ü—É
        if (window.tasksDataTable) {
            showTableLoading();
            window.tasksDataTable.search('').draw();
            window.tasksDataTable.ajax.reload();
        } else {
            // –ï—Å–ª–∏ —Ç–∞–±–ª–∏—Ü–∞ –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞, –ø—Ä–æ–±—É–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –µ—ë
            initializeDataTable();
        }

        return "‚úÖ –≠–∫—Å—Ç—Ä–µ–Ω–Ω—ã–π —Å–±—Ä–æ—Å –≤—ã–ø–æ–ª–Ω–µ–Ω";
    } catch (error) {
        console.error('[TasksPaginated] ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —ç–∫—Å—Ç—Ä–µ–Ω–Ω–æ–º —Å–±—Ä–æ—Å–µ:', error);
        return "‚ùå –û—à–∏–±–∫–∞: " + error.message;
    }
};

// ===== –ú–û–î–£–õ–¨ –ò–ù–î–ò–ö–ê–¢–û–†–ê –ö–û–õ–ò–ß–ï–°–¢–í–ê –ó–ê–î–ê–ß =====

// –ú–µ–Ω–µ–¥–∂–µ—Ä –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞—á
window.TasksCounterManager = {
    // –≠–ª–µ–º–µ–Ω—Ç—ã –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
    indicator: null,
    counterNumber: null,
    counterPrefix: null,
    counterSuffix: null,
    counterIcon: null,
    counterStatus: null,
    progressBar: null,
    closeBtn: null,

    // –°–æ—Å—Ç–æ—è–Ω–∏–µ
    isVisible: false,
    isLoading: false,
    currentCount: 0,
    totalCount: 0,
    isFiltered: false,
    currentPaginationType: 'pages',

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
    init: function() {
        console.log('[TasksCounter] üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ –∑–∞–¥–∞—á');

        if (!this.cacheElements()) {
            console.error('[TasksCounter] ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å - —ç–ª–µ–º–µ–Ω—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
            return false;
        }

        this.bindEvents();
        this.setupCloseButton();
        this.hide(); // –ü–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–æ —Å–∫—Ä—ã—Ç

        console.log('[TasksCounter] ‚úÖ –ú–µ–Ω–µ–¥–∂–µ—Ä –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
        return true;
    },

    // –ö–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ DOM
    cacheElements: function() {
        this.indicator = document.getElementById('tasksCounterIndicator');
        this.counterNumber = document.getElementById('counterNumber');
        this.counterPrefix = document.getElementById('counterPrefix');
        this.counterSuffix = document.getElementById('counterSuffix');
        this.counterIcon = document.getElementById('counterIcon');
        this.counterStatus = document.getElementById('counterStatus');
        this.progressBar = document.getElementById('counterProgressBar');
        this.closeBtn = document.getElementById('counterCloseBtn');

        if (!this.indicator) {
            console.error('[TasksCounter] ‚ùå –û—Å–Ω–æ–≤–Ω–æ–π —ç–ª–µ–º–µ–Ω—Ç –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω (#tasksCounterIndicator)');
            return false;
        }

        console.log('[TasksCounter] ‚úÖ –≠–ª–µ–º–µ–Ω—Ç—ã DOM –∫–µ—à–∏—Ä–æ–≤–∞–Ω—ã');
        return true;
    },

    // –ü—Ä–∏–≤—è–∑–∫–∞ —Å–æ–±—ã—Ç–∏–π
    bindEvents: function() {
        const self = this;

        // –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π —Ä–µ–∂–∏–º–∞ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
        $(document).on('paginationModeChanged', function(e, mode) {
            console.log('[TasksCounter] üìä –†–µ–∂–∏–º –ø–∞–≥–∏–Ω–∞—Ü–∏–∏:', mode);
            self.currentPaginationType = mode;
            self.updateModeStyle(mode);
        });

        console.log('[TasksCounter] ‚úÖ –°–æ–±—ã—Ç–∏—è –ø—Ä–∏–≤—è–∑–∞–Ω—ã');
    },

    // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–Ω–æ–ø–∫–∏ –∑–∞–∫—Ä—ã—Ç–∏—è
    setupCloseButton: function() {
        if (this.closeBtn) {
            this.closeBtn.addEventListener('click', () => {
                console.log('[TasksCounter] üîò –ö–Ω–æ–ø–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è –Ω–∞–∂–∞—Ç–∞ - —Å–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—Å–µ —Ñ–∏–ª—å—Ç—Ä—ã');

                // –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –ø–æ–ª–Ω–æ–≥–æ —Å–±—Ä–æ—Å–∞ –≤—Å–µ—Ö —Ñ–∏–ª—å—Ç—Ä–æ–≤
                if (typeof resetAllFilters === 'function') {
                    resetAllFilters();
                } else {
                    console.warn('[TasksCounter] –§—É–Ω–∫—Ü–∏—è resetAllFilters –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, –ø—Ä–æ—Å—Ç–æ —Å–∫—Ä—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä');
                    this.hide();
                }
            });
        }
    },

    // –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä
    show: function() {
        if (this.isVisible || !this.indicator) return;

        console.log('[TasksCounter] üëÅÔ∏è –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä');
        this.indicator.style.display = 'block';
        this.isVisible = true;

        setTimeout(() => {
            this.indicator.classList.add('show');
        }, 50);
    },

    // –°–∫—Ä—ã—Ç—å –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä
    hide: function() {
        if (!this.isVisible || !this.indicator) return;

        console.log('[TasksCounter] üôà –°–∫—Ä—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä');
        this.indicator.classList.remove('show');
        this.isVisible = false;

        setTimeout(() => {
            this.indicator.style.display = 'none';
        }, 300);
    },

    // –û–±–Ω–æ–≤–∏—Ç—å —Å—á–µ—Ç—á–∏–∫
    updateCounter: function(filtered, total, isFiltered = false) {
        if (!this.indicator) return;

        console.log('[TasksCounter] üîÑ –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫:', {
            filtered: filtered,
            total: total,
            isFiltered: isFiltered,
            mode: this.currentPaginationType
        });

        this.currentCount = filtered;
        this.totalCount = total;
        this.isFiltered = isFiltered;

        if (filtered === 0) {
            this.showEmpty();
        } else {
            this.showCounter(filtered, total, isFiltered);
        }
    },

    // –ü–æ–∫–∞–∑–∞—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å—á–µ—Ç—á–∏–∫–∞
    showCounter: function(count, total, isFiltered) {
        if (!this.indicator) return;

        this.clearStates();
        this.indicator.classList.add('counter-success');

        // –û–±–Ω–æ–≤–ª—è–µ–º —Ü–∏—Ñ—Ä—É
        if (this.counterNumber) {
            this.counterNumber.textContent = count.toLocaleString('ru-RU');
        }

        // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–µ—Ñ–∏–∫—Å –∏ —Å—É—Ñ—Ñ–∏–∫—Å
        if (this.counterPrefix && this.counterSuffix) {
            if (isFiltered) {
                this.counterPrefix.textContent = '–ù–∞–π–¥–µ–Ω–æ ';
                this.counterSuffix.textContent = ` ${this.getTaskWord(count)} –∏–∑ ${total.toLocaleString('ru-RU')}`;
            } else {
                this.counterPrefix.textContent = '–í—Å–µ–≥–æ ';
                this.counterSuffix.textContent = ` ${this.getTaskWord(count)}`;
            }
        }

        // –û–±–Ω–æ–≤–ª—è–µ–º –∏–∫–æ–Ω–∫—É
        if (this.counterIcon) {
            this.counterIcon.className = isFiltered ? 'fas fa-filter' : 'fas fa-tasks';
        }

        this.show();
    },

    // –ü–æ–∫–∞–∑–∞—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏
    showLoading: function(message = '–ó–∞–≥—Ä—É–∑–∫–∞...') {
        if (!this.indicator) return;

        console.log('[TasksCounter] ‚è≥ –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É:', message);

        this.clearStates();
        this.indicator.classList.add('counter-loading');

        if (this.counterIcon) {
            this.counterIcon.className = 'fas fa-spinner fa-spin';
        }

        this.show();
    },

    // –ü–æ–∫–∞–∑–∞—Ç—å –ø—É—Å—Ç–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    showEmpty: function() {
        if (!this.indicator) return;

        console.log('[TasksCounter] üì≠ –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—É—Å—Ç–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ');

        this.clearStates();
        this.indicator.classList.add('counter-empty');

        if (this.counterIcon) {
            this.counterIcon.className = 'fas fa-inbox';
        }

        if (this.counterNumber) {
            this.counterNumber.textContent = '–Ω–µ –Ω–∞–π–¥–µ–Ω—ã';
        }

        this.show();
    },

    // –ü–æ–∫–∞–∑–∞—Ç—å –æ—à–∏–±–∫—É
    showError: function(message = '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏') {
        if (!this.indicator) return;

        console.log('[TasksCounter] ‚ùå –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—à–∏–±–∫—É:', message);

        this.clearStates();
        this.indicator.classList.add('counter-error');

        if (this.counterIcon) {
            this.counterIcon.className = 'fas fa-exclamation-triangle';
        }

        this.show();
    },

    // –û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    clearStates: function() {
        if (!this.indicator) return;

        this.indicator.classList.remove(
            'counter-loading', 'counter-success', 'counter-empty',
            'counter-error', 'counter-filtered', 'pagination-pages'
        );
    },

    // –û–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∏–ª–∏ –¥–ª—è —Ä–µ–∂–∏–º–∞ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
    updateModeStyle: function(mode) {
        if (!this.indicator) return;

        console.log('[TasksCounter] üé® –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∏–ª–∏ –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—á–Ω–æ–π –ø–∞–≥–∏–Ω–∞—Ü–∏–∏');

        this.indicator.classList.remove('pagination-pages');
        this.indicator.classList.add('pagination-pages');
    },

    // –ü–æ–ª—É—á–∏—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Ñ–æ—Ä–º—É —Å–ª–æ–≤–∞ "–∑–∞–¥–∞—á–∞"
    getTaskWord: function(count) {
        const lastDigit = count % 10;
        const lastTwoDigits = count % 100;

        if (lastTwoDigits >= 11 && lastTwoDigits <= 19) {
            return '–∑–∞–¥–∞—á';
        }

        switch (lastDigit) {
            case 1:
                return '–∑–∞–¥–∞—á–∞';
            case 2:
            case 3:
            case 4:
                return '–∑–∞–¥–∞—á–∏';
            default:
                return '–∑–∞–¥–∞—á';
        }
    }
};

// –ü—É–±–ª–∏—á–Ω—ã–π API –¥–ª—è –≤–Ω–µ—à–Ω–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
window.TasksCounterAPI = {
    show: function() {
        if (window.TasksCounterManager && typeof window.TasksCounterManager.show === 'function') {
            window.TasksCounterManager.show();
        }
    },

    hide: function() {
        if (window.TasksCounterManager && typeof window.TasksCounterManager.hide === 'function') {
            window.TasksCounterManager.hide();
        }
    },

    updateCounter: function(filtered, total, isFiltered) {
        if (window.TasksCounterManager && typeof window.TasksCounterManager.updateCount === 'function') {
            window.TasksCounterManager.updateCount(filtered);
        }
    },

    showLoading: function(message) {
        if (window.TasksCounterManager && typeof window.TasksCounterManager.showLoading === 'function') {
            window.TasksCounterManager.showLoading(message);
        }
    },

    showEmpty: function() {
        if (window.TasksCounterManager && typeof window.TasksCounterManager.hide === 'function') {
            window.TasksCounterManager.hide();
        }
    },

    showError: function(message) {
        if (window.TasksCounterManager && typeof window.TasksCounterManager.showError === 'function') {
            window.TasksCounterManager.showError(message);
        }
    }
};

/**
 * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Å—á–µ—Ç—á–∏–∫ –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∑–∞–¥–∞—á
 * –°–æ–∑–¥–∞–µ—Ç –∏ –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç —ç–ª–µ–º–µ–Ω—Ç—ã DOM –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∑–∞–¥–∞—á
 */
function initializeFilterCounter() {
    console.log('[TasksPaginated] –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å—á–µ—Ç—á–∏–∫–∞ —Ñ–∏–ª—å—Ç—Ä–æ–≤...');

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—á–µ—Ç—á–∏–∫–∞
    const counterElement = $('#filtered-tasks-count');
    if (counterElement.length === 0) {
        console.warn('[TasksPaginated] –≠–ª–µ–º–µ–Ω—Ç —Å—á–µ—Ç—á–∏–∫–∞ —Ñ–∏–ª—å—Ç—Ä–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω!');
        return;
    }

    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–∞—á–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
    counterElement.text('0');

    // –°–∫—Ä—ã–≤–∞–µ–º —Å–µ–∫—Ü–∏—é —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
    const resultsSection = $('.filter-results-section');
    if (resultsSection.length > 0) {
        resultsSection.hide();
    }

    console.log('[TasksPaginated] –°—á–µ—Ç—á–∏–∫ —Ñ–∏–ª—å—Ç—Ä–æ–≤ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω (—Å–∫—Ä—ã—Ç).');
}

/**
 * –û–±–Ω–æ–≤–ª—è–µ—Ç —Å—á–µ—Ç—á–∏–∫ –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∑–∞–¥–∞—á
 * @param {number} count - –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–¥–∞—á –ø–æ—Å–ª–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è —Ñ–∏–ª—å—Ç—Ä–æ–≤
 */
function updateFilterCounter(count) {
    console.log(`[TasksPaginated] –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—á–µ—Ç—á–∏–∫–∞ —Ñ–∏–ª—å—Ç—Ä–æ–≤: ${count}`);

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—á–µ—Ç—á–∏–∫–∞
    const counterElement = $('#filtered-tasks-count');
    if (counterElement.length === 0) {
        console.warn('[TasksPaginated] –≠–ª–µ–º–µ–Ω—Ç —Å—á–µ—Ç—á–∏–∫–∞ —Ñ–∏–ª—å—Ç—Ä–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω!');
        return;
    }

    // –û–±–Ω–æ–≤–ª—è–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ —Å—á–µ—Ç—á–∏–∫–∞
    counterElement.text(count);

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–µ–∫—Ü–∏—é —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –µ—Å–ª–∏ –µ—Å—Ç—å —á—Ç–æ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å
    const resultsSection = $('.filter-results-section');
    if (resultsSection.length > 0) {
        if (count > 0) {
            resultsSection.show();
            // –î–æ–±–∞–≤–ª—è–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –ø—É–ª—å—Å–∞—Ü–∏–∏ –¥–ª—è –ø—Ä–∏–≤–ª–µ—á–µ–Ω–∏—è –≤–Ω–∏–º–∞–Ω–∏—è
            $('.results-badge-bright .results-pulse').addClass('pulse').delay(1500).queue(function(next) {
                $(this).removeClass('pulse');
                next();
            });
        } else {
            resultsSection.hide();
        }
    }

    console.log('[TasksPaginated] –°—á–µ—Ç—á–∏–∫ —Ñ–∏–ª—å—Ç—Ä–æ–≤ –æ–±–Ω–æ–≤–ª–µ–Ω.');
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞
$(function() {
    console.log('[TasksPaginated] –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–¥—É–ª—è –ø–∞–≥–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∑–∞–¥–∞—á (v3)');

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
    initializePaginatedTasks();
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∫–Ω–æ–ø–æ–∫ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –∫–∞—Ä—Ç–æ—á–µ–∫
function initializeCardToggleButtons() {
    console.log('[TasksPaginated] –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–Ω–æ–ø–æ–∫ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –∫–∞—Ä—Ç–æ—á–µ–∫');
    // –ü—É—Å—Ç–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –æ—à–∏–±–∫–∏
    // –†–µ–∞–ª—å–Ω–∞—è –ª–æ–≥–∏–∫–∞ —É–∂–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞ –≤ card_breakdown_handler.js
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–∫—Ç–∏–≤–Ω—ã—Ö —Ñ–∏–ª—å—Ç—Ä–æ–≤
function checkForActiveFilters() {
    console.log('[TasksPaginated] –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–∫—Ç–∏–≤–Ω—ã—Ö —Ñ–∏–ª—å—Ç—Ä–æ–≤');

    const statusFilter = $('#status-filter').val();
    const projectFilter = $('#project-filter').val();
    const priorityFilter = $('#priority-filter').val();
    const searchValue = $('.dataTables_filter input').val();

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∞–∫—Ç–∏–≤–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã
    const hasActiveFilters = statusFilter || projectFilter || priorityFilter || (searchValue && searchValue.length > 0);

    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫ —Ñ–∏–ª—å—Ç—Ä–æ–≤, –µ—Å–ª–∏ –æ–Ω —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    if (typeof updateFilterCounter === 'function') {
        // –ü–æ–ª—É—á–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∑–∞–¥–∞—á
        const filteredCount = window.tasksDataTable ? window.tasksDataTable.rows({search:'applied'}).count() : 0;
        updateFilterCounter(filteredCount);
    }

    return hasActiveFilters;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –≥–ª–æ–±–∞–ª—å–Ω–æ–π –∫–Ω–æ–ø–∫–∏ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è
function initializeGlobalToggleButton() {
    console.log('[TasksPaginated] –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≥–ª–æ–±–∞–ª—å–Ω–æ–π –∫–Ω–æ–ø–∫–∏ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è');
    // –ü—É—Å—Ç–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –æ—à–∏–±–∫–∏
    // –†–µ–∞–ª—å–Ω–∞—è –ª–æ–≥–∏–∫–∞ —É–∂–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞ –≤ card_breakdown_handler.js
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∞–∫–∫–æ—Ä–¥–µ–æ–Ω–∞ —Å—Ç–∞—Ç—É—Å–æ–≤
function initializeStatusAccordion(response) {
    console.log('[TasksPaginated] –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∞–∫–∫–æ—Ä–¥–µ–æ–Ω–∞ —Å—Ç–∞—Ç—É—Å–æ–≤...');

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –¥–∞–Ω–Ω—ã–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    const statusCounts = response.statistics?.debug_status_counts || {};

    if (Object.keys(statusCounts).length === 0) {
        showAccordionNoData();
        return;
    }

    // –ó–∞–≥—Ä—É–∂–∞–µ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –¥–ª—è –∞–∫–∫–æ—Ä–¥–µ–æ–Ω–∞
    $.get('/tasks/api/statistics-extended')
        .done(function(extendedResponse) {
            if (extendedResponse.success && extendedResponse.status_groups) {
                console.log('[TasksPaginated] –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—É—á–µ–Ω–∞ –¥–ª—è –∞–∫–∫–æ—Ä–¥–µ–æ–Ω–∞:', extendedResponse);

                // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∞–∫–∫–æ—Ä–¥–µ–æ–Ω —Å –¥–∞–Ω–Ω—ã–º–∏
                if (typeof window.StatusAccordion !== 'undefined') {
                    window.StatusAccordion.init(extendedResponse.status_groups, 'statusAccordion');
                    hideAccordionLoading();
                } else {
                    console.warn('[TasksPaginated] StatusAccordion –∫–ª–∞—Å—Å –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—ã—Ç–∞–µ–º—Å—è –∑–∞–≥—Ä—É–∑–∏—Ç—å...');
                    // –ü—ã—Ç–∞–µ–º—Å—è –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–∫—Ä–∏–ø—Ç –∞–∫–∫–æ—Ä–¥–µ–æ–Ω–∞
                    loadStatusAccordionScript().then(() => {
                        if (typeof window.StatusAccordion !== 'undefined') {
                            window.StatusAccordion.init(extendedResponse.status_groups, 'statusAccordion');
                            hideAccordionLoading();
                        } else {
                            showAccordionError();
                        }
                    }).catch(() => {
                        showAccordionError();
                    });
                }
            } else {
                console.error('[TasksPaginated] –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:', extendedResponse);
                showAccordionError();
            }
        })
        .fail(function(xhr, status, error) {
            console.error('[TasksPaginated] –û—à–∏–±–∫–∞ API —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:', error);
            showAccordionError();
        });
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ —Å–∫—Ä–∏–ø—Ç–∞ –∞–∫–∫–æ—Ä–¥–µ–æ–Ω–∞
function loadStatusAccordionScript() {
    return new Promise((resolve, reject) => {
        if (typeof window.StatusAccordion !== 'undefined') {
            resolve();
            return;
        }

        const script = document.createElement('script');
        script.src = '/static/js/status_accordion.js?v=' + Math.random();
        script.onload = resolve;
        script.onerror = reject;
        document.head.appendChild(script);
    });
}

// –§—É–Ω–∫—Ü–∏–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º –∞–∫–∫–æ—Ä–¥–µ–æ–Ω–∞
function hideAccordionLoading() {
    $('#accordionLoading').hide();
    $('#accordionError').hide();
    $('#accordionNoData').hide();
}

function showAccordionError() {
    $('#accordionLoading').hide();
    $('#accordionError').show();
    $('#accordionNoData').hide();
}

function showAccordionNoData() {
    $('#accordionLoading').hide();
    $('#accordionError').hide();
    $('#accordionNoData').show();
}
