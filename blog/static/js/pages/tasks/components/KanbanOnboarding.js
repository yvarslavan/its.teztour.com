/**
 * KanbanOnboarding.js - –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –æ–Ω–±–æ—Ä–¥–∏–Ω–≥–∞ –∫–∞–Ω–±–∞–Ω-–¥–æ—Å–∫–∏
 * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–æ—à–∞–≥–æ–≤–æ–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –∫–∞–Ω–±–∞–Ω–∞
 */

class KanbanOnboarding {
    constructor() {
        this.isVisible = false;
        this.currentStep = 0;
        this.steps = [
            {
                title: '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∫–∞–Ω–±–∞–Ω-–¥–æ—Å–∫—É!',
                description: '–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ —É–ø—Ä–∞–≤–ª—è—Ç—å –∑–∞–¥–∞—á–∞–º–∏ –≤ —É–¥–æ–±–Ω–æ–º –≤–∏–∑—É–∞–ª—å–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ',
                icon: 'fas fa-columns'
            },
            {
                title: '–ü–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏–µ –∑–∞–¥–∞—á',
                description: '–ó–∞–∂–º–∏—Ç–µ –∫–∞—Ä—Ç–æ—á–∫—É –∑–∞–¥–∞—á–∏ –∏ –ø–µ—Ä–µ—Ç–∞—â–∏—Ç–µ –µ—ë –≤ –¥—Ä—É–≥—É—é –∫–æ–ª–æ–Ω–∫—É –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞',
                icon: 'fas fa-mouse-pointer'
            },
            {
                title: '–ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è',
                description: '–ö–ª–∏–∫–Ω–∏—Ç–µ –Ω–∞ –Ω–æ–º–µ—Ä –∑–∞–¥–∞—á–∏ (#123) –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ –¥–µ—Ç–∞–ª—è–º',
                icon: 'fas fa-bolt'
            },
            {
                title: '–¶–≤–µ—Ç–æ–≤–∞—è –∏–Ω–¥–∏–∫–∞—Ü–∏—è',
                description: '–¶–≤–µ—Ç–Ω—ã–µ –±–µ–π–¥–∂–∏ –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç: –∫—Ä–∞—Å–Ω—ã–π - –≤—ã—Å–æ–∫–∏–π, —Å–∏–Ω–∏–π - –Ω–æ—Ä–º–∞–ª—å–Ω—ã–π, –∑–µ–ª–µ–Ω—ã–π - –Ω–∏–∑–∫–∏–π',
                icon: 'fas fa-palette'
            }
        ];
    }

    /**
     * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –æ–Ω–±–æ—Ä–¥–∏–Ω–≥ –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –µ–≥–æ –µ—â–µ –Ω–µ –≤–∏–¥–µ–ª
     */
    showIfNeeded() {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤–∏–¥–µ–ª –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ–Ω–±–æ—Ä–¥–∏–Ω–≥
        const hasSeenOnboarding = localStorage.getItem('kanbanOnboardingSeen');

        if (!hasSeenOnboarding) {
            this.show();
        }
    }

    /**
     * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –æ–Ω–±–æ—Ä–¥–∏–Ω–≥
     */
    show() {
        this.isVisible = true;
        this.currentStep = 0;
        this.createOnboardingModal();
        this.showStep(0);
    }

    /**
     * –°–æ–∑–¥–∞–µ—Ç –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –æ–Ω–±–æ—Ä–¥–∏–Ω–≥–∞
     */
    createOnboardingModal() {
        const modal = document.createElement('div');
        modal.className = 'kanban-onboarding-modal';
        modal.innerHTML = `
            <div class="onboarding-overlay"></div>
            <div class="onboarding-container">
                <div class="onboarding-header">
                    <div class="onboarding-progress">
                        <div class="progress-bar">
                            <div class="progress-fill" id="onboarding-progress-fill"></div>
                        </div>
                        <span class="progress-text" id="onboarding-progress-text">1/${this.steps.length}</span>
                    </div>
                    <button class="onboarding-close-btn" id="onboarding-close-btn">
                        <i class="fas fa-times"></i>
                    </button>
                </div>
                <div class="onboarding-content">
                    <div class="onboarding-icon" id="onboarding-icon">
                        <i class="fas fa-columns"></i>
                    </div>
                    <h3 class="onboarding-title" id="onboarding-title">–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∫–∞–Ω–±–∞–Ω-–¥–æ—Å–∫—É!</h3>
                    <p class="onboarding-description" id="onboarding-description">–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ —É–ø—Ä–∞–≤–ª—è—Ç—å –∑–∞–¥–∞—á–∞–º–∏ –≤ —É–¥–æ–±–Ω–æ–º –≤–∏–∑—É–∞–ª—å–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ</p>
                </div>
                <div class="onboarding-actions">
                    <div class="onboarding-nav">
                        <button class="onboarding-btn secondary" id="onboarding-prev-btn" disabled>
                            <i class="fas fa-chevron-left"></i>
                            <span>–ù–∞–∑–∞–¥</span>
                        </button>
                        <button class="onboarding-btn primary" id="onboarding-next-btn">
                            <span>–î–∞–ª–µ–µ</span>
                            <i class="fas fa-chevron-right"></i>
                        </button>
                    </div>
                </div>
            </div>
        `;

        document.body.appendChild(modal);
        this.setupEventListeners();
    }

    /**
     * –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
     */
    setupEventListeners() {
        const closeBtn = document.getElementById('onboarding-close-btn');
        const prevBtn = document.getElementById('onboarding-prev-btn');
        const nextBtn = document.getElementById('onboarding-next-btn');
        const overlay = document.querySelector('.onboarding-overlay');

        closeBtn.addEventListener('click', () => this.close());
        overlay.addEventListener('click', () => this.close());
        prevBtn.addEventListener('click', () => this.previousStep());
        nextBtn.addEventListener('click', () => this.nextStep());

        // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ ESC
        document.addEventListener('keydown', (e) => {
            if (e.key === 'Escape' && this.isVisible) {
                this.close();
            }
        });
    }

    /**
     * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π —à–∞–≥
     */
    showStep(stepIndex) {
        const step = this.steps[stepIndex];

        document.getElementById('onboarding-icon').innerHTML = `<i class="${step.icon}"></i>`;
        document.getElementById('onboarding-title').textContent = step.title;
        document.getElementById('onboarding-description').textContent = step.description;

        // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å
        const progress = ((stepIndex + 1) / this.steps.length) * 100;
        document.getElementById('onboarding-progress-fill').style.width = `${progress}%`;
        document.getElementById('onboarding-progress-text').textContent = `${stepIndex + 1}/${this.steps.length}`;

        // –û–±–Ω–æ–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏
        const prevBtn = document.getElementById('onboarding-prev-btn');
        const nextBtn = document.getElementById('onboarding-next-btn');

        prevBtn.disabled = stepIndex === 0;
        nextBtn.innerHTML = stepIndex === this.steps.length - 1
            ? '<span>–ó–∞–≤–µ—Ä—à–∏—Ç—å</span><i class="fas fa-check"></i>'
            : '<span>–î–∞–ª–µ–µ</span><i class="fas fa-chevron-right"></i>';
    }

    /**
     * –°–ª–µ–¥—É—é—â–∏–π —à–∞–≥
     */
    nextStep() {
        if (this.currentStep < this.steps.length - 1) {
            this.currentStep++;
            this.showStep(this.currentStep);
        } else {
            this.complete();
        }
    }

    /**
     * –ü—Ä–µ–¥—ã–¥—É—â–∏–π —à–∞–≥
     */
    previousStep() {
        if (this.currentStep > 0) {
            this.currentStep--;
            this.showStep(this.currentStep);
        }
    }

    /**
     * –ó–∞–≤–µ—Ä—à–∞–µ—Ç –æ–Ω–±–æ—Ä–¥–∏–Ω–≥
     */
    complete() {
        localStorage.setItem('kanbanOnboardingSeen', 'true');
        this.close();
    }

    /**
     * –ó–∞–∫—Ä—ã–≤–∞–µ—Ç –æ–Ω–±–æ—Ä–¥–∏–Ω–≥
     */
    close() {
        this.isVisible = false;

        // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —Å–∫—Ä—ã–≤–∞–µ–º –≤—Å–µ –≤—Å–ø–ª—ã–≤–∞—é—â–∏–µ –ø–æ–¥—Å–∫–∞–∑–∫–∏ –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ –æ–Ω–±–æ—Ä–¥–∏–Ω–≥–∞
        this.forceHideAllTooltips();

        const modal = document.querySelector('.kanban-onboarding-modal');
        if (modal) {
            modal.querySelector('.onboarding-container').classList.add('fade-out');
            setTimeout(() => {
                if (modal.parentNode) {
                    modal.parentNode.removeChild(modal);
                }
            }, 300);
        }

        console.log('[KanbanOnboarding] üéØ –û–Ω–±–æ—Ä–¥–∏–Ω–≥ –∑–∞–∫—Ä—ã—Ç, –≤—Å–µ –ø–æ–¥—Å–∫–∞–∑–∫–∏ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —Å–∫—Ä—ã—Ç—ã');
    }

    /**
     * –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —Å–∫—Ä—ã–≤–∞–µ—Ç –≤—Å–µ –≤—Å–ø–ª—ã–≤–∞—é—â–∏–µ –ø–æ–¥—Å–∫–∞–∑–∫–∏
     */
    forceHideAllTooltips() {
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º –≥–ª–æ–±–∞–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é –µ—Å–ª–∏ –æ–Ω–∞ –¥–æ—Å—Ç—É–ø–Ω–∞
        if (typeof window.hideAllKanbanTooltips === 'function') {
            window.hideAllKanbanTooltips();
            console.log('[KanbanOnboarding] üéØ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —Å–∫—Ä—ã—Ç—ã –≤—Å–µ –≤—Å–ø–ª—ã–≤–∞—é—â–∏–µ –ø–æ–¥—Å–∫–∞–∑–∫–∏ –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ –æ–Ω–±–æ—Ä–¥–∏–Ω–≥–∞');
        } else {
            // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —É–¥–∞–ª—è–µ–º –≤—Å–µ –ø–æ–¥—Å–∫–∞–∑–∫–∏
            const tooltips = document.querySelectorAll('.kanban-tooltip');
            tooltips.forEach(tooltip => {
                tooltip.style.opacity = '0';
                tooltip.style.transform = 'translateY(10px) scale(0.95)';
                tooltip.classList.remove('show');
                tooltip.remove();
            });

            // –£–¥–∞–ª—è–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
            const container = document.getElementById('kanban-tooltip-container');
            if (container) {
                container.remove();
            }

            console.log('[KanbanOnboarding] üéØ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —Å–∫—Ä—ã—Ç—ã –≤—Å–µ –≤—Å–ø–ª—ã–≤–∞—é—â–∏–µ –ø–æ–¥—Å–∫–∞–∑–∫–∏ (–∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Å–ø–æ—Å–æ–±)');
        }
    }
}

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª—è—Ö
window.KanbanOnboarding = KanbanOnboarding;

// –ì–ª–æ–±–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–±—Ä–æ—Å–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –æ–Ω–±–æ—Ä–¥–∏–Ω–≥–∞ (–¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è)
window.resetKanbanOnboarding = function() {
    localStorage.removeItem('kanbanOnboardingSeen');
    console.log('[Global] üîÑ –°–æ—Å—Ç–æ—è–Ω–∏–µ –æ–Ω–±–æ—Ä–¥–∏–Ω–≥–∞ —Å–±—Ä–æ—à–µ–Ω–æ');
};

// –ì–ª–æ–±–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø–æ–∫–∞–∑–∞ –æ–Ω–±–æ—Ä–¥–∏–Ω–≥–∞
window.showKanbanOnboarding = function() {
    if (typeof window.KanbanOnboarding !== 'undefined') {
        const onboarding = new window.KanbanOnboarding();
        onboarding.show();
    }
};
