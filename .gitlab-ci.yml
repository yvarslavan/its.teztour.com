stages:
  - validate
  - test
  - build
  - pre-deploy
  - deploy
  - post-deploy

variables:
  DEPLOY_PATH: "/var/www/flask_helpdesk"
  SERVICE_NAME: "flask-helpdesk"
  BACKUP_PATH: "/var/backups/flask_helpdesk"
  PYTHON_VERSION: "3.11"
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  AFTER_SCRIPT_IGNORE_ERRORS: false

cache:
  paths:
    - .cache/pip/

# ============ –≠–¢–ê–ü 1: –í–ê–õ–ò–î–ê–¶–ò–Ø ============
validate_project:
  stage: validate
  image: python:3.11-slim
  script:
    - echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞..."
    - |
      if [ ! -f "requirements.txt" ]; then
        echo "‚ùå –§–∞–π–ª requirements.txt –Ω–µ –Ω–∞–π–¥–µ–Ω"
        exit 1
      fi
      if [ ! -f "app.py" ]; then
        echo "‚ùå –§–∞–π–ª app.py –Ω–µ –Ω–∞–π–¥–µ–Ω"
        exit 1
      fi
      if [ ! -f "flask-helpdesk.service" ]; then
        echo "‚ùå –§–∞–π–ª flask-helpdesk.service –Ω–µ –Ω–∞–π–¥–µ–Ω"
        exit 1
      fi
    - echo "‚úÖ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞ –≤–∞–ª–∏–¥–Ω–∞"
    - echo "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞:"
    - find . -name "*.py" | wc -l | xargs echo "Python —Ñ–∞–π–ª–æ–≤:"
    - find . -name "*.html" | wc -l | xargs echo "HTML —à–∞–±–ª–æ–Ω–æ–≤:"
    - find . -name "*.css" | wc -l | xargs echo "CSS —Ñ–∞–π–ª–æ–≤:"
    - find . -name "*.js" | wc -l | xargs echo "JavaScript —Ñ–∞–π–ª–æ–≤:"
  only:
    - main
    - develop
    - merge_requests

# ============ –≠–¢–ê–ü 2: –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï ============
test_dependencies:
  stage: test
  image: python:3.11-slim
  before_script:
    - apt-get update -qy
    - apt-get install -y gcc g++ libffi-dev libssl-dev default-libmysqlclient-dev pkg-config
    - python -m venv venv
    - source venv/bin/activate
    - pip install --upgrade pip
  script:
    - source venv/bin/activate
    - echo "üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
    - pip install -r requirements.txt
    - echo "‚úÖ –í—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ"
  only:
    - main
    - develop
    - merge_requests

test_flask_import:
  stage: test
  image: python:3.11-slim
  script:
    - echo "üß™ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ Flask –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
    - pip install --upgrade pip
    - pip install -r requirements.txt
    - python -c "from blog import create_app; print('‚úÖ Flask –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ')"
    - python -c "import flask; print('Flask –≤–µ—Ä—Å–∏—è:', flask.__version__)"
  only:
    - main
    - develop
    - merge_requests

# ============ –≠–¢–ê–ü 3: –°–ë–û–†–ö–ê ============
build_deployment_package:
  stage: build
  image: python:3.11-slim
  script:
    - echo "üì¶ –°–æ–∑–¥–∞–Ω–∏–µ –ú–ò–ù–ò–ú–ê–õ–¨–ù–û–ì–û deployment –ø–∞–∫–µ—Ç–∞ (v2)..."
    - apt-get update && apt-get install -y rsync
    - mkdir -p deployment_package
    - |
      # –ù–û–í–ê–Ø –°–¢–†–ê–¢–ï–ì–ò–Ø: –í–∫–ª—é—á–∞–µ–º —Ç–æ–ª—å–∫–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ñ–∞–π–ª—ã
      echo "üì¶ –†–ê–î–ò–ö–ê–õ–¨–ù–û –ù–û–í–´–ô –ü–û–î–•–û–î: –°–æ–∑–¥–∞–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π deployment –ø–∞–∫–µ—Ç..."

      # –°–æ–∑–¥–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É
      mkdir -p deployment_package/blog

      # –ö–æ–ø–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ñ–∞–π–ª—ã
      cp app.py deployment_package/
      cp wsgi.py deployment_package/
      cp requirements.txt deployment_package/
      cp flask-helpdesk.service deployment_package/
      cp config.py deployment_package/
      cp .flaskenv deployment_package/
      cp config.ini deployment_package/
      cp mysql_db.py deployment_package/
      cp redmine.py deployment_package/
      cp erp_oracle.py deployment_package/

      # –ö–æ–ø–∏—Ä—É–µ–º –ø–∞–ø–∫—É blog (–æ—Å–Ω–æ–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ)
      rsync -av --exclude='__pycache__' --exclude='*.pyc' blog/ deployment_package/blog/

      echo "‚úÖ –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –ø–∞–∫–µ—Ç —Å–æ–∑–¥–∞–Ω - —Ç–æ–ª—å–∫–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ñ–∞–π–ª—ã"
      echo "üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê: –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –ù–ï –≤–∫–ª—é—á–µ–Ω–æ –≤ –ø–∞–∫–µ—Ç:"
      echo "‚ùå app_err.log - $(if [ -f deployment_package/app_err.log ]; then echo '–ù–ê–ô–î–ï–ù!'; else echo '–∏—Å–∫–ª—é—á–µ–Ω'; fi)"
      echo "‚ùå logs/ - $(if [ -d deployment_package/logs ]; then echo '–ù–ê–ô–î–ï–ù–ê!'; else echo '–∏—Å–∫–ª—é—á–µ–Ω–∞'; fi)"
      echo "‚ùå scripts/ - $(if [ -d deployment_package/scripts ]; then echo '–ù–ê–ô–î–ï–ù–ê!'; else echo '–∏—Å–∫–ª—é—á–µ–Ω–∞'; fi)"
    - |
      # –§–∏–Ω–∞–ª—å–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–≥–æ –ø–∞–∫–µ—Ç–∞
      find deployment_package/ -name "*.pyc" -delete
      find deployment_package/ -name "__pycache__" -type d -exec rm -rf {} + 2>/dev/null || true
      find deployment_package/ -name ".DS_Store" -delete
      echo "üßπ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
    - echo "‚úÖ Deployment –ø–∞–∫–µ—Ç —Å–æ–∑–¥–∞–Ω –∏ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω"
    - echo "üìä –†–∞–∑–º–µ—Ä –ø–∞–∫–µ—Ç–∞ –¥–æ —Å–∂–∞—Ç–∏—è:"
    - du -sh deployment_package/
    - echo "üìã –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø–∞–∫–µ—Ç–∞ (—Ç–æ–ø-—É—Ä–æ–≤–µ–Ω—å):"
    - ls -la deployment_package/
    - echo "üìà –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ–∞–π–ª–æ–≤:"
    - find deployment_package/ -type f | wc -l
    - |
      # –°–æ–∑–¥–∞–µ–º —Å–∂–∞—Ç—ã–π –∞—Ä—Ö–∏–≤ –¥–ª—è —ç–∫–æ–Ω–æ–º–∏–∏ –º–µ—Å—Ç–∞ –ø—Ä–∏ –ø–µ—Ä–µ–¥–∞—á–µ
      echo "üóúÔ∏è –°–æ–∑–¥–∞–µ–º —Å–∂–∞—Ç—ã–π –∞—Ä—Ö–∏–≤..."
      tar -czf deployment_package.tar.gz -C deployment_package .
      echo "üìä –†–∞–∑–º–µ—Ä —Å–∂–∞—Ç–æ–≥–æ –∞—Ä—Ö–∏–≤–∞:"
      ls -lh deployment_package.tar.gz
      echo "üìâ –ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç —Å–∂–∞—Ç–∏—è:"
      ORIGINAL_SIZE=$(du -sb deployment_package | cut -f1)
      COMPRESSED_SIZE=$(stat -f%z deployment_package.tar.gz 2>/dev/null || stat -c%s deployment_package.tar.gz)
      echo "–û—Ä–∏–≥–∏–Ω–∞–ª: $(numfmt --to=iec $ORIGINAL_SIZE)"
      echo "–°–∂–∞—Ç—ã–π: $(numfmt --to=iec $COMPRESSED_SIZE)"
      echo "–≠–∫–æ–Ω–æ–º–∏—è: $(( (ORIGINAL_SIZE - COMPRESSED_SIZE) * 100 / ORIGINAL_SIZE ))%"
  artifacts:
    paths:
      - deployment_package/
      - deployment_package.tar.gz
    expire_in: 1 hour
    # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–∞
    when: on_success
  only:
    - main

# ============ –≠–¢–ê–ü 4: –ü–†–ï–î–í–ê–†–ò–¢–ï–õ–¨–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê ============
pre_deploy_checks:
  stage: pre-deploy
  image: alpine:latest
  before_script:
    - apk add --no-cache openssh-client curl
  script:
    - |
      # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
      echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
      if [ -z "$SSH_PRIVATE_KEY" ] || [ -z "$DEPLOY_SERVER" ] || [ -z "$DEPLOY_USER" ]; then
        echo "‚ÑπÔ∏è –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–µ–ø–ª–æ—è –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã - –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫–∏"
        echo "‚úÖ –î–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–æ–±–∞–≤—å—Ç–µ SSH_PRIVATE_KEY, DEPLOY_SERVER, DEPLOY_USER –≤ GitLab CI/CD Settings"
        exit 0
      fi

      echo "‚úÖ –í—Å–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–µ–ø–ª–æ—è —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"

      # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º SSH —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –ø—Ä–∞–≤–∞–º–∏ –¥–æ—Å—Ç—É–ø–∞
      eval $(ssh-agent -s)

      # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ SSH –∫–ª—é—á–∞
      - echo "üîê –ù–∞—Å—Ç—Ä–æ–π–∫–∞ SSH –∫–ª—é—á–∞ —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –ø—Ä–∞–≤–∞–º–∏..."
      - |
        if [ -f "$SSH_PRIVATE_KEY" ]; then
          echo "üìÅ SSH_PRIVATE_KEY —Å–æ–¥–µ—Ä–∂–∏—Ç –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É: $SSH_PRIVATE_KEY"
          SSH_KEY_CONTENT="$SSH_PRIVATE_KEY"
        else
          echo "üìù SSH_PRIVATE_KEY —Å–æ–¥–µ—Ä–∂–∏—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –∫–ª—é—á–∞"
          # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª –¥–ª—è SSH –∫–ª—é—á–∞ —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –ø—Ä–∞–≤–∞–º–∏
          SSH_KEY_CONTENT=$(mktemp)

          # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –ª–∏ —Å -----BEGIN (–æ–±—ã—á–Ω—ã–π –∫–ª—é—á) –∏–ª–∏ —ç—Ç–æ base64
          if echo "$SSH_PRIVATE_KEY" | head -c 10 | grep -q "^-----BEGIN"; then
            echo "ÔøΩÔøΩ –û–±—ã—á–Ω—ã–π SSH –∫–ª—é—á"
            printf '%s\n' "$SSH_PRIVATE_KEY" > "$SSH_KEY_CONTENT"
          else
            echo "üîê Base64 –∫–æ–¥–∏—Ä–æ–≤–∞–Ω–Ω—ã–π SSH –∫–ª—é—á, –¥–µ–∫–æ–¥–∏—Ä—É–µ–º"
            echo "$SSH_PRIVATE_KEY" | base64 -d > "$SSH_KEY_CONTENT"
          fi

          chmod 600 "$SSH_KEY_CONTENT"
        fi

      # –î–æ–±–∞–≤–ª—è–µ–º –∫–ª—é—á –≤ SSH –∞–≥–µ–Ω—Ç
      if ! ssh-add "$SSH_KEY_CONTENT"; then
        echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å SSH –∫–ª—é—á –≤ –∞–≥–µ–Ω—Ç"
        # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –º—ã –µ–≥–æ —Å–æ–∑–¥–∞–ª–∏
        if [ "$SSH_KEY_CONTENT" != "$SSH_PRIVATE_KEY" ]; then
          rm -f "$SSH_KEY_CONTENT"
        fi
        exit 1
      fi

      # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ (—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –º—ã –µ–≥–æ —Å–æ–∑–¥–∞–ª–∏)
      if [ "$SSH_KEY_CONTENT" != "$SSH_PRIVATE_KEY" ]; then
        rm -f "$SSH_KEY_CONTENT"
      fi

      mkdir -p ~/.ssh
      chmod 700 ~/.ssh
      ssh-keyscan -H $DEPLOY_SERVER >> ~/.ssh/known_hosts

      echo "üöÄ –ù–∞—á–∏–Ω–∞–µ–º –¥–µ–ø–ª–æ–π –Ω–∞ —Å–µ—Ä–≤–µ—Ä..."

      echo "üîç –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–µ—Ä–≤–µ—Ä–∞..."

      # –ü—Ä–æ–≤–µ—Ä–∫–∞ SSH –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
      if ! ssh $DEPLOY_USER@$DEPLOY_SERVER "echo 'SSH —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ OK'"; then
        echo "‚ùå –û—à–∏–±–∫–∞ SSH –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è"
        exit 1
      fi

      # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ –º–µ—Å—Ç–∞ (–º–∏–Ω–∏–º—É–º 1GB)
      AVAILABLE_SPACE=$(ssh $DEPLOY_USER@$DEPLOY_SERVER "df ${DEPLOY_PATH:-/var/www/flask_helpdesk} | awk 'NR==2 {print \$4}'")
      if [ "$AVAILABLE_SPACE" -lt 1048576 ]; then
        echo "‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ –º–µ—Å—Ç–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ"
        exit 1
      fi
      echo "‚úÖ –°–≤–æ–±–æ–¥–Ω–æ–≥–æ –º–µ—Å—Ç–∞: $(($AVAILABLE_SPACE / 1024)) MB"

      # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞
      ssh $DEPLOY_USER@$DEPLOY_SERVER "
        DEPLOY_PATH_CHECK=\${DEPLOY_PATH:-/var/www/flask_helpdesk}

        if [ ! -w \"\$DEPLOY_PATH_CHECK\" ]; then
          echo '‚ùå –ù–µ—Ç –ø—Ä–∞–≤ –∑–∞–ø–∏—Å–∏ –≤ \$DEPLOY_PATH_CHECK'
          echo 'üîß –ü–æ–ø—ã—Ç–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–∞–≤...'

          # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
          sudo mkdir -p \$DEPLOY_PATH_CHECK

          # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞
          sudo chown -R www-data:www-data \$DEPLOY_PATH_CHECK
          sudo chmod -R 755 \$DEPLOY_PATH_CHECK
          sudo chmod g+w \$DEPLOY_PATH_CHECK
          sudo usermod -aG www-data $DEPLOY_USER

          # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–ª—è –¥–µ–ø–ª–æ—è
          sudo chmod 775 \$DEPLOY_PATH_CHECK
          sudo chown $DEPLOY_USER:www-data \$DEPLOY_PATH_CHECK

          # –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
          if [ ! -w \"\$DEPLOY_PATH_CHECK\" ]; then
            echo '‚ùå –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–µ –ø–æ–º–æ–≥–ª–æ'
            echo 'üìã –í—ã–ø–æ–ª–Ω–∏—Ç–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ:'
            echo '   sudo chmod 775 \$DEPLOY_PATH_CHECK'
            echo '   sudo chown $DEPLOY_USER:www-data \$DEPLOY_PATH_CHECK'
            exit 1
          else
            echo '‚úÖ –ü—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏'
          fi
        else
          echo '‚úÖ –ü—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã'
        fi
      "

      echo "‚úÖ –í—Å–µ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã"
  rules:
    - if: '$CI_COMMIT_REF_NAME == "main"'
      when: always

# ============ –≠–¢–ê–ü 5: –î–ï–ü–õ–û–ô ============
deploy_to_server:
  stage: deploy
  image: alpine:latest
  before_script:
    - apk add --no-cache openssh-client rsync
  script:
    - |
      # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
      echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è –¥–µ–ø–ª–æ—è..."
      if [ -z "$SSH_PRIVATE_KEY" ] || [ -z "$DEPLOY_SERVER" ] || [ -z "$DEPLOY_USER" ]; then
        echo "‚ÑπÔ∏è –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–µ–ø–ª–æ—è –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã - –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –¥–µ–ø–ª–æ–π"
        echo "‚úÖ –î–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–æ–±–∞–≤—å—Ç–µ SSH_PRIVATE_KEY, DEPLOY_SERVER, DEPLOY_USER –≤ GitLab CI/CD Settings"
        exit 0
      fi

      echo "‚úÖ –í—Å–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–µ–ø–ª–æ—è —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"

      # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º SSH —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –ø—Ä–∞–≤–∞–º–∏ –¥–æ—Å—Ç—É–ø–∞
      eval $(ssh-agent -s)

      # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ SSH –∫–ª—é—á–∞
      - echo "üîê –ù–∞—Å—Ç—Ä–æ–π–∫–∞ SSH –∫–ª—é—á–∞ —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –ø—Ä–∞–≤–∞–º–∏..."
      - |
        if [ -f "$SSH_PRIVATE_KEY" ]; then
          echo "üìÅ SSH_PRIVATE_KEY —Å–æ–¥–µ—Ä–∂–∏—Ç –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É: $SSH_PRIVATE_KEY"
          SSH_KEY_CONTENT="$SSH_PRIVATE_KEY"
        else
          echo "üìù SSH_PRIVATE_KEY —Å–æ–¥–µ—Ä–∂–∏—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –∫–ª—é—á–∞"
          # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª –¥–ª—è SSH –∫–ª—é—á–∞ —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –ø—Ä–∞–≤–∞–º–∏
          SSH_KEY_CONTENT=$(mktemp)

          # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –ª–∏ —Å -----BEGIN (–æ–±—ã—á–Ω—ã–π –∫–ª—é—á) –∏–ª–∏ —ç—Ç–æ base64
          if echo "$SSH_PRIVATE_KEY" | head -c 10 | grep -q "^-----BEGIN"; then
            echo "üîë –û–±—ã—á–Ω—ã–π SSH –∫–ª—é—á"
            printf '%s\n' "$SSH_PRIVATE_KEY" > "$SSH_KEY_CONTENT"
          else
            echo "üîê Base64 –∫–æ–¥–∏—Ä–æ–≤–∞–Ω–Ω—ã–π SSH –∫–ª—é—á, –¥–µ–∫–æ–¥–∏—Ä—É–µ–º"
            echo "$SSH_PRIVATE_KEY" | base64 -d > "$SSH_KEY_CONTENT"
          fi

          chmod 600 "$SSH_KEY_CONTENT"
        fi

      # –î–æ–±–∞–≤–ª—è–µ–º –∫–ª—é—á –≤ SSH –∞–≥–µ–Ω—Ç
      if ! ssh-add "$SSH_KEY_CONTENT"; then
        echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å SSH –∫–ª—é—á –≤ –∞–≥–µ–Ω—Ç"
        # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –º—ã –µ–≥–æ —Å–æ–∑–¥–∞–ª–∏
        if [ "$SSH_KEY_CONTENT" != "$SSH_PRIVATE_KEY" ]; then
          rm -f "$SSH_KEY_CONTENT"
        fi
        exit 1
      fi

      # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ (—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –º—ã –µ–≥–æ —Å–æ–∑–¥–∞–ª–∏)
      if [ "$SSH_KEY_CONTENT" != "$SSH_PRIVATE_KEY" ]; then
        rm -f "$SSH_KEY_CONTENT"
      fi

      mkdir -p ~/.ssh
      chmod 700 ~/.ssh
      ssh-keyscan -H $DEPLOY_SERVER >> ~/.ssh/known_hosts

      echo "üöÄ –ù–∞—á–∏–Ω–∞–µ–º –¥–µ–ø–ª–æ–π –Ω–∞ —Å–µ—Ä–≤–µ—Ä..."

      # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
      DEPLOY_PATH=${DEPLOY_PATH:-/var/www/flask_helpdesk}
      BACKUP_PATH=${BACKUP_PATH:-/var/backups/flask_helpdesk}
      SERVICE_NAME=${SERVICE_NAME:-flask-helpdesk}

      # –°–æ–∑–¥–∞–µ–º –±—ç–∫–∞–ø —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞
      ssh $DEPLOY_USER@$DEPLOY_SERVER "
        echo 'üíæ –°–æ–∑–¥–∞–µ–º –±—ç–∫–∞–ø...'
        if [ -d '$DEPLOY_PATH' ]; then
          sudo mkdir -p $BACKUP_PATH
          sudo cp -r $DEPLOY_PATH $BACKUP_PATH/backup_\$(date +%Y%m%d_%H%M%S)
          echo '‚úÖ –ë—ç–∫–∞–ø —Å–æ–∑–¥–∞–Ω'
        fi
      "

      # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–µ—Ä–≤–∏—Å
      ssh $DEPLOY_USER@$DEPLOY_SERVER "
        echo '‚èπÔ∏è –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–µ—Ä–≤–∏—Å...'
        if sudo systemctl is-active --quiet $SERVICE_NAME; then
          sudo systemctl stop $SERVICE_NAME
          echo '‚úÖ –°–µ—Ä–≤–∏—Å –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'
        else
          echo '‚ÑπÔ∏è –°–µ—Ä–≤–∏—Å —É–∂–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'
        fi
      "

      # –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
      ssh $DEPLOY_USER@$DEPLOY_SERVER "
        echo 'üîß –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π...'
        sudo mkdir -p $DEPLOY_PATH
        sudo chown -R www-data:www-data $DEPLOY_PATH
        sudo chmod -R 755 $DEPLOY_PATH
      "

      # –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º —Ñ–∞–π–ª—ã
      echo 'üìÅ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º —Ñ–∞–π–ª—ã...'
      if [ -f "deployment_package.tar.gz" ]; then
        echo 'üóúÔ∏è –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–∂–∞—Ç—ã–π –∞—Ä—Ö–∏–≤ –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏'
        scp deployment_package.tar.gz $DEPLOY_USER@$DEPLOY_SERVER:/tmp/
        ssh $DEPLOY_USER@$DEPLOY_SERVER "
          cd $DEPLOY_PATH
          sudo rm -rf ./*
          sudo tar -xzf /tmp/deployment_package.tar.gz -C $DEPLOY_PATH
          sudo rm -f /tmp/deployment_package.tar.gz
          echo '‚úÖ –ê—Ä—Ö–∏–≤ —Ä–∞—Å–ø–∞–∫–æ–≤–∞–Ω'
        "
      else
        echo 'üìÅ –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ–±—ã—á–Ω—É—é —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é'
        rsync -avz --delete deployment_package/ $DEPLOY_USER@$DEPLOY_SERVER:$DEPLOY_PATH/
      fi

      # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∞–≤–∞ –ø–æ—Å–ª–µ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
      ssh $DEPLOY_USER@$DEPLOY_SERVER "
        echo 'üîß –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞...'
        sudo chown -R www-data:www-data $DEPLOY_PATH
        sudo find $DEPLOY_PATH -type d -exec chmod 755 {} \;
        sudo find $DEPLOY_PATH -type f -exec chmod 644 {} \;
        sudo chmod +x $DEPLOY_PATH/app.py
      "

      # –ü–µ—Ä–µ—Å–æ–∑–¥–∞–µ–º –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ
      ssh $DEPLOY_USER@$DEPLOY_SERVER "
        echo 'üêç –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º Python –æ–∫—Ä—É–∂–µ–Ω–∏–µ...'
        cd $DEPLOY_PATH

        # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä–æ–µ venv –µ—Å–ª–∏ –µ—Å—Ç—å
        if [ -d 'venv' ]; then
          sudo rm -rf venv
        fi

        # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–µ venv
        sudo python3 -m venv venv --prompt flask_helpdesk
        sudo chown -R www-data:www-data venv/

        # –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
        sudo -u www-data venv/bin/pip install --upgrade pip
        sudo -u www-data venv/bin/pip install -r requirements.txt

        echo '‚úÖ Python –æ–∫—Ä—É–∂–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ'
      "

      # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º systemd —Å–µ—Ä–≤–∏—Å
      ssh $DEPLOY_USER@$DEPLOY_SERVER "
        echo '‚öôÔ∏è –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º systemd —Å–µ—Ä–≤–∏—Å...'

        # –ö–æ–ø–∏—Ä—É–µ–º service —Ñ–∞–π–ª
        sudo cp $DEPLOY_PATH/flask-helpdesk.service /etc/systemd/system/
        sudo systemctl daemon-reload
        sudo systemctl enable $SERVICE_NAME

        echo '‚úÖ Systemd —Å–µ—Ä–≤–∏—Å –Ω–∞—Å—Ç—Ä–æ–µ–Ω'
      "

      # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–∏—Å
      ssh $DEPLOY_USER@$DEPLOY_SERVER "
        echo '‚ñ∂Ô∏è –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–∏—Å...'
        sudo systemctl start $SERVICE_NAME

        # –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞
        sleep 5

        if sudo systemctl is-active --quiet $SERVICE_NAME; then
          echo '‚úÖ –°–µ—Ä–≤–∏—Å –∑–∞–ø—É—â–µ–Ω —É—Å–ø–µ—à–Ω–æ'
        else
          echo '‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–∞'
          sudo systemctl status $SERVICE_NAME
          exit 1
        fi
      "

      echo "üéâ –î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!"
  rules:
    - if: '$CI_COMMIT_REF_NAME == "main"'
      when: always

# ============ –≠–¢–ê–ü 6: –ü–û–°–¢-–î–ï–ü–õ–û–ô –ü–†–û–í–ï–†–ö–ò ============
post_deploy_verification:
  stage: post-deploy
  image: alpine:latest
  before_script:
    - apk add --no-cache openssh-client curl
  script:
    - |
      # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
      echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏..."
      if [ -z "$SSH_PRIVATE_KEY" ] || [ -z "$DEPLOY_SERVER" ] || [ -z "$DEPLOY_USER" ]; then
        echo "‚ÑπÔ∏è –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–µ–ø–ª–æ—è –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã - –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—é"
        echo "‚úÖ –î–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–æ–±–∞–≤—å—Ç–µ SSH_PRIVATE_KEY, DEPLOY_SERVER, DEPLOY_USER –≤ GitLab CI/CD Settings"
        exit 0
      fi

      echo "‚úÖ –í—Å–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"

      # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º SSH —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –ø—Ä–∞–≤–∞–º–∏ –¥–æ—Å—Ç—É–ø–∞
      eval $(ssh-agent -s)

      # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ SSH –∫–ª—é—á–∞
      - echo "üîê –ù–∞—Å—Ç—Ä–æ–π–∫–∞ SSH –∫–ª—é—á–∞ —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –ø—Ä–∞–≤–∞–º–∏..."
      - |
        if [ -f "$SSH_PRIVATE_KEY" ]; then
          echo "üìÅ SSH_PRIVATE_KEY —Å–æ–¥–µ—Ä–∂–∏—Ç –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É: $SSH_PRIVATE_KEY"
          SSH_KEY_CONTENT="$SSH_PRIVATE_KEY"
        else
          echo "üìù SSH_PRIVATE_KEY —Å–æ–¥–µ—Ä–∂–∏—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –∫–ª—é—á–∞"
          # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª –¥–ª—è SSH –∫–ª—é—á–∞ —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –ø—Ä–∞–≤–∞–º–∏
          SSH_KEY_CONTENT=$(mktemp)

          # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –ª–∏ —Å -----BEGIN (–æ–±—ã—á–Ω—ã–π –∫–ª—é—á) –∏–ª–∏ —ç—Ç–æ base64
          if echo "$SSH_PRIVATE_KEY" | head -c 10 | grep -q "^-----BEGIN"; then
            echo "üîë –û–±—ã—á–Ω—ã–π SSH –∫–ª—é—á"
            printf '%s\n' "$SSH_PRIVATE_KEY" > "$SSH_KEY_CONTENT"
          else
            echo "üîê Base64 –∫–æ–¥–∏—Ä–æ–≤–∞–Ω–Ω—ã–π SSH –∫–ª—é—á, –¥–µ–∫–æ–¥–∏—Ä—É–µ–º"
            echo "$SSH_PRIVATE_KEY" | base64 -d > "$SSH_KEY_CONTENT"
          fi

          chmod 600 "$SSH_KEY_CONTENT"
        fi

      # –î–æ–±–∞–≤–ª—è–µ–º –∫–ª—é—á –≤ SSH –∞–≥–µ–Ω—Ç
      if ! ssh-add "$SSH_KEY_CONTENT"; then
        echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å SSH –∫–ª—é—á –≤ –∞–≥–µ–Ω—Ç"
        # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –º—ã –µ–≥–æ —Å–æ–∑–¥–∞–ª–∏
        if [ "$SSH_KEY_CONTENT" != "$SSH_PRIVATE_KEY" ]; then
          rm -f "$SSH_KEY_CONTENT"
        fi
        exit 1
      fi

      # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ (—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –º—ã –µ–≥–æ —Å–æ–∑–¥–∞–ª–∏)
      if [ "$SSH_KEY_CONTENT" != "$SSH_PRIVATE_KEY" ]; then
        rm -f "$SSH_KEY_CONTENT"
      fi

      mkdir -p ~/.ssh
      chmod 700 ~/.ssh
      ssh-keyscan -H $DEPLOY_SERVER >> ~/.ssh/known_hosts

      echo "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –¥–µ–ø–ª–æ—è..."

      # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
      SERVICE_NAME=${SERVICE_NAME:-flask-helpdesk}

      # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–∏—Å–∞
      ssh $DEPLOY_USER@$DEPLOY_SERVER "
        echo 'üìä –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–∞:'
        sudo systemctl status $SERVICE_NAME --no-pager

        echo 'üìù –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏:'
        sudo journalctl -u $SERVICE_NAME --no-pager -n 10
      "

      # –ü—Ä–æ–≤–µ—Ä–∫–∞ HTTP –æ—Ç–≤–µ—Ç–∞
      ssh $DEPLOY_USER@$DEPLOY_SERVER "
        echo 'üåê –ü—Ä–æ–≤–µ—Ä—è–µ–º HTTP –æ—Ç–≤–µ—Ç...'
        if curl -f -s -o /dev/null http://localhost:5000; then
          echo '‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –æ—Ç–≤–µ—á–∞–µ—Ç –ø–æ HTTP'
        else
          echo '‚ùå –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç –ø–æ HTTP'
          exit 1
        fi
      "

      # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞
      ssh $DEPLOY_USER@$DEPLOY_SERVER "
        echo 'üîß –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞...'
        ls -la ${DEPLOY_PATH:-/var/www/flask_helpdesk}/
        echo '‚úÖ –ü—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –ø—Ä–æ–≤–µ—Ä–µ–Ω—ã'
      "

      echo "‚úÖ –í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è –¥–µ–ø–ª–æ—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!"
  rules:
    - if: '$CI_COMMIT_REF_NAME == "main"'
      when: always

# ============ ROLLBACK –ó–ê–î–ê–ß–ê (–í–†–£–ß–ù–£–Æ) ============
rollback_deployment:
  stage: deploy
  image: alpine:latest
  before_script:
    - apk add --no-cache openssh-client
  script:
    - |
      # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
      echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è –æ—Ç–∫–∞—Ç–∞..."
      if [ -z "$SSH_PRIVATE_KEY" ] || [ -z "$DEPLOY_SERVER" ] || [ -z "$DEPLOY_USER" ]; then
        echo "‚ÑπÔ∏è –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–µ–ø–ª–æ—è –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã - –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –æ—Ç–∫–∞—Ç"
        echo "‚úÖ –î–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–æ–±–∞–≤—å—Ç–µ SSH_PRIVATE_KEY, DEPLOY_SERVER, DEPLOY_USER –≤ GitLab CI/CD Settings"
        exit 1
      fi

      echo "‚úÖ –í—Å–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ—Ç–∫–∞—Ç–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"

      # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º SSH —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –ø—Ä–∞–≤–∞–º–∏ –¥–æ—Å—Ç—É–ø–∞
      eval $(ssh-agent -s)

      # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ SSH –∫–ª—é—á–∞
      - echo "üîê –ù–∞—Å—Ç—Ä–æ–π–∫–∞ SSH –∫–ª—é—á–∞ —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –ø—Ä–∞–≤–∞–º–∏..."
      - |
        if [ -f "$SSH_PRIVATE_KEY" ]; then
          echo "üìÅ SSH_PRIVATE_KEY —Å–æ–¥–µ—Ä–∂–∏—Ç –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É: $SSH_PRIVATE_KEY"
          SSH_KEY_CONTENT="$SSH_PRIVATE_KEY"
        else
          echo "üìù SSH_PRIVATE_KEY —Å–æ–¥–µ—Ä–∂–∏—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –∫–ª—é—á–∞"
          # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª –¥–ª—è SSH –∫–ª—é—á–∞ —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –ø—Ä–∞–≤–∞–º–∏
          SSH_KEY_CONTENT=$(mktemp)

          # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è –ª–∏ —Å -----BEGIN (–æ–±—ã—á–Ω—ã–π –∫–ª—é—á) –∏–ª–∏ —ç—Ç–æ base64
          if echo "$SSH_PRIVATE_KEY" | head -c 10 | grep -q "^-----BEGIN"; then
            echo "üîë –û–±—ã—á–Ω—ã–π SSH –∫–ª—é—á"
            printf '%s\n' "$SSH_PRIVATE_KEY" > "$SSH_KEY_CONTENT"
          else
            echo "üîê Base64 –∫–æ–¥–∏—Ä–æ–≤–∞–Ω–Ω—ã–π SSH –∫–ª—é—á, –¥–µ–∫–æ–¥–∏—Ä—É–µ–º"
            echo "$SSH_PRIVATE_KEY" | base64 -d > "$SSH_KEY_CONTENT"
          fi

          chmod 600 "$SSH_KEY_CONTENT"
        fi

      # –î–æ–±–∞–≤–ª—è–µ–º –∫–ª—é—á –≤ SSH –∞–≥–µ–Ω—Ç
      if ! ssh-add "$SSH_KEY_CONTENT"; then
        echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å SSH –∫–ª—é—á –≤ –∞–≥–µ–Ω—Ç"
        # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –º—ã –µ–≥–æ —Å–æ–∑–¥–∞–ª–∏
        if [ "$SSH_KEY_CONTENT" != "$SSH_PRIVATE_KEY" ]; then
          rm -f "$SSH_KEY_CONTENT"
        fi
        exit 1
      fi

      # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ (—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –º—ã –µ–≥–æ —Å–æ–∑–¥–∞–ª–∏)
      if [ "$SSH_KEY_CONTENT" != "$SSH_PRIVATE_KEY" ]; then
        rm -f "$SSH_KEY_CONTENT"
      fi

      mkdir -p ~/.ssh
      chmod 700 ~/.ssh
      ssh-keyscan -H $DEPLOY_SERVER >> ~/.ssh/known_hosts

      echo "üîÑ –í—ã–ø–æ–ª–Ω—è–µ–º –æ—Ç–∫–∞—Ç –∫ –ø—Ä–µ–¥—ã–¥—É—â–µ–π –≤–µ—Ä—Å–∏–∏..."

      # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
      DEPLOY_PATH=${DEPLOY_PATH:-/var/www/flask_helpdesk}
      BACKUP_PATH=${BACKUP_PATH:-/var/backups/flask_helpdesk}
      SERVICE_NAME=${SERVICE_NAME:-flask-helpdesk}

      ssh $DEPLOY_USER@$DEPLOY_SERVER "
        # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–∫—É—â–∏–π —Å–µ—Ä–≤–∏—Å
        sudo systemctl stop $SERVICE_NAME

        # –ù–∞—Ö–æ–¥–∏–º –ø–æ—Å–ª–µ–¥–Ω–∏–π –±—ç–∫–∞–ø
        LAST_BACKUP=\$(ls -t $BACKUP_PATH/backup_* | head -n 1)

        if [ -z \"\$LAST_BACKUP\" ]; then
          echo '‚ùå –ë—ç–∫–∞–ø—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã'
          exit 1
        fi

        echo 'üîÑ –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–∑ –±—ç–∫–∞–ø–∞:' \$LAST_BACKUP

        # –£–¥–∞–ª—è–µ–º —Ç–µ–∫—É—â—É—é –≤–µ—Ä—Å–∏—é –∏ –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –±—ç–∫–∞–ø
        sudo rm -rf $DEPLOY_PATH
        sudo cp -r \$LAST_BACKUP $DEPLOY_PATH
        sudo chown -R www-data:www-data $DEPLOY_PATH

        # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–∏—Å
        sudo systemctl start $SERVICE_NAME

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
        if sudo systemctl is-active --quiet $SERVICE_NAME; then
          echo '‚úÖ –û—Ç–∫–∞—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ'
        else
          echo '‚ùå –û—à–∏–±–∫–∞ –ø–æ—Å–ª–µ –æ—Ç–∫–∞—Ç–∞'
          sudo systemctl status $SERVICE_NAME
          exit 1
        fi
      "

      echo "‚úÖ –û—Ç–∫–∞—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!"
  rules:
    - if: '$CI_COMMIT_REF_NAME == "main"'
      when: manual
      allow_failure: false
