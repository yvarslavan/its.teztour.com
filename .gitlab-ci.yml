stages:
  - validate
  - test
  - build
  - deploy

variables:
  DEPLOY_PATH: "/opt/www"
  SERVICE_NAME: "flask-helpdesk"
  BACKUP_PATH: "/opt/backups/flask_helpdesk"
  DEPLOY_DOMAIN: "its.tez-tour.com"

# ============ –≠–¢–ê–ü 1: –í–ê–õ–ò–î–ê–¶–ò–Ø (–ë–ï–ó –¢–ï–ì–û–í) ============
validate_syntax:
  stage: validate
  image: python:3.9-slim
  script:
    - echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞ Python..."
    - python -m py_compile app.py || echo "‚ö†Ô∏è app.py –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –µ—Å—Ç—å –æ—à–∏–±–∫–∏ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞"
    - echo "‚úÖ –í–∞–ª–∏–¥–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
  rules:
    - if: '$CI_COMMIT_REF_NAME == "main"'
  allow_failure: true

# ============ –≠–¢–ê–ü 2: –ü–†–û–°–¢–û–ï –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï ============
run_basic_tests:
  stage: test
  image: python:3.9-slim
  before_script:
    - apt-get update -qq && apt-get install -y -qq git
    - pip install --upgrade pip
  script:
    - echo "üß™ –ë–∞–∑–æ–≤–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ requirements.txt..."
    - pip install -r requirements.txt || echo "‚ö†Ô∏è –ü—Ä–æ–±–ª–µ–º—ã —Å requirements.txt"
    - echo "‚úÖ –ë–∞–∑–æ–≤–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ"
  rules:
    - if: '$CI_COMMIT_REF_NAME == "main"'
  allow_failure: true

# ============ –≠–¢–ê–ü 3: –°–û–ó–î–ê–ù–ò–ï –ü–ê–ö–ï–¢–ê ============
build_package:
  stage: build
  image: alpine:latest
  before_script:
    - apk add --no-cache tar gzip
  script:
    - echo "üì¶ –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ—Å—Ç–æ–≥–æ –ø–∞–∫–µ—Ç–∞ –¥–ª—è –¥–µ–ø–ª–æ—è..."
    - mkdir -p deployment_package
    - echo "–ö–æ–ø–∏—Ä—É–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ —Ñ–∞–π–ª—ã"
    - cp app.py deployment_package/ 2>/dev/null || echo "‚ö†Ô∏è app.py –Ω–µ –Ω–∞–π–¥–µ–Ω"
    - cp requirements.txt deployment_package/ 2>/dev/null || echo "‚ö†Ô∏è requirements.txt –Ω–µ –Ω–∞–π–¥–µ–Ω"
    - cp config.ini deployment_package/ 2>/dev/null || echo "‚ö†Ô∏è config.ini –Ω–µ –Ω–∞–π–¥–µ–Ω"
    - cp *.py deployment_package/ 2>/dev/null || echo "‚ö†Ô∏è –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ .py —Ñ–∞–π–ª—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
    - echo "–ö–æ–ø–∏—Ä—É–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –µ—Å–ª–∏ –µ—Å—Ç—å"
    - cp -r blog/ deployment_package/ 2>/dev/null || echo "‚ÑπÔ∏è blog/ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
    - cp -r static/ deployment_package/ 2>/dev/null || echo "‚ÑπÔ∏è static/ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
    - cp -r templates/ deployment_package/ 2>/dev/null || echo "‚ÑπÔ∏è templates/ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
    - cp -r migrations/ deployment_package/ 2>/dev/null || echo "‚ÑπÔ∏è migrations/ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
    - echo "–ö–æ–ø–∏—Ä—É–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã –¥–ª—è —Å–µ—Ä–≤–µ—Ä–∞"
    - cp flask-helpdesk.service.redhat deployment_package/flask-helpdesk.service 2>/dev/null || echo "‚ÑπÔ∏è flask-helpdesk.service.redhat –Ω–µ –Ω–∞–π–¥–µ–Ω"
    - cp flask-helpdesk.nginx.conf deployment_package/ 2>/dev/null || echo "‚ÑπÔ∏è flask-helpdesk.nginx.conf –Ω–µ –Ω–∞–π–¥–µ–Ω"
    - echo "–°–æ–∑–¥–∞–µ–º –∞—Ä—Ö–∏–≤"
    - cd deployment_package && tar -czf ../deployment_package.tar.gz . && cd ..
    - echo "üì¶ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø–∞–∫–µ—Ç–∞:"
    - tar -tvf deployment_package.tar.gz | head -n 20
    - echo "‚úÖ –ü–∞–∫–µ—Ç —Å–æ–∑–¥–∞–Ω"
    - du -h deployment_package.tar.gz
  artifacts:
    paths:
      - deployment_package.tar.gz
    expire_in: 1 day
  rules:
    - if: '$CI_COMMIT_REF_NAME == "main"'

# ============ –≠–¢–ê–ü 4: –î–ï–ü–õ–û–ô (–£–ü–†–û–©–ï–ù–ù–´–ô) ============
deploy_to_server:
  stage: deploy
  image: alpine:latest
  before_script:
    - apk add --no-cache openssh-client
  script:
    - echo "üöÄ –ù–∞—á–∏–Ω–∞–µ–º —É–ø—Ä–æ—â–µ–Ω–Ω—ã–π –¥–µ–ø–ª–æ–π..."
    - |
      if [ -z "$SSH_PRIVATE_KEY" ] || [ -z "$DEPLOY_SERVER" ] || [ -z "$DEPLOY_USER" ]; then
        echo "‚ÑπÔ∏è –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–µ–ø–ª–æ—è –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã"
        echo "üìã –ù–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –≤ GitLab CI/CD Settings:"
        echo "   - SSH_PRIVATE_KEY (–ø—Ä–∏–≤–∞—Ç–Ω—ã–π SSH –∫–ª—é—á)"
        echo "   - DEPLOY_SERVER (IP —Å–µ—Ä–≤–µ—Ä–∞: 10.7.74.252)"
        echo "   - DEPLOY_USER (–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: deploy)"
        echo "‚úÖ –ü–∞–∫–µ—Ç –≥–æ—Ç–æ–≤ –∫ –¥–µ–ø–ª–æ—é"
        exit 0
      fi
    - echo "‚úÖ –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–µ–ø–ª–æ—è –Ω–∞–π–¥–µ–Ω—ã"
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan -H $DEPLOY_SERVER >> ~/.ssh/known_hosts
    - echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–µ—Ä—É..."
    - ssh -o ConnectTimeout=30 $DEPLOY_USER@$DEPLOY_SERVER "echo 'SSH —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç'"
    - echo "üìÅ –ü–µ—Ä–µ–¥–∞—á–∞ —Ñ–∞–π–ª–æ–≤ –Ω–∞ —Å–µ—Ä–≤–µ—Ä..."
    - |
      cat deployment_package.tar.gz | ssh $DEPLOY_USER@$DEPLOY_SERVER "
        cd /opt/www || sudo mkdir -p /opt/www
        sudo tar -xzf -
        echo '‚úÖ –§–∞–π–ª—ã —Ä–∞—Å–ø–∞–∫–æ–≤–∞–Ω—ã –≤ /opt/www'
      "
    - echo "üéâ –ë–∞–∑–æ–≤—ã–π –¥–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à–µ–Ω!"
    - echo "üîß –î–ª—è –ø–æ–ª–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ:"
    - echo "   sudo systemctl restart flask-helpdesk"
  rules:
    - if: '$CI_COMMIT_REF_NAME == "main"'
  allow_failure: false
