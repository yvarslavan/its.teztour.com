stages:
  - validate
  - test
  - build
  - pre-deploy
  - deploy
  - post-deploy

variables:
  DEPLOY_PATH: "/var/www/flask_helpdesk"
  SERVICE_NAME: "flask-helpdesk"
  BACKUP_PATH: "/var/backups/flask_helpdesk"
  PYTHON_VERSION: "3.11"
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  AFTER_SCRIPT_IGNORE_ERRORS: false

cache:
  paths:
    - .cache/pip/

# ============ –≠–¢–ê–ü 1: –í–ê–õ–ò–î–ê–¶–ò–Ø ============
validate_project:
  stage: validate
  image: python:3.11-slim
  script:
    - echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞..."
    - |
      if [ ! -f "requirements.txt" ]; then
        echo "‚ùå –§–∞–π–ª requirements.txt –Ω–µ –Ω–∞–π–¥–µ–Ω"
        exit 1
      fi
      if [ ! -f "app.py" ]; then
        echo "‚ùå –§–∞–π–ª app.py –Ω–µ –Ω–∞–π–¥–µ–Ω"
        exit 1
      fi
      if [ ! -f "flask-helpdesk.service" ]; then
        echo "‚ùå –§–∞–π–ª flask-helpdesk.service –Ω–µ –Ω–∞–π–¥–µ–Ω"
        exit 1
      fi
    - echo "‚úÖ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞ –≤–∞–ª–∏–¥–Ω–∞"
    - echo "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞:"
    - find . -name "*.py" | wc -l | xargs echo "Python —Ñ–∞–π–ª–æ–≤:"
    - find . -name "*.html" | wc -l | xargs echo "HTML —à–∞–±–ª–æ–Ω–æ–≤:"
    - find . -name "*.css" | wc -l | xargs echo "CSS —Ñ–∞–π–ª–æ–≤:"
    - find . -name "*.js" | wc -l | xargs echo "JavaScript —Ñ–∞–π–ª–æ–≤:"
  only:
    - main
    - develop
    - merge_requests

# ============ –≠–¢–ê–ü 2: –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï ============
test_dependencies:
  stage: test
  image: python:3.11-slim
  before_script:
    - apt-get update -qy
    - apt-get install -y gcc g++ libffi-dev libssl-dev default-libmysqlclient-dev pkg-config
    - python -m venv venv
    - source venv/bin/activate
    - pip install --upgrade pip
  script:
    - source venv/bin/activate
    - echo "üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
    - pip install -r requirements.txt
    - echo "‚úÖ –í—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ"
  only:
    - main
    - develop
    - merge_requests

test_flask_import:
  stage: test
  image: python:3.11-slim
  script:
    - echo "üß™ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ Flask –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
    - pip install --upgrade pip
    - pip install -r requirements.txt
    - python -c "from blog import create_app; print('‚úÖ Flask –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ')"
    - python -c "import flask; print('Flask –≤–µ—Ä—Å–∏—è:', flask.__version__)"
  only:
    - main
    - develop
    - merge_requests

# ============ –≠–¢–ê–ü 3: –°–ë–û–†–ö–ê ============
build_deployment_package:
  stage: build
  image: python:3.11-slim
  script:
    - echo "üì¶ –°–æ–∑–¥–∞–Ω–∏–µ deployment –ø–∞–∫–µ—Ç–∞..."
    - apt-get update && apt-get install -y rsync
    - mkdir -p deployment_package
    - |
      rsync -av --exclude='.git' --exclude='.gitlab-ci.yml' --exclude='deployment_package' \
            --exclude='__pycache__' --exclude='*.pyc' --exclude='.pytest_cache' \
            --exclude='venv' --exclude='.venv' --exclude='node_modules' \
            ./ deployment_package/
    - echo "‚úÖ Deployment –ø–∞–∫–µ—Ç —Å–æ–∑–¥–∞–Ω"
    - du -sh deployment_package/
  artifacts:
    paths:
      - deployment_package/
    expire_in: 1 hour
  only:
    - main

# ============ –≠–¢–ê–ü 4: –ü–†–ï–î–í–ê–†–ò–¢–ï–õ–¨–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê ============
pre_deploy_checks:
  stage: pre-deploy
  image: alpine:latest
  before_script:
    - apk add --no-cache openssh-client curl
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan -H $DEPLOY_SERVER >> ~/.ssh/known_hosts
  script:
    - echo "üîç –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–µ—Ä–≤–µ—Ä–∞..."
    - |
      # –ü—Ä–æ–≤–µ—Ä–∫–∞ SSH –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
      if ! ssh $DEPLOY_USER@$DEPLOY_SERVER "echo 'SSH —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ OK'"; then
        echo "‚ùå –û—à–∏–±–∫–∞ SSH –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è"
        exit 1
      fi
    - |
      # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ –º–µ—Å—Ç–∞ (–º–∏–Ω–∏–º—É–º 1GB)
      AVAILABLE_SPACE=$(ssh $DEPLOY_USER@$DEPLOY_SERVER "df $DEPLOY_PATH | awk 'NR==2 {print \$4}'")
      if [ "$AVAILABLE_SPACE" -lt 1048576 ]; then
        echo "‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ –º–µ—Å—Ç–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ"
        exit 1
      fi
      echo "‚úÖ –°–≤–æ–±–æ–¥–Ω–æ–≥–æ –º–µ—Å—Ç–∞: $(($AVAILABLE_SPACE / 1024)) MB"
    - |
      # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞
      ssh $DEPLOY_USER@$DEPLOY_SERVER "
        if [ ! -w '$DEPLOY_PATH' ]; then
          echo '‚ùå –ù–µ—Ç –ø—Ä–∞–≤ –∑–∞–ø–∏—Å–∏ –≤ $DEPLOY_PATH'
          exit 1
        fi
        echo '‚úÖ –ü—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã'
      "
    - |
      # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–∏—Å–∞
      ssh $DEPLOY_USER@$DEPLOY_SERVER "
        if ! sudo systemctl is-active --quiet $SERVICE_NAME; then
          echo '‚ö†Ô∏è –°–µ—Ä–≤–∏—Å $SERVICE_NAME –Ω–µ –∑–∞–ø—É—â–µ–Ω, –Ω–æ —ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ –¥–ª—è –ø–µ—Ä–≤–æ–≥–æ –¥–µ–ø–ª–æ—è'
        else
          echo '‚úÖ –°–µ—Ä–≤–∏—Å $SERVICE_NAME –∞–∫—Ç–∏–≤–µ–Ω'
        fi
      "
    - echo "‚úÖ –í—Å–µ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã"
  only:
    - main

# ============ –≠–¢–ê–ü 5: –î–ï–ü–õ–û–ô ============
deploy_to_server:
  stage: deploy
  image: alpine:latest
  before_script:
    - apk add --no-cache openssh-client rsync
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan -H $DEPLOY_SERVER >> ~/.ssh/known_hosts
  script:
    - echo "üöÄ –ù–∞—á–∏–Ω–∞–µ–º –¥–µ–ø–ª–æ–π –Ω–∞ —Å–µ—Ä–≤–µ—Ä..."
    - |
      # –°–æ–∑–¥–∞–µ–º –±—ç–∫–∞–ø —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞
      ssh $DEPLOY_USER@$DEPLOY_SERVER "
        echo 'üíæ –°–æ–∑–¥–∞–µ–º –±—ç–∫–∞–ø...'
        if [ -d '$DEPLOY_PATH' ]; then
          sudo mkdir -p $BACKUP_PATH
          sudo cp -r $DEPLOY_PATH $BACKUP_PATH/backup_\$(date +%Y%m%d_%H%M%S)
          echo '‚úÖ –ë—ç–∫–∞–ø —Å–æ–∑–¥–∞–Ω'
        fi
      "
    - |
      # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–µ—Ä–≤–∏—Å
      ssh $DEPLOY_USER@$DEPLOY_SERVER "
        echo '‚èπÔ∏è –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–µ—Ä–≤–∏—Å...'
        if sudo systemctl is-active --quiet $SERVICE_NAME; then
          sudo systemctl stop $SERVICE_NAME
          echo '‚úÖ –°–µ—Ä–≤–∏—Å –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'
        else
          echo '‚ÑπÔ∏è –°–µ—Ä–≤–∏—Å —É–∂–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'
        fi
      "
    - |
      # –£–±–µ–∂–¥–∞–µ–º—Å—è —á—Ç–æ –≤—Å–µ –ø—Ä–∞–≤–∞ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –ø–µ—Ä–µ–¥ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–µ–π
      ssh $DEPLOY_USER@$DEPLOY_SERVER "
        echo 'üîß –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –ø–µ—Ä–µ–¥ –¥–µ–ø–ª–æ–µ–º...'
        sudo mkdir -p $DEPLOY_PATH
        sudo chown -R www-data:www-data $DEPLOY_PATH
        sudo chmod -R 755 $DEPLOY_PATH
      "
    - |
      # –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º —Ñ–∞–π–ª—ã
      echo 'üìÅ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º —Ñ–∞–π–ª—ã...'
      rsync -avz --delete deployment_package/ $DEPLOY_USER@$DEPLOY_SERVER:$DEPLOY_PATH/
    - |
      # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∞–≤–∞ –ø–æ—Å–ª–µ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
      ssh $DEPLOY_USER@$DEPLOY_SERVER "
        echo 'üîß –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –ø–æ—Å–ª–µ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏...'
        sudo chown -R www-data:www-data $DEPLOY_PATH
        sudo find $DEPLOY_PATH -type d -exec chmod 755 {} \;
        sudo find $DEPLOY_PATH -type f -exec chmod 644 {} \;
        sudo chmod +x $DEPLOY_PATH/app.py
      "
    - |
      # –ü–µ—Ä–µ—Å–æ–∑–¥–∞–µ–º –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ
      ssh $DEPLOY_USER@$DEPLOY_SERVER "
        echo 'üêç –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º Python –æ–∫—Ä—É–∂–µ–Ω–∏–µ...'
        cd $DEPLOY_PATH

        # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä–æ–µ venv –µ—Å–ª–∏ –µ—Å—Ç—å
        if [ -d 'venv' ]; then
          sudo rm -rf venv
        fi

        # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–µ venv
        sudo python3 -m venv venv --prompt flask_helpdesk
        sudo chown -R www-data:www-data venv/

        # –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
        sudo -u www-data venv/bin/pip install --upgrade pip
        sudo -u www-data venv/bin/pip install -r requirements.txt

        echo '‚úÖ Python –æ–∫—Ä—É–∂–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ'
      "
    - |
      # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
      ssh $DEPLOY_USER@$DEPLOY_SERVER "
        echo 'üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ...'
        cd $DEPLOY_PATH

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ
        sudo -u www-data venv/bin/python -c 'from blog import create_app; print(\"‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ\")'
      "
    - |
      # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º systemd —Å–µ—Ä–≤–∏—Å
      ssh $DEPLOY_USER@$DEPLOY_SERVER "
        echo '‚öôÔ∏è –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º systemd —Å–µ—Ä–≤–∏—Å...'

        # –ö–æ–ø–∏—Ä—É–µ–º service —Ñ–∞–π–ª
        sudo cp $DEPLOY_PATH/flask-helpdesk.service /etc/systemd/system/
        sudo systemctl daemon-reload
        sudo systemctl enable $SERVICE_NAME

        echo '‚úÖ Systemd —Å–µ—Ä–≤–∏—Å –Ω–∞—Å—Ç—Ä–æ–µ–Ω'
      "
    - |
      # –§–∏–Ω–∞–ª—å–Ω–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–∞–≤
      ssh $DEPLOY_USER@$DEPLOY_SERVER "
        echo 'üîß –§–∏–Ω–∞–ª—å–Ω–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–∞–≤...'
        sudo chown -R www-data:www-data $DEPLOY_PATH
        sudo chmod -R 755 $DEPLOY_PATH

        # –û—Å–æ–±—ã–µ –ø—Ä–∞–≤–∞ –¥–ª—è –≤–∞–∂–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
        sudo chmod 644 $DEPLOY_PATH/requirements.txt
        sudo chmod 755 $DEPLOY_PATH/app.py

        echo '‚úÖ –í—Å–µ –ø—Ä–∞–≤–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã'
      "
    - |
      # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–∏—Å
      ssh $DEPLOY_USER@$DEPLOY_SERVER "
        echo '‚ñ∂Ô∏è –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–∏—Å...'
        sudo systemctl start $SERVICE_NAME

        # –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞
        sleep 5

        if sudo systemctl is-active --quiet $SERVICE_NAME; then
          echo '‚úÖ –°–µ—Ä–≤–∏—Å –∑–∞–ø—É—â–µ–Ω —É—Å–ø–µ—à–Ω–æ'
        else
          echo '‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–∞'
          sudo systemctl status $SERVICE_NAME
          exit 1
        fi
      "
    - echo "üéâ –î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!"
  only:
    - main

# ============ –≠–¢–ê–ü 6: –ü–û–°–¢-–î–ï–ü–õ–û–ô –ü–†–û–í–ï–†–ö–ò ============
post_deploy_verification:
  stage: post-deploy
  image: alpine:latest
  before_script:
    - apk add --no-cache openssh-client curl
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan -H $DEPLOY_SERVER >> ~/.ssh/known_hosts
  script:
    - echo "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –¥–µ–ø–ª–æ—è..."
    - |
      # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–∏—Å–∞
      ssh $DEPLOY_USER@$DEPLOY_SERVER "
        echo 'üìä –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–∞:'
        sudo systemctl status $SERVICE_NAME --no-pager

        echo 'üìù –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏:'
        sudo journalctl -u $SERVICE_NAME --no-pager -n 10
      "
    - |
      # –ü—Ä–æ–≤–µ—Ä–∫–∞ HTTP –æ—Ç–≤–µ—Ç–∞
      ssh $DEPLOY_USER@$DEPLOY_SERVER "
        echo 'üåê –ü—Ä–æ–≤–µ—Ä—è–µ–º HTTP –æ—Ç–≤–µ—Ç...'
        if curl -f -s -o /dev/null http://localhost:5000; then
          echo '‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –æ—Ç–≤–µ—á–∞–µ—Ç –ø–æ HTTP'
        else
          echo '‚ùå –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç –ø–æ HTTP'
          exit 1
        fi
      "
    - |
      # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞
      ssh $DEPLOY_USER@$DEPLOY_SERVER "
        echo 'üîê –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞:'
        ls -la $DEPLOY_PATH/
        echo 'üêç –ü—Ä–∞–≤–∞ venv:'
        ls -la $DEPLOY_PATH/venv/
      "
    - |
      # –§–∏–Ω–∞–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç
      ssh $DEPLOY_USER@$DEPLOY_SERVER "
        echo 'üìà –û–¢–ß–ï–¢ –û –î–ï–ü–õ–û–ï:'
        echo '=================='
        echo '–°–µ—Ä–≤–∏—Å:' \$(sudo systemctl is-active $SERVICE_NAME)
        echo 'PID:' \$(sudo systemctl show $SERVICE_NAME --property=MainPID --value)
        echo '–í—Ä–µ–º—è –∑–∞–ø—É—Å–∫–∞:' \$(sudo systemctl show $SERVICE_NAME --property=ActiveEnterTimestamp --value)
        echo '–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø–∞–º—è—Ç–∏:' \$(sudo systemctl show $SERVICE_NAME --property=MemoryCurrent --value | numfmt --to=iec)
        echo '=================='
      "
    - echo "‚úÖ –ü–æ—Å—Ç-–¥–µ–ø–ª–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞–≤–µ—Ä—à–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!"
  only:
    - main

# ============ ROLLBACK –ó–ê–î–ê–ß–ê (–í–†–£–ß–ù–£–Æ) ============
rollback_deployment:
  stage: deploy
  image: alpine:latest
  before_script:
    - apk add --no-cache openssh-client
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan -H $DEPLOY_SERVER >> ~/.ssh/known_hosts
  script:
    - echo "üîÑ –í—ã–ø–æ–ª–Ω—è–µ–º –æ—Ç–∫–∞—Ç –∫ –ø—Ä–µ–¥—ã–¥—É—â–µ–π –≤–µ—Ä—Å–∏–∏..."
    - |
      ssh $DEPLOY_USER@$DEPLOY_SERVER "
        # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–∫—É—â–∏–π —Å–µ—Ä–≤–∏—Å
        sudo systemctl stop $SERVICE_NAME

        # –ù–∞—Ö–æ–¥–∏–º –ø–æ—Å–ª–µ–¥–Ω–∏–π –±—ç–∫–∞–ø
        LAST_BACKUP=\$(ls -t $BACKUP_PATH/backup_* | head -n 1)

        if [ -z \"\$LAST_BACKUP\" ]; then
          echo '‚ùå –ë—ç–∫–∞–ø—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã'
          exit 1
        fi

        echo 'üîÑ –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–∑ –±—ç–∫–∞–ø–∞:' \$LAST_BACKUP

        # –£–¥–∞–ª—è–µ–º —Ç–µ–∫—É—â—É—é –≤–µ—Ä—Å–∏—é –∏ –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –±—ç–∫–∞–ø
        sudo rm -rf $DEPLOY_PATH
        sudo cp -r \$LAST_BACKUP $DEPLOY_PATH
        sudo chown -R www-data:www-data $DEPLOY_PATH

        # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–∏—Å
        sudo systemctl start $SERVICE_NAME

        echo '‚úÖ –û—Ç–∫–∞—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ'
      "
  when: manual
  only:
    - main
