#!/usr/bin/env python
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º —Å –ø–æ–¥–ø–∏—Å–∫–∞–º–∏ –Ω–∞ push-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
"""
import os
import sys
from datetime import datetime, timezone

# –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â–∏–π –∫–∞—Ç–∞–ª–æ–≥ –≤ sys.path
sys.path.insert(0, os.path.abspath('.'))

try:
    from flask import Flask
    from blog import db, create_app
    from blog.models import User, PushSubscription

    app = create_app()

    with app.app_context():
        print("–ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ü–†–û–ë–õ–ï–ú –° PUSH-–£–í–ï–î–û–ú–õ–ï–ù–ò–Ø–ú–ò")
        print("=" * 50)

        # 1. –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –≤—Å–µ –ø–æ–¥–ø–∏—Å–∫–∏ –≤ —Ç–∞–±–ª–∏—Ü–µ PushSubscription
        print("\n1. –ê–∫—Ç–∏–≤–∞—Ü–∏—è –ø–æ–¥–ø–∏—Å–æ–∫...")
        all_subscriptions = PushSubscription.query.all()

        for sub in all_subscriptions:
            sub.is_active = True
            sub.last_used = datetime.now(timezone.utc)
            print(f"  ‚úÖ –ü–æ–¥–ø–∏—Å–∫–∞ ID {sub.id} –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞")

        # 2. –°–≤—è–∑—ã–≤–∞–µ–º –∫–∞–∂–¥—É—é –ø–æ–¥–ø–∏—Å–∫—É —Å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
        print("\n2. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–≤—è–∑–µ–π —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏...")

        user_ids = set([sub.user_id for sub in all_subscriptions])
        users = User.query.filter(User.id.in_(user_ids)).all()

        for user in users:
            user_subs = PushSubscription.query.filter_by(user_id=user.id).all()
            if user_subs:
                user.browser_notifications_enabled = True
                print(f"  ‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.username} (ID: {user.id}) –∏–º–µ–µ—Ç {len(user_subs)} –ø–æ–¥–ø–∏—Å–æ–∫ - —Ñ–ª–∞–≥ –≤–∫–ª—é—á–µ–Ω")
            else:
                user.browser_notifications_enabled = False
                print(f"  ‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.username} (ID: {user.id}) –Ω–µ –∏–º–µ–µ—Ç –ø–æ–¥–ø–∏—Å–æ–∫ - —Ñ–ª–∞–≥ –≤—ã–∫–ª—é—á–µ–Ω")

        # 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –≤–∫–ª—é—á–µ–Ω–Ω—ã–º —Ñ–ª–∞–≥–æ–º, –Ω–æ –±–µ–∑ –ø–æ–¥–ø–∏—Å–æ–∫
        print("\n3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –≤–∫–ª—é—á–µ–Ω–Ω—ã–º —Ñ–ª–∞–≥–æ–º, –Ω–æ –±–µ–∑ –ø–æ–¥–ø–∏—Å–æ–∫...")

        users_with_flag = User.query.filter_by(browser_notifications_enabled=True).all()
        for user in users_with_flag:
            user_subs = PushSubscription.query.filter_by(user_id=user.id).all()
            if not user_subs:
                user.browser_notifications_enabled = False
                print(f"  ‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.username} (ID: {user.id}) –∏–º–µ–µ—Ç –≤–∫–ª—é—á–µ–Ω–Ω—ã–π —Ñ–ª–∞–≥, –Ω–æ –Ω–µ –∏–º–µ–µ—Ç –ø–æ–¥–ø–∏—Å–æ–∫ - —Ñ–ª–∞–≥ –≤—ã–∫–ª—é—á–µ–Ω")

        # 4. –£–¥–∞–ª–µ–Ω–∏–µ –¥—É–±–ª–∏—Ä—É—é—â–∏—Ö –ø–æ–¥–ø–∏—Å–æ–∫ (–µ—Å–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø–æ–¥–ø–∏—Å–æ–∫ —Å –æ–¥–∏–Ω–∞–∫–æ–≤—ã–º endpoint)
        print("\n4. –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥—É–±–ª–∏—Ä—É—é—â–∏—Ö –ø–æ–¥–ø–∏—Å–æ–∫...")

        # –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –ø–æ–¥–ø–∏—Å–∫–∏ –ø–æ endpoint
        endpoint_to_subs = {}
        for sub in all_subscriptions:
            if sub.endpoint not in endpoint_to_subs:
                endpoint_to_subs[sub.endpoint] = []
            endpoint_to_subs[sub.endpoint].append(sub)

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –¥—É–±–ª–∏–∫–∞—Ç—ã
        for endpoint, subs in endpoint_to_subs.items():
            if len(subs) > 1:
                print(f"  ‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ {len(subs)} –ø–æ–¥–ø–∏—Å–æ–∫ —Å –æ–¥–∏–Ω–∞–∫–æ–≤—ã–º endpoint: {endpoint[:30]}...")
                # –û—Å—Ç–∞–≤–ª—è–µ–º —Å–∞–º—É—é –Ω–æ–≤—É—é –ø–æ–¥–ø–∏—Å–∫—É, —É–¥–∞–ª—è–µ–º –æ—Å—Ç–∞–ª—å–Ω—ã–µ
                sorted_subs = sorted(subs, key=lambda s: s.created_at, reverse=True)
                for sub in sorted_subs[1:]:
                    db.session.delete(sub)
                    print(f"    ‚ùå –£–¥–∞–ª—è–µ–º –¥—É–±–ª–∏—Ä—É—é—â—É—é –ø–æ–¥–ø–∏—Å–∫—É ID {sub.id}")

        # 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø–æ–¥–ø–∏—Å–∫–∏ —Å –ø—É—Å—Ç—ã–º–∏ –ø–æ–ª—è–º–∏
        print("\n5. –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø–æ–¥–ø–∏—Å–∫–∏ —Å –ø—É—Å—Ç—ã–º–∏ –ø–æ–ª—è–º–∏...")

        invalid_subs = PushSubscription.query.filter(
            (PushSubscription.endpoint == None) |
            (PushSubscription.endpoint == '') |
            (PushSubscription.p256dh_key == None) |
            (PushSubscription.p256dh_key == '') |
            (PushSubscription.auth_key == None) |
            (PushSubscription.auth_key == '')
        ).all()

        for sub in invalid_subs:
            db.session.delete(sub)
            print(f"  ‚ùå –£–¥–∞–ª—è–µ–º –Ω–µ–ø–æ–ª–Ω—É—é –ø–æ–¥–ø–∏—Å–∫—É ID {sub.id}")

        # 6. –ê–¥–∞–ø—Ç–∞—Ü–∏—è FCM endpoint –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
        print("\n6. –ê–¥–∞–ø—Ç–∞—Ü–∏—è FCM endpoint –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏...")

        fcm_send_url = "https://fcm.googleapis.com/fcm/send/"
        wp_url = "https://fcm.googleapis.com/wp/"

        for sub in PushSubscription.query.filter(PushSubscription.endpoint.like("%fcm.googleapis.com/fcm/send/%")).all():
            old_endpoint = sub.endpoint
            token = old_endpoint[len(fcm_send_url):]
            sub.endpoint = f"{wp_url}{token}"
            print(f"  ‚úÖ –ê–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–Ω endpoint ID {sub.id}: '{old_endpoint[:30]}...' -> '{sub.endpoint[:30]}...'")

        # 7. –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
        db.session.commit()
        print("\n‚úÖ –í—Å–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö!")

        # 8. –°–≤–æ–¥–∫–∞
        print("\n8. –ò—Ç–æ–≥–æ–≤–∞—è —Å–≤–æ–¥–∫–∞:")

        all_subscriptions = PushSubscription.query.all()
        active_subscriptions = PushSubscription.query.filter_by(is_active=True).count()
        users_with_flag = User.query.filter_by(browser_notifications_enabled=True).count()

        print(f"  üìä –í—Å–µ–≥–æ –ø–æ–¥–ø–∏—Å–æ–∫ –≤ —Å–∏—Å—Ç–µ–º–µ: {len(all_subscriptions)}")
        print(f"  üìä –ê–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–¥–ø–∏—Å–æ–∫: {active_subscriptions}")
        print(f"  üìä –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –≤–∫–ª—é—á–µ–Ω–Ω—ã–º —Ñ–ª–∞–≥–æ–º: {users_with_flag}")

        # 9. –ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        username = input("\n–í–≤–µ–¥–∏—Ç–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ (–∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ Enter, —á—Ç–æ–±—ã –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å): ")
        if username:
            user = User.query.filter_by(username=username).first()
            if user:
                print(f"\n–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ {user.username}:")
                print(f"  ID: {user.id}")
                print(f"  Email: {user.email}")
                print(f"  browser_notifications_enabled: {user.browser_notifications_enabled}")

                user_subs = PushSubscription.query.filter_by(user_id=user.id).all()
                print(f"  –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–¥–ø–∏—Å–æ–∫: {len(user_subs)}")

                for i, sub in enumerate(user_subs):
                    print(f"\n  –ü–æ–¥–ø–∏—Å–∫–∞ #{i+1}:")
                    print(f"    ID: {sub.id}")
                    print(f"    –ê–∫—Ç–∏–≤–Ω–∞: {sub.is_active}")
                    print(f"    –°–æ–∑–¥–∞–Ω–∞: {sub.created_at}")
                    print(f"    –ü–æ—Å–ª–µ–¥–Ω–µ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: {sub.last_used}")
                    print(f"    Endpoint: {sub.endpoint[:50]}...")
                    print(f"    p256dh_key: {sub.p256dh_key[:20]}...")
                    print(f"    auth_key: {sub.auth_key[:10]}...")
            else:
                print(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {username} –Ω–µ –Ω–∞–π–¥–µ–Ω")

except Exception as e:
    print(f"–û—à–∏–±–∫–∞: {e}")
    import traceback
    traceback.print_exc()
