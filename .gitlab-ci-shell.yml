stages:
  - validate
  - build
  - deploy

variables:
  DEPLOY_PATH: "/opt/www"
  SERVICE_NAME: "flask-helpdesk"
  DEPLOY_DOMAIN: "its.tez-tour.com"

# Shell-based CI/CD (–±–µ–∑ Docker)
validate_shell:
  stage: validate
  tags:
    - shell
  script:
    - echo "üîç Shell-based –≤–∞–ª–∏–¥–∞—Ü–∏—è –ø—Ä–æ–µ–∫—Ç–∞..."
    - echo "üìÅ –¢–µ–∫—É—â–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è:"
    - pwd
    - echo "üìã –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø—Ä–æ–µ–∫—Ç–∞:"
    - ls -la
    - echo "üêç –ü—Ä–æ–≤–µ—Ä–∫–∞ Python:"
    - python3 --version || python --version || echo "‚ö†Ô∏è Python –Ω–µ –Ω–∞–π–¥–µ–Ω"
    - echo "‚úÖ Shell –≤–∞–ª–∏–¥–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
  rules:
    - if: '$CI_COMMIT_REF_NAME == "main"'
  allow_failure: true

build_shell:
  stage: build
  tags:
    - shell
  script:
    - echo "üì¶ Shell-based —Å–±–æ—Ä–∫–∞ –ø–∞–∫–µ—Ç–∞..."
    - mkdir -p deployment_package
    - echo "üìã –ö–æ–ø–∏—Ä—É–µ–º —Ñ–∞–π–ª—ã –ø—Ä–æ–µ–∫—Ç–∞:"

    # –ö–æ–ø–∏—Ä—É–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ —Ñ–∞–π–ª—ã
    - cp app.py deployment_package/ 2>/dev/null && echo "‚úÖ app.py" || echo "‚ö†Ô∏è app.py –Ω–µ –Ω–∞–π–¥–µ–Ω"
    - cp requirements.txt deployment_package/ 2>/dev/null && echo "‚úÖ requirements.txt" || echo "‚ö†Ô∏è requirements.txt –Ω–µ –Ω–∞–π–¥–µ–Ω"
    - cp config.ini deployment_package/ 2>/dev/null && echo "‚úÖ config.ini" || echo "‚ö†Ô∏è config.ini –Ω–µ –Ω–∞–π–¥–µ–Ω"
    - cp *.py deployment_package/ 2>/dev/null && echo "‚úÖ Python —Ñ–∞–π–ª—ã" || echo "‚ö†Ô∏è –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ .py —Ñ–∞–π–ª—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"

    # –ö–æ–ø–∏—Ä—É–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    - cp -r blog/ deployment_package/ 2>/dev/null && echo "‚úÖ blog/" || echo "‚ÑπÔ∏è blog/ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
    - cp -r static/ deployment_package/ 2>/dev/null && echo "‚úÖ static/" || echo "‚ÑπÔ∏è static/ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
    - cp -r templates/ deployment_package/ 2>/dev/null && echo "‚úÖ templates/" || echo "‚ÑπÔ∏è templates/ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
    - cp -r migrations/ deployment_package/ 2>/dev/null && echo "‚úÖ migrations/" || echo "‚ÑπÔ∏è migrations/ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"

    # –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã –¥–ª—è —Å–µ—Ä–≤–µ—Ä–∞
    - cp flask-helpdesk.service.redhat deployment_package/flask-helpdesk.service 2>/dev/null && echo "‚úÖ service —Ñ–∞–π–ª" || echo "‚ÑπÔ∏è service —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω"
    - cp flask-helpdesk.nginx.conf deployment_package/ 2>/dev/null && echo "‚úÖ nginx –∫–æ–Ω—Ñ–∏–≥" || echo "‚ÑπÔ∏è nginx –∫–æ–Ω—Ñ–∏–≥ –Ω–µ –Ω–∞–π–¥–µ–Ω"

    # –°–æ–∑–¥–∞–µ–º –∞—Ä—Ö–∏–≤
    - cd deployment_package
    - tar -czf ../deployment_package_shell.tar.gz .
    - cd ..
    - echo "üì¶ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø–∞–∫–µ—Ç–∞:"
    - tar -tvf deployment_package_shell.tar.gz | head -n 20
    - echo "‚úÖ Shell –ø–∞–∫–µ—Ç —Å–æ–∑–¥–∞–Ω:"
    - ls -lh deployment_package_shell.tar.gz
  artifacts:
    paths:
      - deployment_package_shell.tar.gz
      - deployment_package/
    expire_in: 1 day
  rules:
    - if: '$CI_COMMIT_REF_NAME == "main"'

deploy_shell:
  stage: deploy
  tags:
    - shell
  script:
    - echo "üöÄ Shell-based –¥–µ–ø–ª–æ–π –Ω–∞ —Å–µ—Ä–≤–µ—Ä..."
    - |
      if [ -z "$SSH_PRIVATE_KEY" ] || [ -z "$DEPLOY_SERVER" ] || [ -z "$DEPLOY_USER" ]; then
        echo "‚ÑπÔ∏è –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–µ–ø–ª–æ—è –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã"
        echo ""
        echo "üìã –ù–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –≤ GitLab CI/CD Settings ‚Üí Variables:"
        echo "   üîë SSH_PRIVATE_KEY = –ø—Ä–∏–≤–∞—Ç–Ω—ã–π SSH –∫–ª—é—á (–Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å -----BEGIN)"
        echo "   üåê DEPLOY_SERVER = 10.7.74.252"
        echo "   üë§ DEPLOY_USER = deploy"
        echo ""
        echo "‚úÖ –ü–∞–∫–µ—Ç –≥–æ—Ç–æ–≤ –∫ —Ä—É—á–Ω–æ–º—É –¥–µ–ø–ª–æ—é"
        echo "üì¶ –§–∞–π–ª: deployment_package_shell.tar.gz"
        exit 0
      fi

    - echo "‚úÖ –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–µ–ø–ª–æ—è –Ω–∞–π–¥–µ–Ω—ã"
    - echo "üîê –ù–∞—Å—Ç—Ä–æ–π–∫–∞ SSH..."

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ ssh-agent
    - which ssh-agent || echo "‚ö†Ô∏è ssh-agent –Ω–µ –Ω–∞–π–¥–µ–Ω"
    - eval $(ssh-agent -s) || echo "‚ö†Ô∏è –ü—Ä–æ–±–ª–µ–º–∞ —Å ssh-agent"

    # –î–æ–±–∞–≤–ª—è–µ–º SSH –∫–ª—é—á
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - || echo "‚ö†Ô∏è –ü—Ä–æ–±–ª–µ–º–∞ —Å SSH –∫–ª—é—á–æ–º"

    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º SSH
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan -H $DEPLOY_SERVER >> ~/.ssh/known_hosts 2>/dev/null || echo "‚ö†Ô∏è –ü—Ä–æ–±–ª–µ–º–∞ —Å ssh-keyscan"

    - echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è..."
    - ssh -o ConnectTimeout=30 -o StrictHostKeyChecking=no $DEPLOY_USER@$DEPLOY_SERVER "echo '‚úÖ SSH —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç'" || echo "‚ùå SSH —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"

    - echo "üìÅ –ü–µ—Ä–µ–¥–∞—á–∞ —Ñ–∞–π–ª–æ–≤..."
    - |
      if [ -f "deployment_package_shell.tar.gz" ]; then
        echo "üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∞—Ä—Ö–∏–≤ –Ω–∞ —Å–µ—Ä–≤–µ—Ä..."
        cat deployment_package_shell.tar.gz | ssh -o ConnectTimeout=30 $DEPLOY_USER@$DEPLOY_SERVER "
          cd /opt/www 2>/dev/null || sudo mkdir -p /opt/www
          sudo tar -xzf - 2>/dev/null || echo '‚ö†Ô∏è –ü—Ä–æ–±–ª–µ–º–∞ —Å —Ä–∞—Å–ø–∞–∫–æ–≤–∫–æ–π –∞—Ä—Ö–∏–≤–∞'
          echo '‚úÖ –§–∞–π–ª—ã –ø–µ—Ä–µ–¥–∞–Ω—ã –≤ /opt/www'
          echo 'üìã –°–æ–¥–µ—Ä–∂–∏–º–æ–µ /opt/www:'
          sudo ls -la /opt/www/ 2>/dev/null || echo '‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å /opt/www'
        "
      else
        echo "‚ùå –§–∞–π–ª deployment_package_shell.tar.gz –Ω–µ –Ω–∞–π–¥–µ–Ω"
        exit 1
      fi

    - echo "üéâ Shell –¥–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à–µ–Ω!"
    - echo ""
    - echo "üîß –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ:"
    - echo "   1. ssh deploy@10.7.74.252"
    - echo "   2. sudo systemctl restart flask-helpdesk"
    - echo "   3. sudo systemctl status flask-helpdesk"
    - echo "   4. curl -I http://its.tez-tour.com"
  rules:
    - if: '$CI_COMMIT_REF_NAME == "main"'
  allow_failure: false
