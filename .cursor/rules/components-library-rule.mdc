---
description:
globs:
alwaysApply: false
---

Библиотека готовых компонентов: **НАЗВАНИЕ БИБЛИОТЕКИ**. Используй shadcn mcp.
Используй компоненты из shadcn только, если подходящих компонентов нет в указанной библиотеке.

При создании дизайна сайтов и приложений ты должен **ВСЕГДА** приоритетно использовать готовые компоненты из библиотеки вместо написания компонентов с нуля. Кастомная разработка допустима только в исключительных случаях, когда функционал не может быть реализован через существующие компоненты.

## Пошаговый алгоритм работы

### 1. Анализ технического задания

- **ОБЯЗАТЕЛЬНО** запросить у пользователя техническое задание (ТЗ)
- Если ТЗ отсутствует, составить детальный список вопросов для его получения:
  - Тип проекта (лендинг, веб-приложение, мобильное приложение)
  - Целевая аудитория
  - Основные функции и разделы
  - Стилистические предпочтения
  - Брендинг и цветовая схема
  - Адаптивность и поддерживаемые устройства
- Убедиться в полном понимании требований перед переходом к следующему этапу

### 2. Составление списка необходимых компонентов

На основе ТЗ создать структурированный список всех UI-элементов:

#### Обязательные категории для анализа:

- **Навигация**: меню, хлебные крошки, пагинация
- **Формы**: поля ввода, кнопки, чекбоксы, селекты
- **Контент**: карточки, списки, таблицы, модальные окна
- **Медиа**: галереи, слайдеры, превью изображений
- **Обратная связь**: уведомления, алерты, лоадеры
- **Макет**: хедер, футер, сайдбар, контейнеры

#### Приоритизация компонентов:

1. **Высший приоритет**: Готовые блоки (sections) из библиотеки
2. **Средний приоритет**: Отдельные компоненты для композиции
3. **Низший приоритет**: Кастомные элементы (только при крайней необходимости)

### 3. Исследование документации библиотеки

Для каждого компонента из списка:

#### 3.1. Поиск в официальной документации

- Найти соответствующий компонент на официальном сайте библиотеки
- Изучить все доступные варианты и модификации
- Скопировать примеры кода для базового использования
- Определить возможности кастомизации (props, стили, variants)

#### 3.2. Анализ готовых блоков

- **ПРИОРИТЕТНО** искать готовые секции (Hero sections, Feature sections, etc.)
- Проверить наличие комплексных блоков, покрывающих несколько требований одновременно
- Оценить возможность адаптации блока под конкретные нужды проекта

#### 3.3. Документирование найденных решений

Для каждого компонента записать:
- Название компонента в библиотеке
- Ссылку на документацию
- Базовый пример использования
- Доступные варианты стилизации
- Необходимые props и их значения

### 4. Планирование стилизации

- Определить общую дизайн-систему проекта (цвета, типографика, отступы)
- Создать план адаптации компонентов библиотеки под стиль проекта
- Выбрать подходящие variants или спланировать кастомные стили через Tailwind CSS
- Учесть брендинг и фирменный стиль пользователя

### 5. Реализация дизайна

Только после выполнения всех предыдущих шагов приступать к созданию:

#### 5.1. Порядок работы:

1. Начинать с готовых блоков библиотеки
2. Адаптировать стилизацию под проект
3. Дополнять отдельными компонентами по необходимости
4. Минимизировать кастомный код

#### 5.2. Принципы стилизации:

- Использовать Tailwind CSS классы для кастомизации
- Сохранять структуру и логику работы оригинальных компонентов
- Обеспечивать консистентность дизайна по всему проекту
- Поддерживать адаптивность и доступность

## Исключения и особые случаи

### Когда допустимо создание кастомных компонентов:

- Функционал отсутствует в библиотеке полностью
- Требования настолько специфичны, что адаптация готового компонента неэффективна
- Необходимы уникальные анимации или интерактивность

### Обязательные действия при создании кастомов:

- Документировать причину отказа от компонента
- Следовать дизайн-системе библиотеке в плане стилей и поведения
- Обеспечить совместимость с остальными компонентами проекта

## Контроль качества

### Перед финализацией дизайна проверить:

- ✅ Все возможные компоненты взяты из библиотеки
- ✅ Стилизация соответствует ТЗ и брендингу
- ✅ Адаптивность работает корректно
- ✅ Доступность соблюдена
- ✅ Код оптимизирован и читаем
- ✅ Использованы готовые блоки там, где это возможно

### Документация результата:

- Весь результат нужно задокументировать в файле docs/components-research.md
- Список использованных компонентов библиотеки
- Примененные кастомизации
- Обоснование любых кастомных решений
- Инструкции по дальнейшей поддержке

## Запрещенные действия

- ❌ Начинать работу без изучения ТЗ
- ❌ Писать компоненты с нуля без проверки библиотеки
- ❌ Игнорировать готовые блоки в пользу отдельных компонентов
- ❌ Пропускать этап изучения документации
- ❌ Нарушать структуру и логику работы оригинальных компонентов библиотеки
