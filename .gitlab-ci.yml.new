stages:
  - validate
  - test
  - build
  - pre-deploy
  - deploy
  - post-deploy
  - rollback

variables:
  DEPLOY_PATH: "/opt/www"
  SERVICE_NAME: "flask-helpdesk"
  BACKUP_PATH: "/opt/backups/flask_helpdesk"
  SOCKET_PATH: "/run/gunicorn/gunicorn.sock"
  PYTHON_VERSION: "3.11"
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  AFTER_SCRIPT_IGNORE_ERRORS: false
  DEPLOY_DOMAIN: "its.tez-tour.com"

cache:
  paths:
    - .cache/pip/

# ============ –≠–¢–ê–ü 1: –í–ê–õ–ò–î–ê–¶–ò–Ø ============
validate_syntax:
  stage: validate
  image: python:3.9-slim
  script:
    - echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞ Python..."
    - python -m py_compile app.py
    - echo "‚úÖ –°–∏–Ω—Ç–∞–∫—Å–∏—Å –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω"
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    - if: '$CI_COMMIT_REF_NAME == "main"'

# ============ –≠–¢–ê–ü 2: –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï ============
run_tests:
  stage: test
  image: python:3.9-slim
  before_script:
    - apt-get update -qq && apt-get install -y -qq git
    - pip install --upgrade pip
    - pip install -r requirements.txt
  script:
    - echo "üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤..."
    - python -m pytest tests/ -v || echo "‚ö†Ô∏è –¢–µ—Å—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –∏–ª–∏ –∑–∞–≤–µ—Ä—à–∏–ª–∏—Å—å —Å –æ—à–∏–±–∫–∞–º–∏"
    - echo "‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ"
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    - if: '$CI_COMMIT_REF_NAME == "main"'
  allow_failure: true

# ============ –≠–¢–ê–ü 3: –°–ë–û–†–ö–ê ============
build_deployment_package:
  stage: build
  image: alpine:latest
  before_script:
    - apk add --no-cache tar gzip
  script:
    - echo "üì¶ –°–æ–∑–¥–∞–Ω–∏–µ –ø–∞–∫–µ—Ç–∞ –¥–ª—è –¥–µ–ø–ª–æ—è –Ω–∞ Red Hat —Å–µ—Ä–≤–µ—Ä..."
    - mkdir -p deployment_package
    - cp -r blog/ deployment_package/ || echo "‚ö†Ô∏è –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è blog –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
    - cp -r static/ deployment_package/ || echo "‚ö†Ô∏è –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è static –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
    - cp -r templates/ deployment_package/ || echo "‚ö†Ô∏è –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è templates –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
    - cp -r migrations/ deployment_package/ || echo "‚ö†Ô∏è –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è migrations –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
    - cp app.py deployment_package/ || echo "‚ö†Ô∏è –§–∞–π–ª app.py –Ω–µ –Ω–∞–π–¥–µ–Ω"
    - cp requirements.txt deployment_package/ || echo "‚ö†Ô∏è –§–∞–π–ª requirements.txt –Ω–µ –Ω–∞–π–¥–µ–Ω"
    - cp flask-helpdesk.service.redhat deployment_package/flask-helpdesk.service || echo "‚ö†Ô∏è –§–∞–π–ª flask-helpdesk.service.redhat –Ω–µ –Ω–∞–π–¥–µ–Ω"
    - cp flask-helpdesk.nginx.conf deployment_package/ || echo "‚ö†Ô∏è –§–∞–π–ª flask-helpdesk.nginx.conf –Ω–µ –Ω–∞–π–¥–µ–Ω"
    - cp config.ini deployment_package/ || echo "‚ö†Ô∏è –§–∞–π–ª config.ini –Ω–µ –Ω–∞–π–¥–µ–Ω"
    - cp *.py deployment_package/ || echo "‚ö†Ô∏è –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ .py —Ñ–∞–π–ª—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
    - cd deployment_package && tar -czf ../deployment_package.tar.gz . && cd ..
    - echo "üì¶ –ü–æ–ª–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –∞—Ä—Ö–∏–≤–∞ deployment_package.tar.gz:"
    - tar -tvf deployment_package.tar.gz | head -n 50 || true
    - echo "‚úÖ –ü–∞–∫–µ—Ç –¥–ª—è –¥–µ–ø–ª–æ—è —Å–æ–∑–¥–∞–Ω deployment_package.tar.gz"
    - echo "üìè –†–∞–∑–º–µ—Ä –ø–∞–∫–µ—Ç–∞ $(du -h deployment_package.tar.gz | cut -f1)"
  artifacts:
    paths:
      - deployment_package.tar.gz
      - deployment_package/
    expire_in: 1 day
  rules:
    - if: '$CI_COMMIT_REF_NAME == "main"'

# ============ –≠–¢–ê–ü 4: –ü–†–ï–î–í–ê–†–ò–¢–ï–õ–¨–ù–´–ï –ü–†–û–í–ï–†–ö–ò ============
pre_deploy_checks:
  stage: pre-deploy
  image: alpine:latest
  before_script:
    - apk add --no-cache openssh-client
  script:
    - |
      # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
      echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è Red Hat —Å–µ—Ä–≤–µ—Ä–∞..."
      if [ -z "$SSH_PRIVATE_KEY" ] || [ -z "$DEPLOY_SERVER" ] || [ -z "$DEPLOY_USER" ]; then
        echo "‚ÑπÔ∏è –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–µ–ø–ª–æ—è –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã - –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫–∏"
        echo "‚úÖ –î–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–æ–±–∞–≤—å—Ç–µ SSH_PRIVATE_KEY, DEPLOY_SERVER, DEPLOY_USER –≤ GitLab CI/CD Settings"
        exit 0
      fi

      echo "‚úÖ –í—Å–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–µ–ø–ª–æ—è —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"

      # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º SSH
      eval $(ssh-agent -s)
      echo "üîê –ù–∞—Å—Ç—Ä–æ–π–∫–∞ SSH –∫–ª—é—á–∞..."

      # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª –¥–ª—è SSH –∫–ª—é—á–∞
      SSH_KEY_CONTENT=$(mktemp)

      if echo "$SSH_PRIVATE_KEY" | head -c 10 | grep -q "^-----BEGIN"; then
        echo "üîë –û–±—ã—á–Ω—ã–π SSH –∫–ª—é—á"
        printf '%s\n' "$SSH_PRIVATE_KEY" > "$SSH_KEY_CONTENT"
      else
        echo "üîê Base64 –∫–æ–¥–∏—Ä–æ–≤–∞–Ω–Ω—ã–π SSH –∫–ª—é—á, –¥–µ–∫–æ–¥–∏—Ä—É–µ–º"
        echo "$SSH_PRIVATE_KEY" | base64 -d > "$SSH_KEY_CONTENT"
      fi

      chmod 600 "$SSH_KEY_CONTENT"
      ssh-add "$SSH_KEY_CONTENT"
      rm -f "$SSH_KEY_CONTENT"

      mkdir -p ~/.ssh
      chmod 700 ~/.ssh
      ssh-keyscan -H $DEPLOY_SERVER >> ~/.ssh/known_hosts

      echo "üîç –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ Red Hat —Å–µ—Ä–≤–µ—Ä–∞..."

      # –ü—Ä–æ–≤–µ—Ä–∫–∞ SSH –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
      if ! ssh $DEPLOY_USER@$DEPLOY_SERVER "echo 'SSH —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ OK'"; then
        echo "‚ùå –û—à–∏–±–∫–∞ SSH –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è"
        exit 1
      fi

      # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ –º–µ—Å—Ç–∞ (—Å–ø–µ—Ü–∏—Ñ–∏—á–Ω–æ –¥–ª—è Red Hat)
      echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ –º–µ—Å—Ç–∞ –Ω–∞ Red Hat —Å–µ—Ä–≤–µ—Ä–µ..."
      ssh $DEPLOY_USER@$DEPLOY_SERVER "
        df -h ${DEPLOY_PATH:-/opt/www}
        AVAILABLE_SPACE=\$(df ${DEPLOY_PATH:-/opt/www} | awk 'NR==2 {print \$4}')
        echo \"–î–æ—Å—Ç—É–ø–Ω–æ: \$((\$AVAILABLE_SPACE / 1024)) MB\"

        if [ \"\$AVAILABLE_SPACE\" -lt 512000 ]; then
          echo '‚ö†Ô∏è –ú–∞–ª–æ —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ –º–µ—Å—Ç–∞, –≤—ã–ø–æ–ª–Ω—è–µ–º –æ—á–∏—Å—Ç–∫—É –¥–ª—è Red Hat...'

          # –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ –ª–æ–≥–∏ (Red Hat)
          sudo journalctl --vacuum-time=7d

          # –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ –±—ç–∫–∞–ø—ã
          if [ -d '/opt/backups/flask_helpdesk' ]; then
            cd /opt/backups/flask_helpdesk
            sudo ls -t backup_* 2>/dev/null | tail -n +4 | sudo xargs rm -rf || true
            echo '–°—Ç–∞—Ä—ã–µ –±—ç–∫–∞–ø—ã –æ—á–∏—â–µ–Ω—ã'
          fi

          # –û—á–∏—â–∞–µ–º –∫–µ—à dnf (Red Hat)
          sudo dnf clean all

          # –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–µ—Å—Ç–æ –ø–æ—Å–ª–µ –æ—á–∏—Å—Ç–∫–∏
          AVAILABLE_SPACE_AFTER=\$(df ${DEPLOY_PATH:-/opt/www} | awk 'NR==2 {print \$4}')
          echo \"–ü–æ—Å–ª–µ –æ—á–∏—Å—Ç–∫–∏ –¥–æ—Å—Ç—É–ø–Ω–æ: \$((\$AVAILABLE_SPACE_AFTER / 1024)) MB\"

          if [ \"\$AVAILABLE_SPACE_AFTER\" -lt 256000 ]; then
            echo '‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –º–∞–ª–æ –º–µ—Å—Ç–∞ –¥–∞–∂–µ –ø–æ—Å–ª–µ –æ—á–∏—Å—Ç–∫–∏'
            df -h
            exit 1
          fi
        fi

        echo '‚úÖ –°–≤–æ–±–æ–¥–Ω–æ–≥–æ –º–µ—Å—Ç–∞ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ'
      "

      # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ (Red Hat —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω–æ)
      ssh $DEPLOY_USER@$DEPLOY_SERVER "
        DEPLOY_PATH_CHECK=\${DEPLOY_PATH:-/opt/www}

        if [ ! -w \"\$DEPLOY_PATH_CHECK\" ]; then
          echo '‚ùå –ù–µ—Ç –ø—Ä–∞–≤ –∑–∞–ø–∏—Å–∏ –≤ \$DEPLOY_PATH_CHECK'
          echo 'üîß –ü–æ–ø—ã—Ç–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–∞–≤ –¥–ª—è Red Hat...'

          # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
          sudo mkdir -p \$DEPLOY_PATH_CHECK

          # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ (Red Hat)
          sudo chown -R $DEPLOY_USER:$DEPLOY_USER \$DEPLOY_PATH_CHECK
          sudo chmod -R 755 \$DEPLOY_PATH_CHECK
          sudo chmod g+w \$DEPLOY_PATH_CHECK

          # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–ª—è –¥–µ–ø–ª–æ—è
          sudo chmod 775 \$DEPLOY_PATH_CHECK
          sudo chown $DEPLOY_USER:$DEPLOY_USER \$DEPLOY_PATH_CHECK

          # –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
          if [ ! -w \"\$DEPLOY_PATH_CHECK\" ]; then
            echo '‚ùå –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–µ –ø–æ–º–æ–≥–ª–æ'
            echo 'üìã –í—ã–ø–æ–ª–Ω–∏—Ç–µ –Ω–∞ Red Hat —Å–µ—Ä–≤–µ—Ä–µ:'
            echo '   sudo chmod 775 \$DEPLOY_PATH_CHECK'
            echo '   sudo chown $DEPLOY_USER:$DEPLOY_USER \$DEPLOY_PATH_CHECK'
            exit 1
          else
            echo '‚úÖ –ü—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏'
          fi
        else
          echo '‚úÖ –ü—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã'
        fi
      "

      echo "‚úÖ –í—Å–µ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ Red Hat —Å–µ—Ä–≤–µ—Ä–∞ –ø—Ä–æ–π–¥–µ–Ω—ã"
  rules:
    - if: '$CI_COMMIT_REF_NAME == "main"'
      when: always

# ============ –≠–¢–ê–ü 5: –î–ï–ü–õ–û–ô –ù–ê RED HAT ============
deploy_to_redhat_server:
  stage: deploy
  image: alpine:latest
  before_script:
    - apk add --no-cache openssh-client rsync
  script:
    - |
      # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
      echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è –¥–µ–ø–ª–æ—è –Ω–∞ Red Hat..."
      if [ -z "$SSH_PRIVATE_KEY" ] || [ -z "$DEPLOY_SERVER" ] || [ -z "$DEPLOY_USER" ]; then
        echo "‚ÑπÔ∏è –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–µ–ø–ª–æ—è –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã - –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –¥–µ–ø–ª–æ–π"
        echo "‚úÖ –î–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–æ–±–∞–≤—å—Ç–µ SSH_PRIVATE_KEY, DEPLOY_SERVER, DEPLOY_USER –≤ GitLab CI/CD Settings"
        exit 0
      fi

      echo "‚úÖ –í—Å–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–µ–ø–ª–æ—è —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"

      # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º SSH
      eval $(ssh-agent -s)
      echo "üîê –ù–∞—Å—Ç—Ä–æ–π–∫–∞ SSH –∫–ª—é—á–∞..."

      SSH_KEY_CONTENT=$(mktemp)

      if echo "$SSH_PRIVATE_KEY" | head -c 10 | grep -q "^-----BEGIN"; then
        echo "üîë –û–±—ã—á–Ω—ã–π SSH –∫–ª—é—á"
        printf '%s\n' "$SSH_PRIVATE_KEY" > "$SSH_KEY_CONTENT"
      else
        echo "üîê Base64 –∫–æ–¥–∏—Ä–æ–≤–∞–Ω–Ω—ã–π SSH –∫–ª—é—á, –¥–µ–∫–æ–¥–∏—Ä—É–µ–º"
        echo "$SSH_PRIVATE_KEY" | base64 -d > "$SSH_KEY_CONTENT"
      fi

      chmod 600 "$SSH_KEY_CONTENT"
      ssh-add "$SSH_KEY_CONTENT"
      rm -f "$SSH_KEY_CONTENT"

      mkdir -p ~/.ssh
      chmod 700 ~/.ssh
      ssh-keyscan -H $DEPLOY_SERVER >> ~/.ssh/known_hosts

      echo "üöÄ –ù–∞—á–∏–Ω–∞–µ–º –¥–µ–ø–ª–æ–π –Ω–∞ Red Hat —Å–µ—Ä–≤–µ—Ä..."

      # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
      DEPLOY_PATH=${DEPLOY_PATH:-/opt/www}
      BACKUP_PATH=${BACKUP_PATH:-/opt/backups/flask_helpdesk}
      SERVICE_NAME=${SERVICE_NAME:-flask-helpdesk}

      # –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ –±—ç–∫–∞–ø—ã (–æ—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ 3 –ø–æ—Å–ª–µ–¥–Ω–∏—Ö)
      ssh $DEPLOY_USER@$DEPLOY_SERVER "
        echo 'üßπ –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –±—ç–∫–∞–ø—ã –≤ $BACKUP_PATH...'
        if [ -d '$BACKUP_PATH' ]; then
          sudo ls -t $BACKUP_PATH/backup_* 2>/dev/null | tail -n +4 | sudo xargs rm -rf || true
        fi
      "

      # –°–æ–∑–¥–∞–µ–º –±—ç–∫–∞–ø —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞
      ssh $DEPLOY_USER@$DEPLOY_SERVER "
        echo 'üíæ –°–æ–∑–¥–∞–µ–º –±—ç–∫–∞–ø...'
        if [ -d '$DEPLOY_PATH' ]; then
          sudo mkdir -p $BACKUP_PATH
          sudo cp -r $DEPLOY_PATH $BACKUP_PATH/backup_\$(date +%Y%m%d_%H%M%S)
          echo '‚úÖ –ë—ç–∫–∞–ø —Å–æ–∑–¥–∞–Ω'
        fi
      "

      # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–µ—Ä–≤–∏—Å
      ssh $DEPLOY_USER@$DEPLOY_SERVER "
        echo '‚èπÔ∏è –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–µ—Ä–≤–∏—Å –Ω–∞ Red Hat...'
        if sudo systemctl is-active --quiet $SERVICE_NAME; then
          sudo systemctl stop $SERVICE_NAME
          echo '‚úÖ –°–µ—Ä–≤–∏—Å –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'
        else
          echo '‚ÑπÔ∏è –°–µ—Ä–≤–∏—Å —É–∂–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'
        fi
      "

      # –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ (Red Hat —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω–æ)
      ssh $DEPLOY_USER@$DEPLOY_SERVER "
        echo 'üîß –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π –¥–ª—è Red Hat...'
        sudo mkdir -p $DEPLOY_PATH
        sudo chown -R $DEPLOY_USER:$DEPLOY_USER $DEPLOY_PATH
        sudo chmod -R 755 $DEPLOY_PATH
      "

      # –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º —Ñ–∞–π–ª—ã
      echo 'üìÅ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º —Ñ–∞–π–ª—ã –Ω–∞ Red Hat —Å–µ—Ä–≤–µ—Ä...'
      if [ -f "deployment_package.tar.gz" ]; then
        echo 'üóúÔ∏è –ü–µ—Ä–µ–¥–∞—ë–º –∞—Ä—Ö–∏–≤ –∏ —Ä–∞—Å–ø–∞–∫–æ–≤—ã–≤–∞–µ–º –ø–æ—Ç–æ–∫–æ–≤–æ –Ω–∞ Red Hat —Å–µ—Ä–≤–µ—Ä'

        cat deployment_package.tar.gz | ssh $DEPLOY_USER@$DEPLOY_SERVER '
          set -e
          RELEASE_DIR=$(mktemp -d)
          echo "–†–∞—Å–ø–∞–∫–æ–≤–∫–∞ –∞—Ä—Ö–∏–≤–∞ –≤–æ –≤—Ä–µ–º–µ–Ω–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é $RELEASE_DIR –Ω–∞ Red Hat..."
          sudo tar -xzf - -C "$RELEASE_DIR"

          echo "–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º —Ñ–∞–π–ª—ã –≤ $DEPLOY_PATH (–∏—Å–∫–ª—é—á–∞–µ–º blog/db)..."
          sudo rsync -a --no-devices --no-specials \
            --exclude "blog/db" \
            --exclude "sys/**" --exclude "proc/**" --exclude "dev/**" \
            --delete "$RELEASE_DIR/" "$DEPLOY_PATH/"

          echo "–û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤..."
          sudo rm -rf "$RELEASE_DIR"
        '

        echo '‚úÖ –ê—Ä—Ö–∏–≤ –ø–µ—Ä–µ–¥–∞–Ω –∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω –Ω–∞ Red Hat (stream mode)'
      else
        echo 'üìÅ –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ–±—ã—á–Ω—É—é —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é'
        rsync -avz --no-devices --no-specials \
          --exclude "sys/**" --exclude "proc/**" --exclude "dev/**" \
          --delete deployment_package/ $DEPLOY_USER@$DEPLOY_SERVER:$DEPLOY_PATH/
      fi

      # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∞–≤–∞ –ø–æ—Å–ª–µ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ (Red Hat)
      ssh $DEPLOY_USER@$DEPLOY_SERVER "
        echo 'üîß –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –Ω–∞ Red Hat...'
        sudo chown -R $DEPLOY_USER:$DEPLOY_USER $DEPLOY_PATH
        sudo find $DEPLOY_PATH -type d -exec chmod 755 {} \;
        sudo find $DEPLOY_PATH -type f -exec chmod 644 {} \;
        sudo chmod +x $DEPLOY_PATH/app.py
      "

      # –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞ (Red Hat)
      ssh $DEPLOY_USER@$DEPLOY_SERVER "
        echo '‚öôÔ∏è –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞ Red Hat...'
        cd $DEPLOY_PATH
        # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π —Ñ–∞–π–ª
        sudo rm -f .env.production

        echo '# –î–ª—è Red Hat –ø—Ä–æ–¥–∞–∫—à–Ω' | sudo tee .env.production > /dev/null
        echo 'FLASK_ENV=production' | sudo tee -a .env.production > /dev/null
        echo 'FLASK_APP=wsgi.py' | sudo tee -a .env.production > /dev/null
        echo 'ORACLE_CLIENT_PATH=/opt/oracle/instantclient' | sudo tee -a .env.production > /dev/null
        echo 'SQLALCHEMY_DATABASE_URI=sqlite:///blog/db/blog.db?timeout=30' | sudo tee -a .env.production > /dev/null
        echo 'SQLALCHEMY_TRACK_MODIFICATIONS=True' | sudo tee -a .env.production > /dev/null

        # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏—è Oracle
        echo 'SQLALCHEMY_DATABASE_URI_ORACLE_CRM=oracle+oracledb://crm:sunzHa@10.7.23.4:1521/ENIS' | sudo tee -a .env.production > /dev/null
        echo 'SQLALCHEMY_SALES_SCHEMA_URI_ORACLE_SALES=oracle+oracledb://sales:sunzHa1@10.7.23.4:1521/ENIS' | sudo tee -a .env.production > /dev/null

        # –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è MySQL –¥–ª—è Redmine
        echo 'MYSQL_HOST=helpdesk.teztour.com' | sudo tee -a .env.production > /dev/null
        echo 'MYSQL_DATABASE=redmine' | sudo tee -a .env.production > /dev/null
        echo 'MYSQL_USER=easyredmine' | sudo tee -a .env.production > /dev/null
        echo 'MYSQL_PASSWORD=QhAKtwCLGW' | sudo tee -a .env.production > /dev/null

        # –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è MySQL –¥–ª—è Quality
        echo 'MYSQL_QUALITY_HOST=quality.teztour.com' | sudo tee -a .env.production > /dev/null
        echo 'MYSQL_QUALITY_DATABASE=redmine' | sudo tee -a .env.production > /dev/null
        echo 'MYSQL_QUALITY_USER=easyredmine' | sudo tee -a .env.production > /dev/null
        echo 'MYSQL_QUALITY_PASSWORD=QhAKtwCLGW' | sudo tee -a .env.production > /dev/null

        sudo chown $DEPLOY_USER:$DEPLOY_USER .env.production
        sudo chmod 600 .env.production
        echo '‚úÖ –§–∞–π–ª .env.production —Å–æ–∑–¥–∞–Ω/–æ–±–Ω–æ–≤–ª–µ–Ω –¥–ª—è Red Hat'

        # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        sudo mkdir -p $DEPLOY_PATH/blog/db
        sudo chown -R $DEPLOY_USER:$DEPLOY_USER $DEPLOY_PATH/blog/db
        sudo chmod -R 755 $DEPLOY_PATH/blog/db
        echo '‚úÖ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –¥–ª—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö —Å–æ–∑–¥–∞–Ω–∞'
      "

      # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –µ—Å–ª–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ
      ssh $DEPLOY_USER@$DEPLOY_SERVER "
        echo 'üóÑÔ∏è –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö...'
        cd $DEPLOY_PATH
        if [ ! -f 'blog/db/blog.db' ]; then
          echo '–°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö...'
          sudo -u $DEPLOY_USER $DEPLOY_PATH/venv/bin/python -c 'from blog import create_app; from blog.models import db; app = create_app(); app.app_context().push(); db.create_all(); print(\"–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Å–æ–∑–¥–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ\")' || echo '–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö (–≤–æ–∑–º–æ–∂–Ω–æ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç)'
          echo '‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞'
        else
          echo '‚ÑπÔ∏è –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç'
        fi
      "

      # –ü–µ—Ä–µ—Å–æ–∑–¥–∞–µ–º –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ (Red Hat —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω–æ)
      ssh $DEPLOY_USER@$DEPLOY_SERVER "
        echo 'üêç –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º Python –æ–∫—Ä—É–∂–µ–Ω–∏–µ –¥–ª—è Red Hat...'
        cd $DEPLOY_PATH

        # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä–æ–µ venv –µ—Å–ª–∏ –µ—Å—Ç—å
        if [ -d 'venv' ]; then
          sudo rm -rf venv > /dev/null 2>&1
        fi

        # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–µ venv (Red Hat –∏—Å–ø–æ–ª—å–∑—É–µ—Ç python3)
        sudo python3 -m venv venv --prompt flask_helpdesk
        sudo chown -R $DEPLOY_USER:$DEPLOY_USER venv/

        # –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
        sudo -u $DEPLOY_USER venv/bin/pip install --upgrade pip
        sudo -u $DEPLOY_USER venv/bin/pip install -r requirements.txt --quiet

        echo '‚úÖ Python –æ–∫—Ä—É–∂–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ –¥–ª—è Red Hat'
      "

      # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º systemd —Å–µ—Ä–≤–∏—Å (Red Hat)
      ssh $DEPLOY_USER@$DEPLOY_SERVER "
        echo '‚öôÔ∏è –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º systemd —Å–µ—Ä–≤–∏—Å –¥–ª—è Red Hat...'

        # –ö–æ–ø–∏—Ä—É–µ–º service —Ñ–∞–π–ª
        sudo cp $DEPLOY_PATH/flask-helpdesk.service /etc/systemd/system/
        sudo systemctl daemon-reload
        sudo systemctl enable $SERVICE_NAME

        # –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–Ω—Ñ–∏–≥ Nginx –¥–ª—è Red Hat
        if [ -f \"${DEPLOY_PATH}/flask-helpdesk.nginx.conf\" ]; then
          echo 'üåê –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–Ω—Ñ–∏–≥ Nginx –¥–ª—è Red Hat...'
          sudo cp $DEPLOY_PATH/flask-helpdesk.nginx.conf /etc/nginx/conf.d/flask-helpdesk.conf
          # –ó–∞–º–µ–Ω—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é SOCKET_PATH
          sudo sed -i \"s#proxy_pass .*;#proxy_pass http://unix:${SOCKET_PATH};#\" /etc/nginx/conf.d/flask-helpdesk.conf
          # –ó–∞–º–µ–Ω—è–µ–º –¥–æ–º–µ–Ω
          sudo sed -i \"s/server_name .*/server_name ${DEPLOY_DOMAIN};/\" /etc/nginx/conf.d/flask-helpdesk.conf
          sudo nginx -t && sudo systemctl reload nginx
          echo '‚úÖ Nginx –∫–æ–Ω—Ñ–∏–≥ –ø—Ä–∏–º–µ–Ω—ë–Ω –¥–ª—è Red Hat'
        else
          echo '‚ö†Ô∏è Nginx –∫–æ–Ω—Ñ–∏–≥ –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –¥–µ–ø–ª–æ–π –ø–∞–∫–µ—Ç–µ, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º'
        fi

        echo '‚úÖ Systemd —Å–µ—Ä–≤–∏—Å –Ω–∞—Å—Ç—Ä–æ–µ–Ω –¥–ª—è Red Hat'
      "

      # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–∏—Å
      ssh $DEPLOY_USER@$DEPLOY_SERVER "
        echo '‚ñ∂Ô∏è –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–∏—Å –Ω–∞ Red Hat...'
        sudo systemctl start $SERVICE_NAME

        # –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞
        sleep 5

        if sudo systemctl is-active --quiet $SERVICE_NAME; then
          echo '‚úÖ –°–µ—Ä–≤–∏—Å –∑–∞–ø—É—â–µ–Ω —É—Å–ø–µ—à–Ω–æ –Ω–∞ Red Hat'
        else
          echo '‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–∞ –Ω–∞ Red Hat'
          echo 'üìã –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–∞:'
          sudo systemctl status $SERVICE_NAME --no-pager | head -n 30 || true
          echo 'üìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏ —Å–µ—Ä–≤–∏—Å–∞:'
          sudo journalctl -u $SERVICE_NAME -n 20 --no-pager | head -n 50 || true

          echo 'üìã –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ Red Hat:'
          echo 'üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ SELinux:'
          sudo getenforce || echo 'SELinux –Ω–µ –∞–∫—Ç–∏–≤–µ–Ω'
          sudo setsebool -P httpd_can_network_connect on || echo '–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å SELinux'

          echo 'üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–∞ wsgi.py:'
          if [ -f '$DEPLOY_PATH/wsgi.py' ]; then
            echo '‚úÖ wsgi.py –Ω–∞–π–¥–µ–Ω'
            head -10 '$DEPLOY_PATH/wsgi.py'
          else
            echo '‚ùå wsgi.py –Ω–µ –Ω–∞–π–¥–µ–Ω'
          fi

          exit 1
        fi
      "

      echo "üéâ –î–µ–ø–ª–æ–π –Ω–∞ Red Hat —Å–µ—Ä–≤–µ—Ä –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!"
      echo "üåê –°–∞–π—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: https://${DEPLOY_DOMAIN}"
  rules:
    - if: '$CI_COMMIT_REF_NAME == "main"'
      when: always

# ============ –≠–¢–ê–ü 6: –ü–û–°–¢-–î–ï–ü–õ–û–ô –ü–†–û–í–ï–†–ö–ò ============
post_deploy_verification:
  stage: post-deploy
  image: alpine:latest
  before_script:
    - apk add --no-cache openssh-client curl
  script:
    - |
      echo "üîç –ü–æ—Å—Ç-–¥–µ–ø–ª–æ–π –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è Red Hat —Å–µ—Ä–≤–µ—Ä–∞..."
      if [ -z "$SSH_PRIVATE_KEY" ] || [ -z "$DEPLOY_SERVER" ] || [ -z "$DEPLOY_USER" ]; then
        echo "‚ÑπÔ∏è –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–µ–ø–ª–æ—è –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã - –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—é"
        exit 0
      fi

      # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º SSH
      eval $(ssh-agent -s)
      SSH_KEY_CONTENT=$(mktemp)

      if echo "$SSH_PRIVATE_KEY" | head -c 10 | grep -q "^-----BEGIN"; then
        printf '%s\n' "$SSH_PRIVATE_KEY" > "$SSH_KEY_CONTENT"
      else
        echo "$SSH_PRIVATE_KEY" | base64 -d > "$SSH_KEY_CONTENT"
      fi

      chmod 600 "$SSH_KEY_CONTENT"
      ssh-add "$SSH_KEY_CONTENT"
      rm -f "$SSH_KEY_CONTENT"

      mkdir -p ~/.ssh
      chmod 700 ~/.ssh
      ssh-keyscan -H $DEPLOY_SERVER >> ~/.ssh/known_hosts

      # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
      DEPLOY_PATH=${DEPLOY_PATH:-/opt/www}
      SERVICE_NAME=${SERVICE_NAME:-flask-helpdesk}
      DEPLOY_DOMAIN=${DEPLOY_DOMAIN:-its.tez-tour.com}

      # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–∏—Å–∞ –Ω–∞ Red Hat
      ssh $DEPLOY_USER@$DEPLOY_SERVER "
        echo 'üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–∏—Å–∞ –Ω–∞ Red Hat...'
        if sudo systemctl is-active --quiet $SERVICE_NAME; then
          echo '‚úÖ –°–µ—Ä–≤–∏—Å —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ Red Hat'
          sudo systemctl status $SERVICE_NAME --no-pager
        else
          echo '‚ùå –°–µ—Ä–≤–∏—Å –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ Red Hat'
          sudo systemctl status $SERVICE_NAME --no-pager
          exit 1
        fi
      "

      # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤
      ssh $DEPLOY_USER@$DEPLOY_SERVER "
        echo 'üìÅ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤ –¥–µ–ø–ª–æ—è –Ω–∞ Red Hat...'
        if [ -f '$DEPLOY_PATH/app.py' ]; then
          echo '‚úÖ –û—Å–Ω–æ–≤–Ω–æ–π —Ñ–∞–π–ª –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –Ω–∞–π–¥–µ–Ω'
        else
          echo '‚ùå –û—Å–Ω–æ–≤–Ω–æ–π —Ñ–∞–π–ª –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω'
          exit 1
        fi

        if [ -d '$DEPLOY_PATH/venv' ]; then
          echo '‚úÖ –í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ'
        else
          echo '‚ùå –í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ'
          exit 1
        fi
      "

      # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–∫–µ—Ç –∏ HTTP health-check
      ssh $DEPLOY_USER@$DEPLOY_SERVER "
        echo 'üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–∫–µ—Ç–∞ –∏ HTTP health-—á–µ–∫–∞ –Ω–∞ Red Hat...'

        if [ -S '${SOCKET_PATH}' ]; then
          echo '‚úÖ Socket –Ω–∞–π–¥–µ–Ω: ${SOCKET_PATH}'
        else
          echo '‚ùå Socket –Ω–µ –Ω–∞–π–¥–µ–Ω: ${SOCKET_PATH}'
          exit 1
        fi

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–π HTTP-endpoint
        HTTP_CODE=\$(curl -s -o /dev/null -w '%{http_code}' http://127.0.0.1/ 2>/dev/null || echo '000')
        HTTP_CODE=\$(echo \"\$HTTP_CODE\" | tr -d '\r\n')

        if [ \"\$HTTP_CODE\" -ge 200 ] && [ \"\$HTTP_CODE\" -lt 400 ]; then
          echo \"‚úÖ HTTP endpoint / –æ—Ç–≤–µ—Ç–∏–ª \$HTTP_CODE\"
        else
          echo \"‚ùå HTTP endpoint / –≤–µ—Ä–Ω—É–ª –∫–æ–¥ \$HTTP_CODE\"
          exit 1
        fi
      "

      echo "üéâ –ü–æ—Å—Ç-–¥–µ–ø–ª–æ–π –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è Red Hat —Å–µ—Ä–≤–µ—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!"
      echo "üåê –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–∞–π—Ç: https://${DEPLOY_DOMAIN}"
  rules:
    - if: '$CI_COMMIT_REF_NAME == "main"'
      when: always

# ============ –≠–¢–ê–ü 7: –û–¢–ö–ê–¢ (–†–£–ß–ù–û–ô) ============
rollback_deployment:
  stage: rollback
  image: alpine:latest
  before_script:
    - apk add --no-cache openssh-client
  script:
    - |
      echo "üîÑ –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ –æ—Ç–∫–∞—Ç—É –¥–µ–ø–ª–æ—è –Ω–∞ Red Hat —Å–µ—Ä–≤–µ—Ä–µ..."
      if [ -z "$SSH_PRIVATE_KEY" ] || [ -z "$DEPLOY_SERVER" ] || [ -z "$DEPLOY_USER" ]; then
        echo "‚ùå –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–µ–ø–ª–æ—è –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã"
        exit 1
      fi

      # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º SSH
      eval $(ssh-agent -s)
      SSH_KEY_CONTENT=$(mktemp)

      if echo "$SSH_PRIVATE_KEY" | head -c 10 | grep -q "^-----BEGIN"; then
        printf '%s\n' "$SSH_PRIVATE_KEY" > "$SSH_KEY_CONTENT"
      else
        echo "$SSH_PRIVATE_KEY" | base64 -d > "$SSH_KEY_CONTENT"
      fi

      chmod 600 "$SSH_KEY_CONTENT"
      ssh-add "$SSH_KEY_CONTENT"
      rm -f "$SSH_KEY_CONTENT"

      mkdir -p ~/.ssh
      chmod 700 ~/.ssh
      ssh-keyscan -H $DEPLOY_SERVER >> ~/.ssh/known_hosts

      # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
      DEPLOY_PATH=${DEPLOY_PATH:-/opt/www}
      BACKUP_PATH=${BACKUP_PATH:-/opt/backups/flask_helpdesk}
      SERVICE_NAME=${SERVICE_NAME:-flask-helpdesk}

      echo "üîÑ –í—ã–ø–æ–ª–Ω—è–µ–º –æ—Ç–∫–∞—Ç –∫ –ø—Ä–µ–¥—ã–¥—É—â–µ–π –≤–µ—Ä—Å–∏–∏ –Ω–∞ Red Hat..."

      # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–µ—Ä–≤–∏—Å
      ssh $DEPLOY_USER@$DEPLOY_SERVER "
        echo '‚èπÔ∏è –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–µ—Ä–≤–∏—Å –Ω–∞ Red Hat...'
        sudo systemctl stop $SERVICE_NAME
      "

      # –ò—â–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π –±—ç–∫–∞–ø –∏ –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º
      ssh $DEPLOY_USER@$DEPLOY_SERVER "
        echo 'üîç –ü–æ–∏—Å–∫ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –±—ç–∫–∞–ø–∞ –Ω–∞ Red Hat...'
        LATEST_BACKUP=\$(ls -t $BACKUP_PATH/backup_* 2>/dev/null | head -1)

        if [ -z \"\$LATEST_BACKUP\" ]; then
          echo '‚ùå –ë—ç–∫–∞–ø—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã'
          exit 1
        fi

        echo \"üì¶ –ù–∞–π–¥–µ–Ω –±—ç–∫–∞–ø: \$LATEST_BACKUP\"
        echo 'üîÑ –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–∑ –±—ç–∫–∞–ø–∞ –Ω–∞ Red Hat...'

        sudo rm -rf $DEPLOY_PATH/*
        sudo cp -r \$LATEST_BACKUP/* $DEPLOY_PATH/
        sudo chown -R $DEPLOY_USER:$DEPLOY_USER $DEPLOY_PATH

        echo '‚úÖ –§–∞–π–ª—ã –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –Ω–∞ Red Hat'
      "

      # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–∏—Å
      ssh $DEPLOY_USER@$DEPLOY_SERVER "
        echo '‚ñ∂Ô∏è –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–∏—Å –Ω–∞ Red Hat –ø–æ—Å–ª–µ –æ—Ç–∫–∞—Ç–∞...'
        sudo systemctl start $SERVICE_NAME

        sleep 5

        if sudo systemctl is-active --quiet $SERVICE_NAME; then
          echo '‚úÖ –û—Ç–∫–∞—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ –Ω–∞ Red Hat'
        else
          echo '‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –ø–æ—Å–ª–µ –æ—Ç–∫–∞—Ç–∞ –Ω–∞ Red Hat'
          sudo systemctl status $SERVICE_NAME
          exit 1
        fi
      "

      echo "üéâ –û—Ç–∫–∞—Ç –Ω–∞ Red Hat —Å–µ—Ä–≤–µ—Ä–µ –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!"
  rules:
    - if: '$CI_COMMIT_REF_NAME == "main"'
      when: manual
      allow_failure: false
