"""update_user_model_with_is_admin

Revision ID: 0b429be4bc23
Revises: 
Create Date: 2025-06-01 14:18:24.234002

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '0b429be4bc23'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('_alembic_tmp_notifications')
    with op.batch_alter_table('notifications', schema=None) as batch_op:
        batch_op.alter_column('user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('issue_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('date_created',
               existing_type=sa.TEXT(),
               type_=sa.DateTime(),
               existing_nullable=True)
        batch_op.drop_index('uq_idx_notifications_full_duplicate')

    with op.batch_alter_table('notifications_add_notes', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               nullable=False,
               autoincrement=True)
        batch_op.alter_column('user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('issue_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('date_created',
               existing_type=sa.TEXT(),
               type_=sa.DateTime(),
               existing_nullable=True)
        batch_op.drop_index('uq_idx_add_notes_full_duplicate')

    with op.batch_alter_table('posts', schema=None) as batch_op:
        batch_op.alter_column('content',
               existing_type=sa.TEXT(),
               nullable=False)

    with op.batch_alter_table('push_subscriptions', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               nullable=False,
               autoincrement=True)
        batch_op.drop_index('idx_push_subscriptions_active')
        batch_op.drop_index('idx_push_subscriptions_user_active')
        batch_op.drop_index('idx_push_subscriptions_user_id')
        batch_op.create_unique_constraint('unique_user_endpoint', ['user_id', 'endpoint'])

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.alter_column('vpn_end_date',
               existing_type=sa.VARCHAR(length=20),
               type_=sa.String(length=30),
               existing_nullable=True)
        batch_op.alter_column('is_redmine_user',
               existing_type=sa.BOOLEAN(),
               nullable=False,
               existing_server_default=sa.text('(FALSE)'))
        batch_op.alter_column('can_access_quality_control',
               existing_type=sa.BOOLEAN(),
               nullable=False,
               existing_server_default=sa.text('(FALSE)'))
        batch_op.alter_column('is_admin',
               existing_type=sa.INTEGER(),
               type_=sa.Boolean(),
               existing_nullable=False,
               existing_server_default=sa.text('0'))
        batch_op.alter_column('browser_notifications_enabled',
               existing_type=sa.BOOLEAN(),
               nullable=True,
               existing_server_default=sa.text('0'))
        batch_op.drop_index('idx_user_department')
        batch_op.drop_index('idx_user_dept_pos')
        batch_op.drop_index('idx_user_email')
        batch_op.drop_index('idx_user_username')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index('idx_user_username', ['username'], unique=False)
        batch_op.create_index('idx_user_email', ['email'], unique=False)
        batch_op.create_index('idx_user_dept_pos', ['department', 'position'], unique=False)
        batch_op.create_index('idx_user_department', ['department'], unique=False)
        batch_op.alter_column('browser_notifications_enabled',
               existing_type=sa.BOOLEAN(),
               nullable=False,
               existing_server_default=sa.text('0'))
        batch_op.alter_column('is_admin',
               existing_type=sa.Boolean(),
               type_=sa.INTEGER(),
               existing_nullable=False,
               existing_server_default=sa.text('0'))
        batch_op.alter_column('can_access_quality_control',
               existing_type=sa.BOOLEAN(),
               nullable=True,
               existing_server_default=sa.text('(FALSE)'))
        batch_op.alter_column('is_redmine_user',
               existing_type=sa.BOOLEAN(),
               nullable=True,
               existing_server_default=sa.text('(FALSE)'))
        batch_op.alter_column('vpn_end_date',
               existing_type=sa.String(length=30),
               type_=sa.VARCHAR(length=20),
               existing_nullable=True)

    with op.batch_alter_table('push_subscriptions', schema=None) as batch_op:
        batch_op.drop_constraint('unique_user_endpoint', type_='unique')
        batch_op.create_index('idx_push_subscriptions_user_id', ['user_id'], unique=False)
        batch_op.create_index('idx_push_subscriptions_user_active', ['user_id', 'is_active'], unique=False)
        batch_op.create_index('idx_push_subscriptions_active', ['is_active'], unique=False)
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               nullable=True,
               autoincrement=True)

    with op.batch_alter_table('posts', schema=None) as batch_op:
        batch_op.alter_column('content',
               existing_type=sa.TEXT(),
               nullable=True)

    with op.batch_alter_table('notifications_add_notes', schema=None) as batch_op:
        batch_op.create_index('uq_idx_add_notes_full_duplicate', ['user_id', 'issue_id', 'author', 'notes', 'date_created'], unique=1)
        batch_op.alter_column('date_created',
               existing_type=sa.DateTime(),
               type_=sa.TEXT(),
               existing_nullable=True)
        batch_op.alter_column('issue_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               nullable=True,
               autoincrement=True)

    with op.batch_alter_table('notifications', schema=None) as batch_op:
        batch_op.create_index('uq_idx_notifications_full_duplicate', ['user_id', 'issue_id', 'old_status', 'new_status', 'old_subj', 'date_created'], unique=1)
        batch_op.alter_column('date_created',
               existing_type=sa.DateTime(),
               type_=sa.TEXT(),
               existing_nullable=True)
        batch_op.alter_column('issue_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('user_id',
               existing_type=sa.INTEGER(),
               nullable=False)

    op.create_table('_alembic_tmp_notifications',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('user_id', sa.INTEGER(), nullable=True),
    sa.Column('issue_id', sa.INTEGER(), nullable=True),
    sa.Column('old_status', sa.TEXT(), nullable=True),
    sa.Column('new_status', sa.TEXT(), nullable=True),
    sa.Column('old_subj', sa.TEXT(), nullable=True),
    sa.Column('date_created', sa.DATETIME(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    # ### end Alembic commands ###
