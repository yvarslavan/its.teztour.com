/**
 * Force Cache Refresh Script
 * –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫—ç—à–∞ –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π CSS
 */

(function() {
    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è timestamp –∫ URL
    function addTimestamp(url) {
        const timestamp = new Date().getTime();
        const separator = url.includes('?') ? '&' : '?';
        return `${url}${separator}v=${timestamp}`;
    }

    // –û–±–Ω–æ–≤–ª—è–µ–º –≤—Å–µ CSS —Ñ–∞–π–ª—ã
    function refreshCSS() {
        const links = document.querySelectorAll('link[rel="stylesheet"]');
        links.forEach(link => {
            const href = link.getAttribute('href');
            if (href && (href.includes('modern_header_redesign.css') ||
                        href.includes('modern_header_extended.css') ||
                        href.includes('.css'))) {
                // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç link
                const newLink = document.createElement('link');
                newLink.rel = 'stylesheet';
                newLink.href = addTimestamp(href.split('?')[0]);

                // –ó–∞–º–µ–Ω—è–µ–º —Å—Ç–∞—Ä—ã–π link –Ω–æ–≤—ã–º
                link.parentNode.replaceChild(newLink, link);

                console.log(`–û–±–Ω–æ–≤–ª–µ–Ω CSS: ${newLink.href}`);
            }
        });
    }

    // –û—á–∏—â–∞–µ–º localStorage –∏ sessionStorage
    function clearStorage() {
        try {
            localStorage.clear();
            sessionStorage.clear();
            console.log('Storage –æ—á–∏—â–µ–Ω');
        } catch (e) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ storage:', e);
        }
    }

    // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    function forceReload() {
        // –û—á–∏—â–∞–µ–º –∫—ç—à
        clearStorage();

        // –î–æ–±–∞–≤–ª—è–µ–º meta tag –¥–ª—è –æ—Ç–∫–ª—é—á–µ–Ω–∏—è –∫—ç—à–∞
        const metaNoCache = document.createElement('meta');
        metaNoCache.httpEquiv = 'Cache-Control';
        metaNoCache.content = 'no-cache, no-store, must-revalidate';
        document.head.appendChild(metaNoCache);

        const metaPragma = document.createElement('meta');
        metaPragma.httpEquiv = 'Pragma';
        metaPragma.content = 'no-cache';
        document.head.appendChild(metaPragma);

        const metaExpires = document.createElement('meta');
        metaExpires.httpEquiv = 'Expires';
        metaExpires.content = '0';
        document.head.appendChild(metaExpires);

        console.log('–ö—ç—à-–∫–æ–Ω—Ç—Ä–æ–ª—å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
    }

    // –í—ã–ø–æ–ª–Ω—è–µ–º –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    document.addEventListener('DOMContentLoaded', function() {
        console.log('=== Force Cache Refresh –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω ===');
        forceReload();
        refreshCSS();

        // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è —Ä—É—á–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è CSS
        const refreshButton = document.createElement('button');
        refreshButton.innerHTML = 'üîÑ –û–±–Ω–æ–≤–∏—Ç—å CSS';
        refreshButton.style.cssText = `
            position: fixed;
            bottom: 20px;
            right: 20px;
            z-index: 9999;
            padding: 10px 15px;
            background: #2563eb;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-size: 14px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.2);
        `;
        refreshButton.onclick = function() {
            refreshCSS();
            setTimeout(() => {
                window.location.reload(true);
            }, 100);
        };
        document.body.appendChild(refreshButton);
    });

    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ CSS –∫–∞–∂–¥—ã–µ 5 —Å–µ–∫—É–Ω–¥ (–¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏)
    if (window.location.hostname === 'localhost' || window.location.hostname === '127.0.0.1') {
        setInterval(refreshCSS, 5000);
    }
})();
