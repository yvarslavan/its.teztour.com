#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—è browser_notifications_enabled –≤ —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –±–∞–∑—É blog.db
"""

import sqlite3
import os

def add_browser_notifications_field():
    """–î–æ–±–∞–≤–ª—è–µ—Ç –ø–æ–ª–µ browser_notifications_enabled –≤ —Ç–∞–±–ª–∏—Ü—É users"""

    # –ü—É—Ç—å –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    db_path = 'blog.db'

    if not os.path.exists(db_path):
        print(f"‚ùå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: {db_path}")
        return False

    print(f"üîÑ –î–æ–±–∞–≤–ª—è—é –ø–æ–ª–µ browser_notifications_enabled –≤ {db_path}")

    try:
        # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        conn = sqlite3.connect(db_path)
        cursor = conn.cursor()

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –ø–æ–ª—è –≤ —Ç–∞–±–ª–∏—Ü–µ users
        cursor.execute("PRAGMA table_info(users)")
        existing_columns = [column[1] for column in cursor.fetchall()]
        print(f"üìã –°—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –ø–æ–ª—è –≤ —Ç–∞–±–ª–∏—Ü–µ users: {existing_columns}")

        # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–µ browser_notifications_enabled –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
        if 'browser_notifications_enabled' not in existing_columns:
            print("‚ûï –î–æ–±–∞–≤–ª—è—é –ø–æ–ª–µ browser_notifications_enabled...")
            cursor.execute("""
                ALTER TABLE users
                ADD COLUMN browser_notifications_enabled BOOLEAN DEFAULT 0 NOT NULL
            """)
            print("‚úÖ –ü–æ–ª–µ browser_notifications_enabled –¥–æ–±–∞–≤–ª–µ–Ω–æ")
        else:
            print("‚ÑπÔ∏è  –ü–æ–ª–µ browser_notifications_enabled —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã push_subscriptions
        cursor.execute("""
            SELECT name FROM sqlite_master
            WHERE type='table' AND name='push_subscriptions'
        """)

        if not cursor.fetchone():
            print("‚ûï –°–æ–∑–¥–∞—é —Ç–∞–±–ª–∏—Ü—É push_subscriptions...")
            cursor.execute("""
                CREATE TABLE push_subscriptions (
                    id INTEGER PRIMARY KEY AUTOINCREMENT,
                    user_id INTEGER NOT NULL,
                    endpoint TEXT NOT NULL,
                    p256dh_key TEXT NOT NULL,
                    auth_key TEXT NOT NULL,
                    user_agent TEXT,
                    created_at DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL,
                    last_used DATETIME DEFAULT CURRENT_TIMESTAMP NOT NULL,
                    is_active BOOLEAN DEFAULT 1 NOT NULL,
                    FOREIGN KEY (user_id) REFERENCES users (id),
                    UNIQUE (user_id, endpoint)
                )
            """)
            print("‚úÖ –¢–∞–±–ª–∏—Ü–∞ push_subscriptions —Å–æ–∑–¥–∞–Ω–∞")
        else:
            print("‚ÑπÔ∏è  –¢–∞–±–ª–∏—Ü–∞ push_subscriptions —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è
        conn.commit()

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        cursor.execute("PRAGMA table_info(users)")
        updated_columns = [column[1] for column in cursor.fetchall()]
        print(f"üìã –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –ø–æ–ª—è –≤ —Ç–∞–±–ª–∏—Ü–µ users: {updated_columns}")

        conn.close()

        print("üéâ –ü–æ–ª–µ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ!")
        return True

    except sqlite3.Error as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –ø–æ–ª—è: {e}")
        return False
    except Exception as e:
        print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
        return False

if __name__ == "__main__":
    print("üöÄ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—è browser_notifications_enabled")
    print("=" * 50)

    if add_browser_notifications_field():
        print("\nüéâ –ì–æ—Ç–æ–≤–æ! –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∑–∞–ø—É—Å–∫–∞—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ:")
        print("python wsgi.py")
    else:
        print("\n‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å –ø–æ–ª–µ")
