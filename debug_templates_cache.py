#!/usr/bin/env python3
"""
–£—Ç–∏–ª–∏—Ç–∞ –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –∏ –æ—á–∏—Å—Ç–∫–∏ –∫—ç—à–∞ —à–∞–±–ª–æ–Ω–æ–≤ Flask
"""

import os
import shutil
from pathlib import Path
from blog import create_app

def clear_template_cache():
    """–û—á–∏—â–∞–µ—Ç –≤—Å–µ –≤–∏–¥—ã –∫—ç—à–∞ —Å–≤—è–∑–∞–Ω–Ω–æ–≥–æ —Å —à–∞–±–ª–æ–Ω–∞–º–∏"""

    print("üßπ –û—á–∏—Å—Ç–∫–∞ –≤—Å–µ—Ö –≤–∏–¥–æ–≤ –∫—ç—à–∞ —à–∞–±–ª–æ–Ω–æ–≤...")

    # –û—á–∏—â–∞–µ–º Python –∫—ç—à
    cache_dirs = [
        '__pycache__',
        'blog/__pycache__',
        'blog/templates/__pycache__',
    ]

    for cache_dir in cache_dirs:
        if os.path.exists(cache_dir):
            try:
                shutil.rmtree(cache_dir)
                print(f"‚úÖ –£–¥–∞–ª–µ–Ω {cache_dir}")
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è {cache_dir}: {e}")

    # –û—á–∏—â–∞–µ–º .pyc —Ñ–∞–π–ª—ã
    for root, dirs, files in os.walk('.'):
        for file in files:
            if file.endswith('.pyc'):
                try:
                    os.remove(os.path.join(root, file))
                    print(f"‚úÖ –£–¥–∞–ª–µ–Ω {file}")
                except Exception as e:
                    print(f"‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è {file}: {e}")

def diagnose_template_config():
    """–î–∏–∞–≥–Ω–æ—Å—Ç–∏—Ä—É–µ—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é —à–∞–±–ª–æ–Ω–æ–≤ Flask"""

    print("üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —à–∞–±–ª–æ–Ω–æ–≤...")

    try:
        app = create_app()

        print(f"üìä –°–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:")
        print(f"   DEBUG: {app.debug}")
        print(f"   TEMPLATES_AUTO_RELOAD: {app.config.get('TEMPLATES_AUTO_RELOAD')}")
        print(f"   SEND_FILE_MAX_AGE_DEFAULT: {app.config.get('SEND_FILE_MAX_AGE_DEFAULT')}")
        print(f"   jinja_env.auto_reload: {app.jinja_env.auto_reload}")
        print(f"   jinja_env.cache size: {len(app.jinja_env.cache) if hasattr(app.jinja_env, 'cache') else 'N/A'}")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—É—Ç–∏ –∫ —à–∞–±–ª–æ–Ω–∞–º
        print(f"üìÅ –ü—É—Ç–∏ –∫ —à–∞–±–ª–æ–Ω–∞–º:")
        for template_folder in app.jinja_loader.searchpath:
            print(f"   {template_folder}")
            if os.path.exists(template_folder):
                print(f"     ‚úÖ –°—É—â–µ—Å—Ç–≤—É–µ—Ç")
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ñ–∞–π–ª–æ–≤ —à–∞–±–ª–æ–Ω–æ–≤
                templates = [f for f in os.listdir(template_folder) if f.endswith('.html')][:5]
                for template in templates:
                    template_path = os.path.join(template_folder, template)
                    mtime = os.path.getmtime(template_path)
                    print(f"     üìÑ {template} (–∏–∑–º–µ–Ω–µ–Ω: {mtime})")
            else:
                print(f"     ‚ùå –ù–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")

        # –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
        print(f"üåç –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:")
        env_vars = ['FLASK_ENV', 'FLASK_DEBUG', 'TEMPLATES_AUTO_RELOAD', 'PYTHONDONTWRITEBYTECODE']
        for var in env_vars:
            print(f"   {var}: {os.environ.get(var, '–ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù–ê')}")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏: {e}")

def force_template_reload():
    """–ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ—Ç —à–∞–±–ª–æ–Ω—ã"""

    print("üîÑ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ —à–∞–±–ª–æ–Ω–æ–≤...")

    try:
        app = create_app()

        # –û—á–∏—â–∞–µ–º –∫—ç—à Jinja
        if hasattr(app.jinja_env, 'cache'):
            app.jinja_env.cache.clear()
            print("‚úÖ –ö—ç—à Jinja –æ—á–∏—â–µ–Ω")

        # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        app.jinja_env.auto_reload = True
        app.config['TEMPLATES_AUTO_RELOAD'] = True
        app.config['SEND_FILE_MAX_AGE_DEFAULT'] = 0

        print("‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏ —à–∞–±–ª–æ–Ω–æ–≤ –æ–±–Ω–æ–≤–ª–µ–Ω—ã")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏: {e}")

def check_template_modification_time(template_name='tasks.html'):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤—Ä–µ–º—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —à–∞–±–ª–æ–Ω–∞"""

    template_path = f"blog/templates/{template_name}"

    if os.path.exists(template_path):
        mtime = os.path.getmtime(template_path)
        size = os.path.getsize(template_path)
        print(f"üìÑ {template_name}:")
        print(f"   –ü—É—Ç—å: {os.path.abspath(template_path)}")
        print(f"   –ò–∑–º–µ–Ω–µ–Ω: {mtime}")
        print(f"   –†–∞–∑–º–µ—Ä: {size} –±–∞–π—Ç")

        # –ß–∏—Ç–∞–µ–º –ø–µ—Ä–≤—ã–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å—Ç—Ä–æ–∫
        try:
            with open(template_path, 'r', encoding='utf-8') as f:
                lines = f.readlines()[:10]
            print("   –ü–µ—Ä–≤—ã–µ —Å—Ç—Ä–æ–∫–∏:")
            for i, line in enumerate(lines, 1):
                print(f"     {i}: {line.rstrip()}")
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è: {e}")
    else:
        print(f"‚ùå –®–∞–±–ª–æ–Ω {template_name} –Ω–µ –Ω–∞–π–¥–µ–Ω")

if __name__ == "__main__":
    print("üîß –£—Ç–∏–ª–∏—Ç–∞ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –∫—ç—à–∞ —à–∞–±–ª–æ–Ω–æ–≤ Flask")
    print("=" * 50)

    clear_template_cache()
    print()

    diagnose_template_config()
    print()

    force_template_reload()
    print()

    check_template_modification_time('tasks.html')
    print()

    print("üéØ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
    print("1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä —á–µ—Ä–µ–∑ restart_dev_server.bat")
    print("2. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ Ctrl+F5 –¥–ª—è –∂–µ—Å—Ç–∫–æ–π –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏ –≤ –±—Ä–∞—É–∑–µ—Ä–µ")
    print("3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ DEBUG: True –≤ –≤—ã–≤–æ–¥–µ —Å–µ—Ä–≤–µ—Ä–∞")
    print("4. –ï—Å–ª–∏ –ø—Ä–æ–±–ª–µ–º–∞ –æ—Å—Ç–∞–µ—Ç—Å—è, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –∫—ç—à –±—Ä–∞—É–∑–µ—Ä–∞ –≤ DevTools")
