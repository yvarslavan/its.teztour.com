#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±—ç–∫–∞–ø–∞–º–∏ Flask Helpdesk
# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: bash manage_backups.sh [list|clean|keep-latest]

set -e

BACKUP_DIR="/var/www"
BACKUP_PREFIX="flask_helpdesk_backup_"
CURRENT_DIR="flask_helpdesk"

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo -e "${BLUE}üóÇÔ∏è  –ú–µ–Ω–µ–¥–∂–µ—Ä –±—ç–∫–∞–ø–æ–≤ Flask Helpdesk${NC}"
echo "=================================="

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –±—ç–∫–∞–ø–æ–≤
list_backups() {
    echo -e "${YELLOW}üìã –°–ø–∏—Å–æ–∫ —Ç–µ–∫—É—â–∏—Ö –±—ç–∫–∞–ø–æ–≤:${NC}"
    echo ""

    cd "$BACKUP_DIR"

    if ls ${BACKUP_PREFIX}* 1> /dev/null 2>&1; then
        echo -e "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è\t\t\t–†–∞–∑–º–µ—Ä\t\t–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è"
        echo "------------------------------------------------------------"

        for backup in ${BACKUP_PREFIX}*; do
            if [ -d "$backup" ]; then
                size=$(du -sh "$backup" | cut -f1)
                # –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞—Ç—É –∏–∑ –∏–º–µ–Ω–∏ –±—ç–∫–∞–ø–∞
                date_str=$(echo "$backup" | sed "s/${BACKUP_PREFIX}//")
                formatted_date=$(echo "$date_str" | sed 's/\([0-9]\{4\}\)\([0-9]\{2\}\)\([0-9]\{2\}\)-\([0-9]\{2\}\)\([0-9]\{2\}\)\([0-9]\{2\}\)/\3.\2.\1 \4:\5:\6/')
                echo -e "$backup\t$size\t\t$formatted_date"
            fi
        done | sort -k3,3r  # –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –¥–∞—Ç–µ (–Ω–æ–≤—ã–µ —Å–≤–µ—Ä—Ö—É)

        echo ""
        total_size=$(du -sh ${BACKUP_PREFIX}* 2>/dev/null | awk '{sum+=$1} END {print sum}' || echo "0")
        echo -e "${BLUE}üìä –û–±—â–∏–π —Ä–∞–∑–º–µ—Ä –±—ç–∫–∞–ø–æ–≤: $(du -ch ${BACKUP_PREFIX}* 2>/dev/null | tail -1 | cut -f1)${NC}"

        backup_count=$(ls -d ${BACKUP_PREFIX}* 2>/dev/null | wc -l)
        echo -e "${BLUE}üì¶ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –±—ç–∫–∞–ø–æ–≤: $backup_count${NC}"
    else
        echo -e "${YELLOW}‚ö†Ô∏è  –ë—ç–∫–∞–ø—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã${NC}"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ —Å—Ç–∞—Ä—ã—Ö –±—ç–∫–∞–ø–æ–≤ (–æ—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ–¥–Ω–∏–µ N)
keep_latest() {
    local keep_count=${1:-3}  # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –æ—Å—Ç–∞–≤–ª—è–µ–º 3 –ø–æ—Å–ª–µ–¥–Ω–∏—Ö

    echo -e "${YELLOW}üßπ –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –±—ç–∫–∞–ø–æ–≤ (–æ—Å—Ç–∞–≤–ª—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ $keep_count)...${NC}"

    cd "$BACKUP_DIR"

    if ! ls ${BACKUP_PREFIX}* 1> /dev/null 2>&1; then
        echo -e "${YELLOW}‚ö†Ô∏è  –ë—ç–∫–∞–ø—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã${NC}"
        return
    fi

    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –±—ç–∫–∞–ø–æ–≤, –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ –¥–∞—Ç–µ (–Ω–æ–≤—ã–µ —Å–≤–µ—Ä—Ö—É)
    backups=($(ls -dt ${BACKUP_PREFIX}* 2>/dev/null))
    total_backups=${#backups[@]}

    if [ $total_backups -le $keep_count ]; then
        echo -e "${GREEN}‚úÖ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –±—ç–∫–∞–ø–æ–≤ ($total_backups) –Ω–µ –ø—Ä–µ–≤—ã—à–∞–µ—Ç –ª–∏–º–∏—Ç ($keep_count)${NC}"
        return
    fi

    echo -e "${BLUE}üì¶ –ù–∞–π–¥–µ–Ω–æ –±—ç–∫–∞–ø–æ–≤: $total_backups${NC}"
    echo -e "${BLUE}üéØ –û—Å—Ç–∞–≤–ª—è–µ–º: $keep_count${NC}"
    echo -e "${RED}üóëÔ∏è  –£–¥–∞–ª—è–µ–º: $((total_backups - keep_count))${NC}"
    echo ""

    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º, —á—Ç–æ –±—É–¥–µ—Ç —É–¥–∞–ª–µ–Ω–æ
    echo -e "${YELLOW}–ë—É–¥—É—Ç —É–¥–∞–ª–µ–Ω—ã —Å–ª–µ–¥—É—é—â–∏–µ –±—ç–∫–∞–ø—ã:${NC}"
    for ((i=$keep_count; i<$total_backups; i++)); do
        backup=${backups[$i]}
        size=$(du -sh "$backup" | cut -f1)
        echo -e "${RED}‚ùå $backup ($size)${NC}"
    done

    echo ""
    read -p "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å —É–¥–∞–ª–µ–Ω–∏–µ? (y/N): " -n 1 -r
    echo

    if [[ $REPLY =~ ^[Yy]$ ]]; then
        freed_space=0
        for ((i=$keep_count; i<$total_backups; i++)); do
            backup=${backups[$i]}
            size=$(du -sm "$backup" | cut -f1)  # –†–∞–∑–º–µ—Ä –≤ MB
            freed_space=$((freed_space + size))
            echo -e "${RED}üóëÔ∏è  –£–¥–∞–ª—è–µ–º: $backup${NC}"
            rm -rf "$backup"
        done
        echo ""
        echo -e "${GREEN}‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!${NC}"
        echo -e "${GREEN}üíæ –û—Å–≤–æ–±–æ–∂–¥–µ–Ω–æ –º–µ—Å—Ç–∞: ${freed_space}MB${NC}"
    else
        echo -e "${YELLOW}‚ùå –û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞${NC}"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª–Ω–æ–π –æ—á–∏—Å—Ç–∫–∏ –≤—Å–µ—Ö –±—ç–∫–∞–ø–æ–≤ (–∫—Ä–æ–º–µ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ)
clean_all_except_latest() {
    echo -e "${RED}üö® –í–ù–ò–ú–ê–ù–ò–ï: –ë—É–¥—É—Ç —É–¥–∞–ª–µ–Ω—ã –í–°–ï –±—ç–∫–∞–ø—ã –∫—Ä–æ–º–µ —Å–∞–º–æ–≥–æ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ!${NC}"
    keep_latest 1
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –±—ç–∫–∞–ø–æ–≤ —Å—Ç–∞—Ä—à–µ N –¥–Ω–µ–π
clean_old() {
    local days=${1:-7}  # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é —Å—Ç–∞—Ä—à–µ 7 –¥–Ω–µ–π

    echo -e "${YELLOW}üßπ –£–¥–∞–ª–µ–Ω–∏–µ –±—ç–∫–∞–ø–æ–≤ —Å—Ç–∞—Ä—à–µ $days –¥–Ω–µ–π...${NC}"

    cd "$BACKUP_DIR"

    old_backups=$(find . -maxdepth 1 -name "${BACKUP_PREFIX}*" -type d -mtime +$days 2>/dev/null || true)

    if [ -z "$old_backups" ]; then
        echo -e "${GREEN}‚úÖ –°—Ç–∞—Ä—ã—Ö –±—ç–∫–∞–ø–æ–≤ (>$days –¥–Ω–µ–π) –Ω–µ –Ω–∞–π–¥–µ–Ω–æ${NC}"
        return
    fi

    echo -e "${YELLOW}–ù–∞–π–¥–µ–Ω—ã —Å—Ç–∞—Ä—ã–µ –±—ç–∫–∞–ø—ã:${NC}"
    echo "$old_backups" | while read backup; do
        if [ -n "$backup" ] && [ "$backup" != "." ]; then
            size=$(du -sh "$backup" | cut -f1)
            echo -e "${RED}‚ùå $backup ($size)${NC}"
        fi
    done

    echo ""
    read -p "–£–¥–∞–ª–∏—Ç—å —ç—Ç–∏ –±—ç–∫–∞–ø—ã? (y/N): " -n 1 -r
    echo

    if [[ $REPLY =~ ^[Yy]$ ]]; then
        find . -maxdepth 1 -name "${BACKUP_PREFIX}*" -type d -mtime +$days -exec rm -rf {} + 2>/dev/null || true
        echo -e "${GREEN}‚úÖ –°—Ç–∞—Ä—ã–µ –±—ç–∫–∞–ø—ã —É–¥–∞–ª–µ–Ω—ã${NC}"
    else
        echo -e "${YELLOW}‚ùå –û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞${NC}"
    fi
}

# –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞
case "${1:-list}" in
    "list"|"ls")
        list_backups
        ;;
    "clean")
        keep_latest ${2:-3}
        ;;
    "clean-all")
        clean_all_except_latest
        ;;
    "clean-old")
        clean_old ${2:-7}
        ;;
    "keep-latest")
        keep_latest ${2:-3}
        ;;
    "help"|"--help"|"-h")
        echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 [–∫–æ–º–∞–Ω–¥–∞] [–ø–∞—Ä–∞–º–µ—Ç—Ä]"
        echo ""
        echo "–ö–æ–º–∞–Ω–¥—ã:"
        echo "  list, ls              - –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –±—ç–∫–∞–ø–æ–≤"
        echo "  clean [N]             - –û—Å—Ç–∞–≤–∏—Ç—å —Ç–æ–ª—å–∫–æ N –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –±—ç–∫–∞–ø–æ–≤ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 3)"
        echo "  clean-all             - –£–¥–∞–ª–∏—Ç—å –≤—Å–µ –±—ç–∫–∞–ø—ã –∫—Ä–æ–º–µ —Å–∞–º–æ–≥–æ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ"
        echo "  clean-old [N]         - –£–¥–∞–ª–∏—Ç—å –±—ç–∫–∞–ø—ã —Å—Ç–∞—Ä—à–µ N –¥–Ω–µ–π (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 7)"
        echo "  keep-latest [N]       - –¢–æ –∂–µ —á—Ç–æ –∏ clean [N]"
        echo "  help                  - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É"
        echo ""
        echo "–ü—Ä–∏–º–µ—Ä—ã:"
        echo "  $0 list               - –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –±—ç–∫–∞–ø—ã"
        echo "  $0 clean 2            - –û—Å—Ç–∞–≤–∏—Ç—å —Ç–æ–ª—å–∫–æ 2 –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –±—ç–∫–∞–ø–∞"
        echo "  $0 clean-old 3        - –£–¥–∞–ª–∏—Ç—å –±—ç–∫–∞–ø—ã —Å—Ç–∞—Ä—à–µ 3 –¥–Ω–µ–π"
        ;;
    *)
        echo -e "${RED}‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: $1${NC}"
        echo "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ '$0 help' –¥–ª—è —Å–ø—Ä–∞–≤–∫–∏"
        exit 1
        ;;
esac
